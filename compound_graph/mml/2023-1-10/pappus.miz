:: Pappus's Hexagon Theorem in Real Projective Plane
::  by Roland Coghetto
:: 
:: Received June 30, 2021
:: Copyright (c) 2021-2022 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies PRE_TOPC, RVSUM_1, STRUCT_0, TARSKI, REAL_1, XCMPLX_0, ANPROJ_1,
      MCART_1, EUCLID_5, ALGSTR_0, ARYTM_1, ARYTM_3, CARD_1, EUCLID, FINSEQ_1,
      FUNCT_1, MATRIX_1, MATRIX_3, NUMBERS, RELAT_1, SUBSET_1, SUPINF_2,
      VECTSP_1, AFF_2, ANPROJ_2, MATRIXR1, ANPROJ_8, ANPROJ_9, PASCAL,
      PENCIL_1;
 notations PRE_TOPC, RVSUM_1, TARSKI, ORDINAL1, NUMBERS, XCMPLX_0, XREAL_0,
      FUNCT_1, FINSEQ_1, EUCLID, DOMAIN_1, ANPROJ_1, FUNCT_2, VECTSP_1,
      MATRIX_0, MATRIX_1, MATRIX_3, GROUP_1, RLVECT_1, ANPROJ_2, COLLSP,
      EUCLID_5, MATRIXR1, MATRIXR2, MATRIX_6, ANPROJ_8, ANPROJ_9, PASCAL,
      STRUCT_0;
 constructors BINOP_2, FINSEQ_4, MONOID_0, EUCLID_5, MATRIX13, REALSET1,
      ANPROJ_2, MATRIXR2, ANPROJ_8, ANPROJ_9, PASCAL;
 registrations ANPROJ_1, MATRTOP1, STRUCT_0, VECTSP_1, NUMBERS, XREAL_0,
      MEMBERED, MONOID_0, EUCLID, VALUED_0, ANPROJ_2, SUBSET_1, RLTOPSP1,
      XCMPLX_0, PASCAL;
 requirements BOOLE, SUBSET, NUMERALS, ARITHM;
 equalities VECTSP_1, ANPROJ_9, MATRIXR2, PASCAL;
 expansions STRUCT_0, PASCAL;
 theorems MATRIX_9, EUCLID_5, ANPROJ_1, ANPROJ_2, XREAL_0, MATRIXR2, XCMPLX_1,
      FINSEQ_1, MATRIXR1, ANPROJ_8, ANPROJ_9, ORDINAL1, COLLSP, HESSENBE,
      PASCAL, RVSUM_1, ENUMSET1, TARSKI, XBOOLE_0, EUCLID_2, BKMODEL1;

begin :: Preliminaries

reserve a,b,c,d,e,f,g,h,i for Real,
                        M for Matrix of 3,REAL;

theorem Th1:
  M = <*<*a,b,c*>,
        <*d,e,f*>,
        <*g,h,i*>*> implies
  Det M = a*e*i - c*e*g - a*f*h + b*f*g - b*d*i + c*d*h
  proof
    assume
A1: M = <*<*a,b,c*>,
                 <*d,e,f*>,
                 <*g,h,i*>*>;
    reconsider ra = a,rb = b,rc = c, rd = d,re = e,rf = f,
               rg = g,rh = h, ri = i as Element of F_Real by XREAL_0:def 1;
    reconsider M1 = <*<*ra,rb,rc*>,
                      <*rd,re,rf*>,
                      <*rg,rh,ri*>*> as Matrix of 3,F_Real by MATRIXR2:35;
    Det M1 = ra*re*ri - rc*re*rg - ra*rf*rh + rb*rf*rg - rb*rd*ri + rc*rd*rh
      by MATRIX_9:46;
    hence thesis by A1,MATRIXR1:def 1;
  end;

Lm1:
  M = <* <* 0, b, c *>,
         <* d, e, f *>,
         <* g, h, i *> *> implies
  Det M = -c*e*g + b * f * g - b*d*i+c*d*h
  proof
    assume M = <*<*0,b,c*>,
                 <*d,e,f*>,
                 <*g,h,i*>*>;
    then Det M = 0 * e * i - c*e*g - 0 * f *h + b*f*g - b*d*i + c*d*h
      by Th1;
    hence thesis;
  end;

Lm2:
  M = <* <* 0, b, 0 *>,
         <* d, e, f *>,
         <* g, h, i *> *> implies
  Det M = b * f * g - b * d * i
  proof
    assume M = <*<* 0,b,0 *>,
                 <*d,e,f*>,
                 <*g,h,i*>*>;
    then Det M = - 0 * e*g + b*f*g - b*d*i + 0 * d*h by Lm1;
    hence thesis;
  end;

Lm3:
  M = <* <* 0, b, 0 *>,
         <* 0, e, f *>,
         <* g, h, i *> *> implies
  Det M = b * f * g
  proof
    assume M = <*<* 0,b,0 *>,
                 <* 0,e,f*>,
                 <*g,h,i*>*>;
    then Det M = - 0 * e*g + b*f*g - b* 0 *i + 0 * 0 *h by Lm2;
    hence thesis;
  end;

Lm4:
  M =  <* <* a, 0, 0 *>,
          <* d, e, f *>,
          <* 0, h, i *> *> implies
  Det M = a * e * i - a * h * f
  proof
    assume M = <*<* a,0,0 *>,
                 <* d,e,f *>,
                 <* 0,h,i *>*>;
    then Det M = a*e*i - 0 * e* 0 - a*f*h +  0 * f * 0 - 0 *d*i + 0 *d*h
      by Th1;
    hence thesis;
  end;

theorem Th2:
  for P1,P4,P5 being Element of ProjectiveSpace TOP-REAL 3
  for p1,p2,p3,p4,p5 being Element of TOP-REAL 3 st
  p1 is non zero & P1 = Dir p1 &
  p4 is non zero & P4 = Dir p4 &
  p5 is non zero & P5 = Dir p5 &
  P1,P4,P5 are_collinear
  holds
  |{p1,p2,p4}| * |{p1,p3,p5}| = |{p1,p2,p5}| * |{p1,p3,p4}|
  proof
    let P1,P4,P5 being Element of ProjectiveSpace TOP-REAL 3;
    let p1,p2,p3,p4,p5 being Element of TOP-REAL 3;
    assume that
A1: p1 is non zero & P1 = Dir p1 and
A2: p4 is non zero & P4 = Dir p4 and
A3: p5 is non zero & P5 = Dir p5 and
A4: P1,P4,P5 are_collinear;
A5: |{p1,p2,p3}| * |{p1,p4,p5}| - |{p1,p2,p4}| * |{p1,p3,p5}|
      + |{p1,p2,p5}| * |{p1,p3,p4}| = 0 by ANPROJ_8:28;
    |{p1,p4,p5}| = 0 by A1,A2,A3,A4,BKMODEL1:1;
    hence thesis by A5;
  end;

theorem Th3:
  for r416,r415,r413,r418,r419,r412,
  r712,r746,r716,r742,r715,r743,r713,r745,
  r749,r718,r719,r748 being non zero Real st
  (- r412) * (- r713) = (- r413) * (- r712) &
  (- r415) * (- r719) = (- r419) * (- r715) &
  (- r418) * (- r716) = (- r416) * (- r718) &
  (- r745) * r416 = (- r746) * r415 &
  (- r748) * r413 = (- r743) * r418 &
  (- r742) * r419 = (- r749) * r412 &
  r712 * r746 = r716 * r742 &
  r715 * r743 = r713 * r745 holds
  r718 * r749 = r719 * r748
  proof
    let r416,r415,r413,r418,r419,r412,
    r712,r746,r716,r742,r715,r743,r713,r745,
    r749,r718,r719,r748 being non zero Real;
    assume
A1: (- r412) * (- r713) = (- r413) * (- r712) &
    (- r415) * (- r719) = (- r419) * (- r715) &
    (- r418) * (- r716) = (- r416) * (- r718) &
    (- r745) * r416 = (- r746) * r415 &
    (- r748) * r413 = (- r743) * r418 &
    (- r742) * r419 = (- r749) * r412 &
    r712 * r746 = r716 * r742 &
    r715 * r743 = r713 * r745;
    reconsider r146 = - r416 , r145 = - r415 ,
    r143 = - r413 , r148 = - r418 , r149 = - r419 ,
    r142 = - r412 , r172 = - r712 , r476 = - r746 ,
    r176 = - r716 , r472 = - r742 , r175 = - r715 ,
    r473 = - r743 , r173 = - r713 , r475 = - r745 ,
    r478 = - r748 , r479 = - r749 , r178 = - r718 ,
    r179 = - r719 as non zero Real;
A2: (r142 * r173) * (r145 * r179) *
    (r148 * r176) * (r475 * r416) *
    (r478 * r413) * (r472 * r419) *
    (r712 * r746) * (r715 * r743) =
    (r143 * r172) * (r149 * r175) *
    (r146 * r178) * (r476 * r415) *
    (r473 * r418) * (r479 * r412) *
    (r716 * r742) * (r713 * r745) by A1;
    reconsider r1 = (r142 * r173) * r145 *
    (r148 * r176) * (r475 * r416) * r413 * (r472 * r419) *
    (r712 * r746) * (r715 * r743),
    r2 = (r143 * r172) * (r149 * r175) *
    r146 * (r476 * r415) *
    (r473 * r418) * r412 *
    (r716 * r742) * (r713 * r745) as non zero Real;
A3: (r179 * r478) * r1 = (r178 * r479) * r1 by A2;
    r1 <> 0 by ORDINAL1:def 14;
    hence thesis by A3,XCMPLX_1:5;
  end;

begin :: Some technical lemmas proved by Prover9 and translated with help of ott2miz

reserve                           PCPP for CollProjectiveSpace,
        c1,c2,c3,c4,c5,c6,c7,c8,c9,c10 for Element of PCPP;

theorem Th4:
  c2 <> c1 & c3 <> c1 & c3 <> c2 & c4 <> c2 &
  c4 <> c3 & c5 <> c1 & c6 <> c1 & c6 <> c5 &
  c7 <> c5 & c7 <> c6 &
  (not c1,c4,c7 are_collinear) &
  (c1,c4,c2 are_collinear) & (c1,c4,c3 are_collinear) &
  (c1,c7,c5 are_collinear) & (c1,c7,c6 are_collinear) &
  (c4,c5,c8 are_collinear) & (c7,c2,c8 are_collinear) &
  (c4,c6,c9 are_collinear) & (c3,c7,c9 are_collinear) &
  (c2,c6,c10 are_collinear) & (c3,c5,c10 are_collinear) implies
  not c4,c7,c2 are_collinear & not c4,c10,c3 are_collinear &
  not c4,c7,c3 are_collinear & not c4,c10,c2 are_collinear &
  not c4,c7,c5 are_collinear & not c4,c10,c8 are_collinear &
  not c4,c7,c8 are_collinear & not c4,c10,c5 are_collinear &
  not c4,c7,c9 are_collinear & not c4,c10,c6 are_collinear &
  not c4,c7,c6 are_collinear & not c4,c10,c9 are_collinear &
  not c7,c10,c5 are_collinear & not c7,c4,c6 are_collinear &
  not c7,c10,c9 are_collinear & not c7,c4,c3 are_collinear &
  not c7,c10,c3 are_collinear & not c7,c4,c9 are_collinear &
  not c7,c10,c2 are_collinear & not c7,c4,c8 are_collinear &
  not c10,c4,c2 are_collinear & not c10,c7,c6 are_collinear &
  not c10,c4,c6 are_collinear & not c10,c7,c2 are_collinear &
  not c10,c4,c5 are_collinear & not c10,c7,c3 are_collinear &
  not c10,c4,c3 are_collinear & not c10,c7,c5 are_collinear
  proof
    assume that
A1: not c2=c1 and
A2: not c3=c1 and
A3: not c3=c2 and
A4: not c4=c2 and
A5: not c4=c3 and
A6: not c5=c1 and
A7: not c6=c1 and
A8: not c6=c5 and
A9: not c7=c5 and
A10: not c7=c6 and
A11: not c1,c4,c7 are_collinear and
A12: c1,c4,c2 are_collinear and
A13: c1,c4,c3 are_collinear and
A14: c1,c7,c5 are_collinear and
A15: c1,c7,c6 are_collinear and
A16: c4,c5,c8 are_collinear and
A17: c7,c2,c8 are_collinear and
A18: c4,c6,c9 are_collinear and
A19: c3,c7,c9 are_collinear and
A20: c2,c6,c10 are_collinear and
A21: c3,c5,c10 are_collinear and
A22: c4,c7,c2 are_collinear or c4,c10,c3 are_collinear or
    c4,c7,c3 are_collinear or c4,c10,c2 are_collinear or c4,c7,c5
    are_collinear or c4,c10,c8 are_collinear or c4,c7,c8 are_collinear or
    c4,c10,c5 are_collinear or c4,c7,c9 are_collinear or c4,c10,c6
    are_collinear or c4,c7,c6 are_collinear or c4,c10,c9 are_collinear or
    c7,c10,c5 are_collinear or c7,c4,c6 are_collinear or c7,c10,c9
    are_collinear or c7,c4,c3 are_collinear or c7,c10,c3 are_collinear or
    c7,c4,c9 are_collinear or c7,c10,c2 are_collinear or c7,c4,c8
    are_collinear or c10,c4,c2 are_collinear or c10,c7,c6 are_collinear
    or c10,c4,c6 are_collinear or c10,c7,c2 are_collinear or c10,c4,c5
    are_collinear or c10,c7,c3 are_collinear or c10,c4,c3 are_collinear
    or c10,c7,c5 are_collinear;
A23: not c7=c1 by COLLSP:2,A11;
A24: c4,c3,c1 are_collinear by A13,HESSENBE:1;
A25: c7,c5,c1 are_collinear by A14,HESSENBE:1;
A26: c1,c5,c7 are_collinear by A14,HESSENBE:1;
A27: c7,c6,c1 are_collinear by A15,HESSENBE:1;
A28: c1,c6,c7 are_collinear by A15,HESSENBE:1;
A29: for v102,v103,v100,v104 being Element of PCPP holds v100=v104 or
    not v104,v100,v102
    are_collinear or not v104,v100,v103 are_collinear or v102,v103,v104
    are_collinear
    proof
      let v102,v103,v100,v104 being Element of PCPP;
      v104,v100,v104 are_collinear by COLLSP:2;
      hence thesis by COLLSP:3;
    end;
A30: for v103,v104,v102,v101 being Element of PCPP holds
    v102=v101 or not v101,v102,v103 are_collinear or
    not v101,v102,v104 are_collinear or v102,v103,v104 are_collinear
    proof
      let v103,v104,v102,v101 being Element of PCPP;
      v101,v102,v102 are_collinear by COLLSP:2;
      hence thesis by COLLSP:3;
    end;
A31: c2,c4,c1 are_collinear by A12,HESSENBE:1;
    c4,c2,c1 are_collinear & c4,c2,c4 are_collinear by COLLSP:2,A12,HESSENBE:1;
    then
A32: not c4,c2,c7 are_collinear by A4,COLLSP:3,A11;
    c1,c2,c1 are_collinear & c1,c2,c4 are_collinear by COLLSP:2,A12,HESSENBE:1;
    then
A33: not c1,c2,c7 are_collinear by A1,COLLSP:3,A11;
    c4,c3,c4 are_collinear by COLLSP:2;
    then
A34: not c4,c3,c7 are_collinear by A24,A11,A5,COLLSP:3;
    c1,c3,c1 are_collinear & c1,c3,c4 are_collinear by COLLSP:2,A13,HESSENBE:1;
    then
A35: not c1,c3,c7 are_collinear by A2,COLLSP:3,A11;
    c7,c5,c7 are_collinear by COLLSP:2;
    then
A36: not c7,c5,c4 are_collinear by A25,A9,COLLSP:3,A11;
    c7,c5,c7 are_collinear by COLLSP:2;
    then
A37: not c7,c5,c2 are_collinear by A9,A25,COLLSP:3,A33;
A38: c1,c5,c1 are_collinear by COLLSP:2;
    c7,c6,c7 are_collinear by COLLSP:2;
    then
A39: not c7,c6,c4 are_collinear by A10,COLLSP:3,A27,A11;
    c7,c6,c7 are_collinear by COLLSP:2;
    then
A40: not c7,c6,c2 are_collinear by A27,A10,COLLSP:3,A33;
A41: c8,c4,c5 are_collinear by A16,HESSENBE:1;
A42: c9,c4,c6 are_collinear by A18,HESSENBE:1;
A43: c10,c2,c6 are_collinear by A20,HESSENBE:1;
A44: c10,c3,c5 are_collinear by A21,HESSENBE:1;
A45: c10,c5,c3 are_collinear by A21,HESSENBE:1;
    c3,c4,c4 are_collinear & c3,c4,c1 are_collinear by COLLSP:2,A13,HESSENBE:1;
    then
A46: not c3,c4,c5 are_collinear or c1,c5,c4 are_collinear by A5,COLLSP:3;
    c5,c7,c7 are_collinear &
    c5,c7,c1 are_collinear by COLLSP:2,A14,HESSENBE:1;
    then
A47: not c5,c7,c3 are_collinear by A35,A9,COLLSP:3;
    now
      thus c2,c4,c4 are_collinear by COLLSP:2;
      c1,c6,c1 are_collinear by COLLSP:2;
      hence not c1,c6,c4 are_collinear by A7,COLLSP:3,A28,A11;
    end;
    then
A48: not c2,c4,c6 are_collinear by A4,COLLSP:3,A31;
A49: for v2,v101,v100 being Element of PCPP holds v101=v100
    or not v100,v101,v2
    are_collinear or v2,v100,v101 are_collinear
    proof
      let v2,v101,v100 being Element of PCPP;
      for v102,v104,v100,v103 being Element of PCPP holds v100=v103 or
      not v103,v100,v102
      are_collinear or  not v103,v100,v104 are_collinear or
      v102,v103,v104 are_collinear
      proof
        let v102,v104,v100,v103 being Element of PCPP;
        v103,v100,v103 are_collinear by COLLSP:2;
        hence thesis by COLLSP:3;
      end;
      then v101=v100 or  not v100,v101,v2 are_collinear or
        not v100,v101,v101 are_collinear or v2,v100,v101 are_collinear;
      hence thesis by COLLSP:2;
    end;
A50: not c7,c6,c5 are_collinear or c6,c5,c7 are_collinear by HESSENBE:1;
    now
      now
        c9,c7,c3 are_collinear & (not c10,c9,c7 are_collinear or
          c9,c7,c10 are_collinear) by A19,HESSENBE:1;
        hence c4,c10,c3 are_collinear or c4,c10,c2 are_collinear or
          c4,c10,c8 are_collinear or c4,c7,c8 are_collinear or
          c4,c10,c5 are_collinear or  c4,c7,c9 are_collinear or
          c4,c10,c6 are_collinear or c4,c10,c9  are_collinear or
          c7,c10,c3 are_collinear or c7,c4,c9 are_collinear or
          c7,c10,c2 are_collinear or c7,c4,c8 are_collinear or
          c7,c6,c10  are_collinear or c9=c7 or c10,c5,c7 are_collinear
          by A30,A39,A36,A34,A32,A22,HESSENBE:1;
        thus not c10,c8,c4 are_collinear or c8,c4,c10 are_collinear
          by HESSENBE:1;
        thus not c4,c10,c6 are_collinear or c10,c6,c4 are_collinear
          by HESSENBE:1;
        thus not c4,c10,c5 are_collinear or c10,c5,c4 are_collinear
          by HESSENBE:1;
        thus not c7,c10,c3 are_collinear or c10,c3,c7 are_collinear
          by HESSENBE:1;
        thus not c7,c10,c2 are_collinear or c10,c2,c7 are_collinear
          by HESSENBE:1;
        thus not c10,c9,c4 are_collinear or c9,c4,c10 are_collinear
          by HESSENBE:1;
        now
          thus c6,c4,c6 are_collinear by COLLSP:2;
          thus not c4=c6 by COLLSP:2,A39;
          thus for v102,v104,v103,v101 being Element of PCPP holds
            v103=v101 or not v101,v103,v102 are_collinear or
            not v101,v103,v104 are_collinear or v102,v103,v104 are_collinear
          proof
            let v102,v104,v103,v101 being Element of PCPP;
            v101,v103,v103 are_collinear by COLLSP:2;
            hence thesis by COLLSP:3;
          end;
        end;
        hence not c6,c4,c2 are_collinear by A48;
        c1,c7,c7 are_collinear by COLLSP:2;
        hence c7,c6,c5 are_collinear by A23,A14,COLLSP:3,A15;
        now
          thus c5,c4,c4 are_collinear by COLLSP:2;
          c4,c3,c4 are_collinear by COLLSP:2;
          hence not c4,c3,c5 are_collinear or c1,c5,c4 are_collinear
            by A24,A5,COLLSP:3;
        end;
        hence not c5,c4,c3 are_collinear by A29,A38,COLLSP:3,A6,A26,A11;
        c7,c5,c7 are_collinear by COLLSP:2;
        then not c7,c5,c3 are_collinear by A35,A9,A25,COLLSP:3;
        hence not c3,c7,c5 are_collinear by HESSENBE:1;
        thus not c2,c7,c6 are_collinear by HESSENBE:1,A40;
        thus c10,c6,c2 are_collinear by A20,HESSENBE:1;
      end;
      then c4,c10,c2 are_collinear or c4,c7,c8 are_collinear or
        c4,c7,c9 are_collinear or c9=c7 or c10=c5 or c10=c3 or c10=c2 or
        c1,c10,c5 are_collinear or c9=c4 or c8=c4 or c10=c6 or
        c10,c3,c4 are_collinear
        by A30,A45,A41,A43,A44,A47,A10,A27,COLLSP:3,A42,HESSENBE:1;
      then
A51:   c4,c7,c8 are_collinear or c4,c7,c9 are_collinear or c9=c7 or c10=c5 or
        c10=c3 or c10=c2 or c1,c10,c5 are_collinear or c9=c4 or c8=c4 or
        c10=c6 or c10,c2,c4 are_collinear
        by A46,A38,COLLSP:3,A6,A26,A11,A30,A44,HESSENBE:1;
      not c7=c4 by COLLSP:2,A11;
      hence c4,c7,c8 are_collinear or c9=c7 or c10=c5 or c10=c3 or c10=c2 or
        c1,c10,c5 are_collinear or c9=c4 or c8=c4 or c10=c6 or
        c9,c4,c7 are_collinear by A51,A49,A48,A43,A30;
      thus c7=c4 or not c4,c7,c8 are_collinear or c8,c4,c7 are_collinear
        by A49;
      thus not c1,c10,c5 are_collinear or c10,c5,c1 are_collinear
        by HESSENBE:1;
A52:  not c4=c1 by COLLSP:2,A11;
      (not c6,c5,c2 are_collinear or c5,c2,c7 are_collinear) &
        c2,c6,c2 are_collinear & not c4=c1 & not c6=c2 &
        c5,c2,c2 are_collinear & c5,c2,c5 are_collinear &
        not c2=c5 by A40,A11,A50,A30,A8,A23,A14,A15,COLLSP:2;
      hence not c2,c6,c5 are_collinear by A30,COLLSP:3,A37;
      now
        c1,c4,c1 are_collinear by COLLSP:2;
        hence c3,c2,c1 are_collinear by A52,A12,COLLSP:3,A13;
        c1,c6,c1 are_collinear by COLLSP:2;
        hence not c1,c6,c3 are_collinear by A35,A7,A28,COLLSP:3;
      end;
      hence not c3,c2,c6 are_collinear & not c3,c2,c5 are_collinear or
        c1,c5,c3 are_collinear by A29,A3;
      thus for v102,v103,v104,v101 being Element of PCPP holds v104=v101 or
        not v101,v104,v102 are_collinear or
        not v101,v104,v103 are_collinear or v102,v103,v104 are_collinear
      proof
        let v102,v103,v104,v101 being Element of PCPP;
        v101,v104,v104 are_collinear by COLLSP:2;
        hence thesis by COLLSP:3;
      end;
      c5,c1,c1 are_collinear & c5,c1,c7 are_collinear
        by COLLSP:2,A14,HESSENBE:1;
      hence not c5,c1,c3 are_collinear by A35,A6,COLLSP:3;
      thus c8,c2,c7 are_collinear by A17,HESSENBE:1;
      c3,c7,c7 are_collinear & c3,c7,c3 are_collinear & not c7=c3
        by COLLSP:2,A34;
      hence not c3,c7,c4 are_collinear by COLLSP:3,A34;
    end;
    hence contradiction by A30,A45,HESSENBE:1,A36,A42,COLLSP:2,A41,
                           A23,A14,A15,A50,A47,A32,A39,A19,A20;
  end;

theorem Th5:
  not c2=c1 & not c3=c2 &
  not c5=c1 & not c7=c5 &
  not c7=c6 & not c1,c4,c7 are_collinear &
  c1,c4,c2 are_collinear & c1,c4,c3 are_collinear &
  c1,c7,c5 are_collinear & c1,c7,c6 are_collinear &
  c4,c5,c8 are_collinear & c7,c2,c8 are_collinear &
  c2,c6,c10 are_collinear & c3,c5,c10 are_collinear implies
  not c10,c7,c8 are_collinear
  proof
    assume that
A1: not c2=c1 and
A2: not c3=c2 and
A3: not c5=c1 and
A4: not c7=c5 and
A5: not c7=c6 and
A6: not c1,c4,c7 are_collinear and
A7: c1,c4,c2 are_collinear and
A8: c1,c4,c3 are_collinear and
A9: c1,c7,c5 are_collinear and
A10: c1,c7,c6 are_collinear and
A11: c4,c5,c8 are_collinear and
A12: c7,c2,c8 are_collinear and
A13: c2,c6,c10 are_collinear and
A14: c3,c5,c10 are_collinear and
A15: c10,c7,c8 are_collinear;
A16: not c4=c1 by COLLSP:2,A6;
    now
      now
        c1,c4,c4 are_collinear by COLLSP:2;
        hence c3,c2,c4 are_collinear by A8,A7,A16,COLLSP:3;
        thus not c1,c3,c2 are_collinear or c3,c2,c1 are_collinear
          by HESSENBE:1;
        c1,c5,c1 are_collinear & c1,c5,c7 are_collinear
          by COLLSP:2,A9,HESSENBE:1;
        hence not c1,c5,c4 are_collinear by A3,COLLSP:3,A6;
        thus c1,c4,c1 are_collinear by COLLSP:2;
        thus for v102,v103,v100,v104 being Element of PCPP holds
          v100=v104 or  not v104,v100,v102 are_collinear or
          not v104,v100,v103 are_collinear or v102,v103,v104 are_collinear
        proof
          let v102,v103,v100,v104 being Element of PCPP;
          v104,v100,v104 are_collinear by COLLSP:2;
          hence thesis by COLLSP:3;
        end;
        thus c7,c8,c10 are_collinear by A15,HESSENBE:1;
        thus c2,c10,c6 are_collinear by A13,HESSENBE:1;
      end;
      hence not c3,c2,c5 are_collinear & (c8=c7 or
        not c7,c8,c2 are_collinear or c10,c2,c7 are_collinear) &
        (c10=c2 or not c2,c10,c7 are_collinear or c6,c7,c2 are_collinear)
        by A7,A16,A8,A2,COLLSP:3;
      now
        thus c7,c6,c7 are_collinear by COLLSP:2;
        c1,c2,c1 are_collinear & c1,c2,c4 are_collinear
          by COLLSP:2,A7,HESSENBE:1;
        hence not c1,c2,c7 are_collinear by A1,COLLSP:3,A6;
        thus c7,c6,c1 are_collinear by A10,HESSENBE:1;
      end;
      hence not c7,c6,c2 are_collinear by A5,COLLSP:3;
      c7,c5,c7 are_collinear & c7,c5,c1 are_collinear
        by COLLSP:2,A9,HESSENBE:1;
      hence not c7,c5,c4 are_collinear by COLLSP:3,A4,A6;
    end;
    hence contradiction by A11,HESSENBE:1,A12,A14;
  end;

theorem Th6:
  not c1,c4,c7 are_collinear &
  c1,c4,c2 are_collinear & c1,c4,c3 are_collinear &
  c1,c7,c5 are_collinear & c1,c7,c6 are_collinear &
  c4,c5,c8 are_collinear & c7,c2,c8 are_collinear &
  c4,c6,c9 are_collinear & c3,c7,c9 are_collinear &
  c2,c6,c10 are_collinear & c3,c5,c10 are_collinear
  implies
  c4,c2,c3 are_collinear & c4,c5,c8 are_collinear &
  c4,c9,c6 are_collinear & c7,c5,c6 are_collinear &
  c7,c9,c3 are_collinear & c7,c2,c8 are_collinear &
  c10,c2,c6 are_collinear & c10,c5,c3 are_collinear
  proof
    assume that
A1: not c1,c4,c7 are_collinear and
A2: c1,c4,c2 are_collinear and
A3: c1,c4,c3 are_collinear and
A4: c1,c7,c5 are_collinear and
A5: c1,c7,c6 are_collinear and
A6: c4,c5,c8 are_collinear and
A7: c7,c2,c8 are_collinear and
A8: c4,c6,c9 are_collinear and
A9: c3,c7,c9 are_collinear and
A10: c2,c6,c10 are_collinear and
A11: c3,c5,c10 are_collinear;
    not c7=c1 & not c4=c1 & c1,c4,c4 are_collinear & c1,c7,c7 are_collinear
      by A1,COLLSP:2;
    hence thesis
      by A2,COLLSP:3,A3,A11,HESSENBE:1,A10,A9,A8,A7,A6,A4,A5;
  end;

theorem Th7:
  c3 <> c1 & c3 <> c2 & c6 <> c1 & c6 <> c5 &
  not c1,c2,c5 are_collinear &
  c1,c2,c3 are_collinear & c1,c5,c6 are_collinear
  implies not c2,c3,c5 are_collinear & not c2,c3,c6 are_collinear &
  not c2,c5,c6 are_collinear & not c3,c5,c6 are_collinear
  proof
    assume that
A1: not c3=c1 and
A2: not c3=c2 and
A3: not c6=c1 and
A4: not c6=c5 and
A5: not c1,c2,c5 are_collinear and
A6: c1,c2,c3 are_collinear and
A7: c1,c5,c6 are_collinear and
A8: c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or
       c2,c5,c6 are_collinear or c3,c5,c6 are_collinear;
A9: not c2,c5,c1 are_collinear by HESSENBE:1,A5;
A10: c2,c3,c1 are_collinear by A6,COLLSP:8;
A11: c5,c6,c1 are_collinear by A7,COLLSP:8;
    now
      thus c2,c3,c6 are_collinear or c2,c5,c6 are_collinear or
        c5,c6,c3 are_collinear by A2,HESSENBE:2,A10,A9,A8,COLLSP:8;
      c6,c1,c1 are_collinear & c6,c1,c5 are_collinear
        by COLLSP:2,A7,HESSENBE:1;
      hence not c6,c1,c3 are_collinear or c3,c1,c5 are_collinear
        by A3,COLLSP:3;
      for v102,v104,v100,v103 being Element of PCPP holds v100=v103 or
        not v103,v100,v102 are_collinear or not v103,v100,v104 are_collinear
        or v102,v103,v104 are_collinear
      proof
        let v102,v104,v100,v103 being Element of PCPP;
        v103,v100,v103 are_collinear by COLLSP:2;
        hence thesis by COLLSP:3;
      end;
      hence not c5,c6,c2 are_collinear by A11,A4,A9;
      thus c2,c3,c3 are_collinear by COLLSP:2;
      thus c2,c5,c5 are_collinear by COLLSP:2;
      c3,c1,c1 are_collinear & c3,c1,c2 are_collinear
        by COLLSP:2,A6,HESSENBE:1;
      hence not c3,c1,c5 are_collinear by A1,COLLSP:3,A5;
      thus not c5=c2 by COLLSP:2,A5;
      thus for v102,v103,v100,v104 being Element of PCPP holds
        v100=v104 or not v104,v100,v102 are_collinear or
        not v104,v100,v103 are_collinear or v102,v103,v104 are_collinear
      proof
        let v102,v103,v100,v104 be Element of PCPP;
        v104,v100,v104 are_collinear by COLLSP:2;
        hence thesis by COLLSP:3;
      end;
    end;
    hence contradiction by A2,COLLSP:3,A10,A11,A4;
  end;

theorem Th8:
  c3 <> c1 & c4 <> c1 & c4 <> c3 &
  c3 <> c2 & c4 <> c2 & c6 <> c1 &
  c7 <> c1 & c7 <> c6 & c6 <> c5 &
  c7 <> c5 &
  not c1,c2,c5 are_collinear &
  c1,c2,c3 are_collinear & c1,c2,c4 are_collinear &
  c1,c5,c6 are_collinear & c1,c5,c7 are_collinear implies
  not c1,c3,c6 are_collinear &
  c1,c3,c4 are_collinear & c1,c6,c7 are_collinear &
  c3 <> c1 &  c2 <> c1 &  c3 <> c2 &  c4 <> c3 & c4 <> c2 &
  c6 <> c1 &  c5 <> c1 &  c6 <> c5 &  c7 <> c6 &  c7 <> c5 &
  not c1,c4,c7 are_collinear &
  c1,c4,c3 are_collinear & c1,c4,c2 are_collinear &
  c1,c7,c6 are_collinear & c1,c7,c5 are_collinear
  proof
    assume that
A1: not c3=c1 and
A2: not c4=c1 and
A3: not c4=c3 and
A4: not c3=c2 and
A5: not c4=c2 and
A6: not c6=c1 and
A7: not c7=c1 and
A8: not c7=c6 and
A9: not c6=c5 and
A10: not c7=c5 and
A11: not c1,c2,c5 are_collinear and
A12: c1,c2,c3 are_collinear and
A13: c1,c2,c4 are_collinear and
A14: c1,c5,c6 are_collinear and
A15: c1,c5,c7 are_collinear and
A16: (c1,c3,c6 are_collinear or  not c1,c3,c4 are_collinear or
    not c1,c6,c7 are_collinear or c3=c1 or c2=c1 or c3=c2 or c4=c3 or
    c4=c2 or c6=c1 or c5=c1 or c6=c5 or c7=c6 or c7=c5 or c1,c4,c7
    are_collinear or  not c1,c4,c3 are_collinear or  not c1,c4,c2
    are_collinear or  not c1,c7,c6 are_collinear or  not c1,c7,c5
    are_collinear);
A17: for v102,v104,v100,v103 being Element of PCPP holds v100=v103 or
      not v103,v100,v102 are_collinear or  not v103,v100,v104 are_collinear
      or v102,v103,v104 are_collinear
    proof
      let v102,v104,v100,v103 be Element of PCPP;
      v103,v100,v103 are_collinear by COLLSP:5;
      hence thesis by COLLSP:3;
    end;
A18: not c5=c1 by COLLSP:2,A11;
A19: not c2=c1 by COLLSP:2,A11;
A20: c3,c1,c2 are_collinear by A12,HESSENBE:1;
A21: c4,c1,c2 are_collinear by A13,HESSENBE:1;
A22: c6,c1,c5 are_collinear by A14,HESSENBE:1;
A23: c7,c1,c5 are_collinear by A15,HESSENBE:1;
A24: c3,c1,c1 are_collinear by COLLSP:2;
A25: not c3,c1,c5 are_collinear by A24,A20,COLLSP:3,A11,A1;
    now
      thus c4,c1,c1 are_collinear by COLLSP:2;
      c6,c1,c1 are_collinear by COLLSP:2;
      hence not c6,c1,c3 are_collinear by A22,A6,COLLSP:3,A25;
      c7,c1,c1 are_collinear by COLLSP:2;
      hence not c7,c1,c4 are_collinear or c4,c1,c5 are_collinear
        by A23,COLLSP:3,A7;
      thus c1,c3,c3 are_collinear by COLLSP:2;
      thus c1,c4,c4 are_collinear by COLLSP:2;
    end;
    hence contradiction by A13,COLLSP:4,COLLSP:2,A10,
      A8,A9,A5,A3,A4,A16,A15,A17,A1,A19,
      A12,A18,A14,HESSENBE:2,A21,A2,COLLSP:3,A11;
  end;

theorem Th9:
  c4 <> c2 & c4 <> c3 & c8 <> c2 &
  not c2,c3,c6 are_collinear implies
  not c2,c3,c4 are_collinear or
  not c2,c6,c8 are_collinear or
  not c3,c4,c8 are_collinear
  proof
    assume that
A1: not c4=c2 and
A2: not c4=c3 and
A3: not c8=c2 and
A4: not c2,c3,c6 are_collinear and
A5: c2,c3,c4 are_collinear and
A6: c2,c6,c8 are_collinear and
A7: c3,c4,c8 are_collinear;
    now
      thus c4,c2,c3 are_collinear by A5,HESSENBE:1;
      thus c3,c4,c2 are_collinear by A5,COLLSP:8;
      thus c4,c2,c2 are_collinear by COLLSP:2;
      c8,c2,c2 are_collinear & c8,c2,c6 are_collinear
        by A6,HESSENBE:1,COLLSP:2;
      hence (not c8,c2,c4 are_collinear or c4,c2,c6 are_collinear) &
        c3,c4,c4 are_collinear by A3,COLLSP:2,3;
    end;
    hence contradiction by A7,A1,A4,A2,COLLSP:3;
  end;

theorem Th10:
  c4 <> c1 & c6 <> c5 & not c1,c2,c5 are_collinear implies
  not (c1,c2,c4 are_collinear) or not (c1,c5,c6 are_collinear) or
    not (c4,c6,c8 are_collinear) or (c8 <> c5)
  proof
    assume that
A1: not c4=c1 and
A2: not c6=c5 and
A3: not c1,c2,c5 are_collinear and
A4: c1,c2,c4 are_collinear and
A5: c1,c5,c6 are_collinear and
A6: c4,c6,c8 are_collinear and
A7: c8=c5;
     now
       thus not c5,c1,c2 are_collinear by COLLSP:8,A3;
       thus c5,c4,c6 are_collinear by A6,A7,HESSENBE:1;
       c4,c1,c1 are_collinear & c4,c1,c2 are_collinear
         by A4,COLLSP:2,HESSENBE:1;
       hence for v0 being Element of PCPP holds
         not c4,c1,v0 are_collinear or v0,c1,c2 are_collinear
         by A1,COLLSP:3;
       now
         thus for v102,v103,v100,v104 being Element of PCPP holds
           v100=v104 or  not v104,v100,v102 are_collinear or
           not v104,v100,v103 are_collinear or v102,v103,v104 are_collinear
         proof
           let v102,v103,v100,v104 being Element of PCPP;
           v104,v100,v104 are_collinear by COLLSP:2;
           hence thesis by COLLSP:3;
         end;
         thus c5,c6,c1 are_collinear by A5,COLLSP:8;
       end;
       hence not c5,c6,c4 are_collinear or c4,c1,c5 are_collinear by A2;
     end;
     hence contradiction by COLLSP:4;
   end;

theorem Th11:
  c4 <> c2 & c6 <> c1 &
  not c1,c2,c5 are_collinear &
  c1,c2,c4 are_collinear & c1,c5,c6 are_collinear &
  c4,c6,c8 are_collinear implies c8 <> c2
  proof
    assume that
A1: not c4=c2 and
A2: not c6=c1 and
A3: not c1,c2,c5 are_collinear and
A4: c1,c2,c4 are_collinear and
A5: c1,c5,c6 are_collinear and
A6: c4,c6,c8 are_collinear and
A7: c8=c2;
    now
      c6,c1,c1 are_collinear & c6,c1,c5 are_collinear
        by COLLSP:2,A5,HESSENBE:1;
      hence not c6,c1,c2 are_collinear by A2,COLLSP:3,A3;
      for v102,v103,v100,v104 being Element of PCPP holds v100=v104 or
        not v104,v100,v102 are_collinear or
        not v104,v100,v103 are_collinear or v102,v103,v104 are_collinear
      proof
        let v102,v103,v100,v104 being Element of PCPP;
        v104,v100,v104 are_collinear by COLLSP:5;
        hence thesis by COLLSP:3;
      end;
      hence for v3,v2 being Element of PCPP holds c4=c2 or
        not c2,c4,v2 are_collinear or not c2,c4,v3 are_collinear or
        v2,v3,c2 are_collinear;
      thus c2,c4,c6 are_collinear by A6,A7,HESSENBE:1;
      thus c2,c4,c1 are_collinear by A4,COLLSP:8;
    end;
    hence contradiction by A1;
  end;

theorem Th12:
  not c1,c2,c5 are_collinear &
  c1,c2,c3 are_collinear & c1,c2,c4 are_collinear implies
  c2,c3,c4 are_collinear
  proof
    assume that
A1: not c1,c2,c5 are_collinear and
A2: c1,c2,c3 are_collinear and
A3: c1,c2,c4 are_collinear and
A4: not c2,c3,c4 are_collinear;
    now
      thus for v100,v2 being Element of PCPP holds
        v2,v100,v100 are_collinear by COLLSP:2;
      not c2=c1 or c1,c2,c5 are_collinear by COLLSP:2;
      hence for v0 being Element of PCPP holds  not c1,c2,v0 are_collinear
        or not c1,c2,c4 are_collinear or v0,c3,c4 are_collinear
        by A2,COLLSP:3,A1;
    end;
    hence contradiction by A3,A4;
  end;

theorem Th13:
  not c1,c2,c5 are_collinear &
  c1,c5,c6 are_collinear & c1,c5,c7 are_collinear
  implies c5,c6,c7 are_collinear
  proof
    assume that
A1: not c1,c2,c5 are_collinear and
A2: c1,c5,c6 are_collinear and
A3: c1,c5,c7 are_collinear and
A4: not c5,c6,c7 are_collinear;
    now
      thus for v100,v2 being Element of PCPP holds
        v2,v100,v100 are_collinear by COLLSP:2;
      not c5=c1 or c1,c2,c5 are_collinear by COLLSP:2;
      hence
      for v0 being Element of PCPP holds
      not c1,c5,v0 are_collinear or v0,c6,c7 are_collinear
        by COLLSP:3,A1,A2,A3;
    end;
    hence contradiction by A4;
  end;

theorem Th14:
  c3 <> c1 &
  not c1,c2,c5 are_collinear &
  c1,c2,c3 are_collinear & c1,c5,c7 are_collinear implies
  c7 <> c3
  proof
    assume that
A1: not c3=c1 and
A2: not c1,c2,c5 are_collinear and
A3: c1,c2,c3 are_collinear and
A4: c1,c5,c7 are_collinear and
A5: c7=c3;
    c3,c1,c2 are_collinear & c3,c1,c5 are_collinear & c3,c1,c1 are_collinear
      by A3,A4,A5,HESSENBE:1,COLLSP:2;
    hence contradiction by A1,COLLSP:3,A2;
  end;

theorem Th15:
  c4 <> c1 & c4 <> c3 &
  not c1,c2,c5 are_collinear &
  c1,c2,c3 are_collinear & c1,c2,c4 are_collinear &
  c4,c5,c9 are_collinear implies
  c9 <> c3
  proof
    assume that
A1: not c4=c1 and
A2: not c4=c3 and
A3: not c1,c2,c5 are_collinear and
A4: c1,c2,c3 are_collinear and
A5: c1,c2,c4 are_collinear and
A6: c4,c5,c9 are_collinear and
A7: c9=c3;
    now
      thus not c2=c1 or c1,c2,c5 are_collinear by COLLSP:2;
      thus c1,c4,c2 are_collinear by A5,COLLSP:4;
      now
        thus for v102,v104,v100,v103 being Element of PCPP holds v100=v103
          or not v103,v100,v102 are_collinear or
          not v103,v100,v104 are_collinear or v102,v103,v104 are_collinear
        proof
          let v102,v104,v100,v103 being Element of PCPP;
          v103,v100,v103 are_collinear by COLLSP:5;
          hence thesis by COLLSP:3;
        end;
        thus not c4,c5,c3 are_collinear or c4,c3,c5 are_collinear by COLLSP:4;
      end;
      hence not c4,c3,c1 are_collinear or c1,c4,c5 are_collinear
        by A6,A7,A2;
      thus for v102,v103,v100,v104 being Element of PCPP holds v100=v104 or
        not v104,v100,v102 are_collinear or
        not v104,v100,v103 are_collinear or v102,v103,v104 are_collinear
      proof
        let v102,v103,v100,v104 being Element of PCPP;
        v104,v100,v104 are_collinear by COLLSP:5;
        hence thesis by COLLSP:3;
      end;
    end;
    hence contradiction by A1,A3,A4,HESSENBE:2,A5;
  end;

theorem Th16:
  c4 <> c1 & c4 <> c2 & c6 <> c1 &
  c7 <> c6 & c7 <> c5 &
  not c1,c2,c5 are_collinear &
  c1,c2,c4 are_collinear & c1,c5,c6 are_collinear &
  c1,c5,c7 are_collinear & c2,c7,c9 are_collinear &
  c4,c5,c9 are_collinear implies
  not c9,c2,c5 are_collinear
  proof
    assume that
A1: not c4=c1 and
A2: not c4=c2 and
A3: not c6=c1 and
A4: not c7=c6 and
A5: not c7=c5 and
A6: not c1,c2,c5 are_collinear and
A7: c1,c2,c4 are_collinear and
A8: c1,c5,c6 are_collinear and
A9: c1,c5,c7 are_collinear and
A10: c2,c7,c9 are_collinear and
A11: c4,c5,c9 are_collinear and
A12: c9,c2,c5 are_collinear;
A13: for v102,v103,v100,v104 being Element of PCPP holds v100=v104 or
       not v104,v100,v102 are_collinear or
       not v104,v100,v103 are_collinear or v102,v103,v104 are_collinear
    proof
      let v102,v103,v100,v104 being Element of PCPP;
      v104,v100,v104 are_collinear by COLLSP:2;
      hence thesis by COLLSP:3;
    end;
A14: for v102,v104,v100,v103 being Element of PCPP holds v100=v103 or
       not v103,v100,v102 are_collinear or
       not v103,v100,v104 are_collinear or v102,v103,v104 are_collinear
    proof
      let v102,v104,v100,v103 being Element of PCPP;
      v103,v100,v103 are_collinear by COLLSP:2;
      hence thesis by COLLSP:3;
    end;
A15: not c5=c1 by COLLSP:2,A6;
A16: c5,c7,c1 are_collinear by A9,HESSENBE:1;
    now
      not c1,c6,c7 are_collinear or c6,c7,c1 are_collinear by HESSENBE:1;
      hence not c6,c7,c2 are_collinear or c2,c6,c1 are_collinear
        by A15,A8,HESSENBE:2,A9,A14,A4;
      thus c9=c2 or  not c9,c2,c7 are_collinear or c9,c7,c5 are_collinear
        by A12,HESSENBE:2;
      thus not c5,c7,c9 are_collinear or c9,c5,c1 are_collinear by A5,A16,A14;
      thus not c1,c9,c5 are_collinear or c1,c5,c9 are_collinear by COLLSP:4;
      thus for v0 being Element of PCPP holds  not c1,c5,v0 are_collinear or
        c7,v0,c6 are_collinear by A15,A8,COLLSP:3,A9;
      now
        thus c4,c5,c5 are_collinear by COLLSP:2;
        c4,c1,c1 are_collinear & c4,c1,c2 are_collinear
          by COLLSP:2,A7,HESSENBE:1;
        then not c4,c1,c5 are_collinear by A1,COLLSP:3,A6;
        hence not c5=c4 & not c5,c7,c4 are_collinear by COLLSP:2,A16,A5,A13;
      end;
      hence not c4,c5,c7 are_collinear by A13;
      c7,c9,c2 are_collinear by A10,HESSENBE:1;
      hence for v0 being Element of PCPP holds c9=c7 or
        not c7,c9,v0 are_collinear or v0,c7,c2 are_collinear by A14;
      c6,c1,c1 are_collinear & c6,c1,c5 are_collinear
        by A8,HESSENBE:1,COLLSP:2;
      hence not c6,c1,c2 are_collinear by COLLSP:3,A3,A6;
      not c5,c1,c2 are_collinear & c2,c4,c1 are_collinear
        by A7,HESSENBE:1,A6;
      hence not c2,c4,c5 are_collinear by A2,A13;
    end;
    hence contradiction by A11,A10,HESSENBE:1;
  end;

begin :: The real projective plane and Pappus's Theorem

reserve o,p1,p2,p3,q1,q2,q3,r1,r2,r3 for Element of ProjectiveSpace TOP-REAL 3;

Lm5:
  o<>p2 & o<>p3 & p2<>p3 & p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 &
  q1<> q2 & q1<>q3 & not o,p1,q1 are_collinear & o,p1,p2 are_collinear &
  o,p1,p3 are_collinear & o,q1,q2 are_collinear & o,q1,q3 are_collinear &
  p1,q2,r3 are_collinear & q1,p2,r3 are_collinear & p1,q3,r2 are_collinear &
  p3,q1,r2 are_collinear & p2,q3,r1 are_collinear & p3,q2,r1 are_collinear &
  not p1,q1,r1 are_collinear implies r1,r2,r3 are_collinear
  proof
    assume that
A1: o<>p2 & o<>p3 & p2<>p3 & p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 &
    q1<> q2 & q1<>q3 & not o,p1,q1 are_collinear & o,p1,p2 are_collinear &
    o,p1,p3 are_collinear & o,q1,q2 are_collinear & o,q1,q3 are_collinear &
    p1,q2,r3 are_collinear & q1,p2,r3 are_collinear & p1,q3,r2 are_collinear &
    p3,q1,r2 are_collinear & p2,q3,r1 are_collinear &
    p3,q2,r1 are_collinear and
A2: not p1,q1,r1 are_collinear;
    consider pp1 being Element of TOP-REAL 3 such that
A3: pp1 is non zero & Dir pp1 = p1 by ANPROJ_1:26;
    consider pp2 being Element of TOP-REAL 3 such that
A4: pp2 is non zero & Dir pp2 = p2 by ANPROJ_1:26;
    consider pp3 being Element of TOP-REAL 3 such that
A5: pp3 is non zero & Dir pp3 = p3 by ANPROJ_1:26;
    consider pp4 being Element of TOP-REAL 3 such that
A6: pp4 is non zero & Dir pp4 = q1 by ANPROJ_1:26;
    consider pp5 being Element of TOP-REAL 3 such that
A7: pp5 is non zero & Dir pp5 = q2 by ANPROJ_1:26;
    consider pp6 being Element of TOP-REAL 3 such that
A8: pp6 is non zero & Dir pp6 = q3 by ANPROJ_1:26;
    consider pp7 being Element of TOP-REAL 3 such that
A9: pp7 is non zero & Dir pp7 = r1 by ANPROJ_1:26;
    consider pp8 being Element of TOP-REAL 3 such that
A10: pp8 is non zero & Dir pp8 = r2 by ANPROJ_1:26;
    consider pp9 being Element of TOP-REAL 3 such that
A11: pp9 is non zero & Dir pp9 = r3 by ANPROJ_1:26;
    not r1,p1,q1 are_collinear by A2,ANPROJ_2:24;
    then
A12: |{pp7,pp1,pp4}| <> 0 by A3,A6,A9,BKMODEL1:1;
   |{pp7,pp1,pp4}| * |{pp7,pp8,pp9}| = 0
   proof
     now
       thus not p1,q1,p2 are_collinear & not p1,r1,p3 are_collinear &
       not p1,q1,p3 are_collinear by A1,Th4;
       hence not q1,p1,p2 are_collinear by ANPROJ_2:24;
       thus not p1,r1,p2 are_collinear & not p1,q1,q2 are_collinear &
       not p1,r1,r3 are_collinear by A1,Th4;
       hence not q1,p1,q2 are_collinear & not r1,p1,r3 are_collinear
         by ANPROJ_2:24;
       thus not p1,r1,q2 are_collinear & not p1,q1,r2 are_collinear &
       not p1,r1,q3 are_collinear by A1,Th4;
       thus not p1,q1,q3 are_collinear & not p1,r1,r2 are_collinear &
         not q1,r1,q2 are_collinear by A1,Th4;
       hence not r1,p1,r2 are_collinear by ANPROJ_2:24;
       thus not q1,p1,q3 are_collinear & not q1,r1,r2 are_collinear &
       not q1,p1,p3 are_collinear by A1,Th4;
       hence not r1,q1,r2 are_collinear by ANPROJ_2:24;
       thus not q1,r1,p3 are_collinear & not q1,p1,r2 are_collinear &
       not q1,r1,p2 are_collinear by A1,Th4;
       thus not q1,p1,r3 are_collinear & not r1,p1,p2 are_collinear &
       not r1,q1,q3 are_collinear by A1,Th4;
       hence not p1,q1,r3 are_collinear & not q1,r1,q3 are_collinear
         by ANPROJ_2:24;
       thus not r1,p1,q3 are_collinear & not r1,q1,p2 are_collinear &
       not r1,p1,q2 are_collinear by A1,Th4;
       thus not p1,r1,q3 are_collinear by A1,Th4;
       thus not r1,q1,p3 are_collinear & not r1,p1,p3 are_collinear &
       not r1,q1,q2 are_collinear by A1,Th4;
       thus not r1,q1,r3 are_collinear by A1,Th5;
       hence not q1,r1,r3 are_collinear by ANPROJ_2:24;
     end;
     then reconsider r142 = |{pp1,pp4,pp2}|, r173 = |{pp1,pp7,pp3}|,
     r143 = |{pp1,pp4,pp3}|, r172 = |{pp1,pp7,pp2}|,
     r145 = |{pp1,pp4,pp5}|, r179 = |{pp1,pp7,pp9}|,
     r149 = |{pp1,pp4,pp9}|, r175 = |{pp1,pp7,pp5}|,
     r148 = |{pp1,pp4,pp8}|, r176 = |{pp1,pp7,pp6}|,
     r146 = |{pp1,pp4,pp6}|, r178 = |{pp1,pp7,pp8}|,
     r475 = |{pp4,pp7,pp5}|, r416 = |{pp4,pp1,pp6}|,
     r476 = |{pp4,pp7,pp6}|, r415 = |{pp4,pp1,pp5}|,
     r478 = |{pp4,pp7,pp8}|, r413 = |{pp4,pp1,pp3}|,
     r473 = |{pp4,pp7,pp3}|, r418 = |{pp4,pp1,pp8}|,
     r472 = |{pp4,pp7,pp2}|, r419 = |{pp4,pp1,pp9}|,
     r479 = |{pp4,pp7,pp9}|, r412 = |{pp4,pp1,pp2}|,
     r712 = |{pp7,pp1,pp2}|, r746 = |{pp7,pp4,pp6}|,
     r716 = |{pp7,pp1,pp6}|, r742 = |{pp7,pp4,pp2}|,
     r715 = |{pp7,pp1,pp5}|, r743 = |{pp7,pp4,pp3}|,
     r713 = |{pp7,pp1,pp3}|, r745 = |{pp7,pp4,pp5}|,
     r749 = |{pp7,pp4,pp9}|, r718 = |{pp7,pp1,pp8}|,
     r719 = |{pp7,pp1,pp9}|, r748 = |{pp7,pp4,pp8}|
       as non zero Real by A3,A4,A5,A6,A7,A8,A9,A10,A11,BKMODEL1:1;
A13: r718 * r749 = r719 * r748
     proof
A14:   r142 * r173 = r143 * r172 &
       r145 * r179 = r149 * r175 &
       r148 * r176 = r146 * r178 &
       r475 * r416 = r476 * r415 &
       r478 * r413 = r473 * r418 &
       r472 * r419 = r479 * r412 &
       r712 * r746 = r716 * r742 &
       r715 * r743 = r713 * r745
       proof
A15:     p1,p2,p3 are_collinear & p1,q2,r3 are_collinear &
         p1,r2,q3 are_collinear & q1,q2,q3 are_collinear
         by A1,Th6;
         q1,r2,p3 are_collinear & q1,p2,r3 are_collinear &
         r1,p2,q3 are_collinear & r1,q2,p3 are_collinear
         by A1,Th6;
         hence thesis by A15,A3,A4,A11,A8,A10,A6,A5,A7,A9,Th2;
       end;
       r146 = - r416 & r145 = - r415 & r143 = - r413 &
       r148 = - r418 & r149 = - r419 & r142 = - r412 &
       r172 = - r712 & r476 = - r746 & r176 = - r716 & r472 = - r742 &
       r175 = - r715 & r473 = - r743 & r173 = - r713 & r475 = - r745 &
       r478 = - r748 & r479 = - r749 & r178 = - r718 & r179 = - r719
       by ANPROJ_8:30;
       hence thesis by A14,Th3;
     end;
     |{pp7,pp1,pp4}| * |{pp7,pp8,pp9}| - |{pp7,pp1,pp8}| * |{pp7,pp4,pp9}|
     + |{pp7,pp1,pp9}| * |{pp7,pp4,pp8}| = 0 by ANPROJ_8:28;
     hence thesis by A13;
   end;
   then |{pp7,pp8,pp9}| = 0 by A12,XCMPLX_1:6;
   hence thesis by A9,A10,A11,BKMODEL1:1;
 end;

Lm6:
  o<>p2 & o<>p3 & p2<>p3 & p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 &
  q1<> q2 & q1<>q3 & not o,p1,q1 are_collinear & o,p1,p2 are_collinear &
  o,p1,p3 are_collinear & o,q1,q2 are_collinear & o,q1,q3 are_collinear &
  p1,q2,r3 are_collinear & q1,p2,r3 are_collinear & p1,q3,r2 are_collinear &
  p3,q1,r2 are_collinear & p2,q3,r1 are_collinear & p3,q2,r1 are_collinear &
  p1,q1,r1 are_collinear & p2,q2,r2 are_collinear & p3,q3,r3 are_collinear
  implies
  r1,r2,r3 are_collinear
  proof
    assume that
A1:
    o<>p2 & o<>p3 & p2<>p3 & p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 &
      q1<> q2 & q1<>q3 and
A2: not o,p1,q1 are_collinear and
A3: o,p1,p2 are_collinear & o,p1,p3 are_collinear and
A4: o,q1,q2 are_collinear & o,q1,q3 are_collinear and
A5: p1,q2,r3 are_collinear & q1,p2,r3 are_collinear &
      p1,q3,r2 are_collinear & p3,q1,r2 are_collinear &
      p2,q3,r1 are_collinear & p3,q2,r1 are_collinear and
A6: p1,q1,r1 are_collinear and
A7: p2,q2,r2 are_collinear and
A8: p3,q3,r3 are_collinear;
    not p1,p2,q1 are_collinear & not p1,p2,q2 are_collinear &
    not p1,q1,q2 are_collinear  & not p2,q1,q2 are_collinear
      by A1,A2,A3,A4,Th7;
    then not p1,q1,p2 are_collinear & not p1,p2,q2 are_collinear &
    not p1,q1,q2 are_collinear  & not q1,p2,q2 are_collinear by ANPROJ_2:24;
    then consider N be invertible Matrix of 3,F_Real such that
A9:  (homography(N)).p1 = Dir100 & (homography(N)).q1 = Dir010 &
    (homography(N)).p2 = Dir001 & (homography(N)).q2 = Dir111 by ANPROJ_9:30;
    consider pp3 being Element of TOP-REAL 3 such that
A10: pp3 is non zero & Dir pp3 = (homography(N)).p3 by ANPROJ_1:26;
    consider pp6 being Element of TOP-REAL 3 such that
A11: pp6 is non zero & Dir pp6 = (homography(N)).q3 by ANPROJ_1:26;
    consider pp8 being Element of TOP-REAL 3 such that
A12: pp8 is non zero & Dir pp8 = (homography(N)).r2 by ANPROJ_1:26;
    consider pp9 being Element of TOP-REAL 3 such that
A13: pp9 is non zero & Dir pp9 = (homography(N)).r3 by ANPROJ_1:26;
    set hr1 = (homography(N)).r1, hr2 = (homography(N)).r2,
        hr3 = (homography(N)).r3;
    consider u100,v010,wr1 be Element of TOP-REAL 3 such that
A14: Dir100 = Dir(u100) & Dir010 = Dir(v010) & hr1 = Dir wr1 &
    u100 is not zero & v010 is not zero & wr1 is not zero &
    u100,v010,wr1 are_LinDep
      by A6,A9,ANPROJ_8:102,ANPROJ_2:23;
    not are_Prop u100,v010 by ANPROJ_9:22,A14,ANPROJ_1:22;
    then consider a,b be Real such that
A15: wr1 = a * u100 + b * v010 by A14,ANPROJ_1:6;
    Dir u100 = Dir |[1,0,0]| & |[1,0,0]| is non zero
      by A14,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop u100, |[1,0,0]| by A14,ANPROJ_1:22;
    then consider au100 be Real such that
A16: au100 <> 0 and
A17: u100 = au100 * |[1,0,0]| by ANPROJ_1:1;
A18: u100 = |[au100 * 1,au100 * 0,au100 * 0]| by A17,EUCLID_5:8
         .= |[au100,0,0]|;
    Dir v010 = Dir |[0,1,0]| & |[0,1,0]| is non zero
      by A14,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop v010, |[0,1,0]| by A14,ANPROJ_1:22;
    then consider av010 be Real such that
A19: av010 <> 0 and
A20: v010 = av010 * |[0,1,0]| by ANPROJ_1:1;
    v010 = |[av010 * 0,av010 * 1,av010 * 0]| by A20,EUCLID_5:8
        .= |[0,av010,0]|;
    then
A21: wr1 = |[a * au100, a * 0,a * 0]| + b *|[0,av010,0]|
            by A15,A18,EUCLID_5:8
         .= |[a * au100, a * 0,a * 0]| + |[b * 0,b * av010,b *0]| by EUCLID_5:8
         .= |[a * au100 + 0,0 + b * av010,0 + 0]| by EUCLID_5:6
         .= |[a * au100,b * av010,0]|;
A22: a * au100 is non zero & b * av010 is non zero
    proof
      now
        thus a <> 0
        proof
          assume a = 0; then
A23:      wr1 = 0 * |[ u100`1,u100`2,u100`3 ]| + b * v010 by A15,EUCLID_5:3
             .= |[ 0 * u100`1,0 * u100`2,0 * u100`3 ]| + b * v010 by EUCLID_5:8
             .= |[ 0,0,0]| + b * |[v010`1,v010`2,v010`3]| by EUCLID_5:3
             .= |[ 0,0,0]| + |[b * v010`1,b * v010`2,b * v010`3]| by EUCLID_5:8
             .= |[0 + b * v010`1,0 + b * v010`2,0 + b * v010`3]| by EUCLID_5:6
             .= b * |[v010`1,v010`2,v010`3]| by EUCLID_5:8
             .= b * v010 by EUCLID_5:3;
          b <> 0
          proof
            assume b = 0;
            then wr1 = 0 * |[v010`1,v010`2,v010`3]| by A23,EUCLID_5:3
                    .= |[0 * v010`1,0 * v010`2,0 * v010`3]| by EUCLID_5:8
                    .= 0.TOP-REAL 3 by EUCLID_5:4;
            hence thesis by A14;
          end;
          then are_Prop wr1,v010 by A23,ANPROJ_1:1;
          then Dir wr1 = Dir v010 by A14,ANPROJ_1:22;
          then r1 = q1 by ANPROJ_9:16,A9,A14;
          hence contradiction by A1,A2,A3,A4,A5,Th10;
        end;
        thus au100 <> 0 by A16;
      end;
      hence a * au100 is non zero;
      now
        thus b <> 0
        proof
          assume b = 0; then
A24:      wr1 = a * |[ u100`1,u100`2,u100`3 ]| + 0 * v010 by A15,EUCLID_5:3
             .= a * |[ u100`1,u100`2,u100`3 ]| + 0 * |[v010`1,v010`2,v010`3]|
               by EUCLID_5:3
             .= |[ a * u100`1,a * u100`2,a * u100`3 ]|
               + 0 * |[v010`1,v010`2,v010`3]| by EUCLID_5:8
             .= |[ a * u100`1,a * u100`2,a * u100`3 ]|
               + |[ 0 * v010`1, 0 * v010`2, 0 * v010`3]| by EUCLID_5:8
             .= |[ a * u100`1 + 0 ,a * u100`2 + 0 ,a * u100`3 + 0 ]|
               by EUCLID_5:6
             .= a * |[ u100`1, u100`2, u100`3 ]| by EUCLID_5:8
             .= a * u100 by EUCLID_5:3;
          a <> 0
          proof
            assume a = 0;
            then wr1 = 0 * |[u100`1,u100`2,u100`3]| by A24,EUCLID_5:3
                    .= |[0 * u100`1,0 * u100`2,0 * u100`3]| by EUCLID_5:8
                    .= 0.TOP-REAL 3 by EUCLID_5:4;
            hence thesis by A14;
          end;
          then are_Prop wr1,u100 by A24,ANPROJ_1:1;
          then Dir wr1 = Dir u100 by A14,ANPROJ_1:22;
          then r1 = p1 by A14,ANPROJ_9:16,A9;
          hence contradiction by A1,A2,A3,A4,A5,Th11;
        end;
        thus av010 <> 0 by A19;
      end;
      hence b * av010 is non zero;
    end;
    consider u001,v111,wr2 be Element of TOP-REAL 3 such that
A25: Dir001 = Dir(u001) & Dir111 = Dir(v111) & hr2 = Dir wr2 &
    u001 is not zero & v111 is not zero & wr2 is not zero &
    u001,v111,wr2 are_LinDep by A9,A7,ANPROJ_8:102,ANPROJ_2:23;
    not are_Prop u001,v111 by ANPROJ_9:22,A25,ANPROJ_1:22;
    then consider a2,b2 be Real such that
A26: wr2 = a2 * u001 + b2 * v111 by A25,ANPROJ_1:6;
    Dir u001 = Dir |[0,0,1]| & |[0,0,1]| is non zero
      by A25,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop u001, |[0,0,1]| by A25,ANPROJ_1:22;
    then consider au001 be Real such that
    au001 <> 0 and
A27: u001 = au001 * |[0,0,1]| by ANPROJ_1:1;
A28: u001 = |[au001 * 0,au001 * 0,au001 * 1]| by A27,EUCLID_5:8
         .= |[0,0,au001]|;
    Dir v111 = Dir |[1,1,1]| & |[1,1,1]| is non zero
      by A25,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop v111, |[1,1,1]| by A25,ANPROJ_1:22;
    then consider av111 be Real such that
A29: av111 <> 0 and
A30: v111 = av111 * |[1,1,1]| by ANPROJ_1:1;
    v111 = |[av111 * 1,av111 * 1,av111 * 1]| by A30,EUCLID_5:8
        .= |[av111,av111,av111]|;
    then
A31: wr2 = |[a2 * 0, a2 * 0,a2 * au001]| + b2 *|[av111,av111,av111]|
            by A26,A28,EUCLID_5:8
        .= |[0, 0,a2 * au001]| + |[b2 * av111,b2 * av111,b2 * av111]|
            by EUCLID_5:8
        .= |[0 + b2 * av111,0 + b2 * av111,a2 * au001 + b2 * av111]|
            by EUCLID_5:6
        .= |[b2 * av111,b2 * av111,a2 * au001 + b2 * av111]|;
    consider du010,dv001,dwr3 be Element of TOP-REAL 3 such that
A32: Dir010 = Dir(du010) & Dir001 = Dir(dv001) & hr3 = Dir dwr3 &
      du010 is not zero & dv001 is not zero & dwr3 is not zero &
      du010,dv001,dwr3 are_LinDep by A9,A5,ANPROJ_8:102,ANPROJ_2:23;
    Dir du010 = Dir |[0,1,0]| & |[0,1,0]| is non zero
      by A32,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop du010, |[0,1,0]| by A32,ANPROJ_1:22;
    then consider adu010 be Real such that
A33: adu010 <> 0 and
A34: du010 = adu010 * |[0,1,0]| by ANPROJ_1:1;
A35: du010 = |[adu010 * 0,adu010 * 1,adu010 * 0]| by A34,EUCLID_5:8
          .= <* 0,adu010,0 *>;
    Dir dv001 = Dir |[0,0,1]| & |[0,0,1]| is non zero
      by A32,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop dv001, |[0,0,1]| by A32,ANPROJ_1:22;
    then consider adv001 be Real such that
A36: adv001 <> 0 and
A37: dv001 = adv001 * |[0,0,1]| by ANPROJ_1:1;
A38: dv001 = |[adv001 * 0,adv001 * 0,adv001 * 1]| by A37,EUCLID_5:8
          .= <* 0,0,adv001 *>;
A39: dwr3 = |[dwr3`1,dwr3`2,dwr3`3]| by EUCLID_5:3
         .= <* dwr3.1,dwr3`2,dwr3`3 *> by EUCLID_5:def 1
         .= <* dwr3.1,dwr3.2,dwr3`3 *> by EUCLID_5:def 2
         .= <* dwr3.1,dwr3.2,dwr3.3 *> by EUCLID_5:def 3;
    du010 = <* du010`1,du010`2,du010`3 *> &
      dv001 = <* dv001`1,dv001`2,dv001`3 *> &
      dwr3 = <* dwr3`1,dwr3`2,dwr3`3 *> by EUCLID_5:3;
    then reconsider M = <* du010,dv001,dwr3 *> as Matrix of 3,F_Real
      by ANPROJ_8:19;
A40: M = <* <* du010`1,du010`2,du010`3 *>, dv001,dwr3 *> by EUCLID_5:3
      .= <* <* du010`1,du010`2,du010`3 *>,
            <* dv001`1,dv001`2,dv001`3 *>, dwr3 *>
        by EUCLID_5:3
      .= <* <* du010`1,du010`2,du010`3 *>,
            <* dv001`1,dv001`2,dv001`3 *>,
            <* dwr3`1,dwr3`2,dwr3`3 *> *> by EUCLID_5:3;
    |{du010,dv001,dwr3}| = 0 by A32,ANPROJ_8:43;
    then
A41: Det M = 0 by A40,ANPROJ_8:35;
    MXF2MXR M = <* <* 0,       adu010, 0 *>,
                   <* 0,       0,      adv001 *> ,
                   <* dwr3.1,  dwr3.2, dwr3.3 *> *>
               by A35,A38,A39,MATRIXR1:def 2;
    then reconsider M1 = <* <* 0,       adu010, 0 *>,
                            <* 0,       0,      adv001 *> ,
                            <* dwr3.1,  dwr3.2, dwr3.3 *> *>
                       as Matrix of 3,REAL
                          by MATRIXR1:def 2;
A42: Det M = Det M1 by A35,A38,A39,MATRIXR1:def 1
          .= adu010 * adv001 * dwr3.1 by Lm3;
    adu010 * adv001 <> 0 by A33,A36,XCMPLX_1:6;
    then dwr3.1 = 0 by A42,A41,XCMPLX_1:6;
    then dwr3`1 = 0 by EUCLID_5:def 1;
    then
A43: dwr3 = |[0,dwr3`2,dwr3`3]| by EUCLID_5:3;
    consider du100,dv111,ewr3 be Element of TOP-REAL 3 such that
A44: Dir100 = Dir(du100) & Dir111 = Dir(dv111) & hr3 = Dir ewr3 &
      du100 is not zero & dv111 is not zero & ewr3 is not zero &
      du100,dv111,ewr3 are_LinDep by A5,A9,ANPROJ_8:102,ANPROJ_2:23;
    are_Prop ewr3,dwr3 by A32,A44,ANPROJ_1:22;
    then consider ra be Real such that
A45: ra <> 0 & ewr3 = ra * dwr3
      by ANPROJ_1:1;
A46: ewr3 = |[ ra * 0, ra * dwr3`2,ra * dwr3`3 ]| by A45,A43,EUCLID_5:8
         .= |[ 0, ra * dwr3`2,ra * dwr3`3 ]|;
    |[1,0,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
    then are_Prop du100, |[1,0,0]| by A44,ANPROJ_1:22;
    then consider bdu100 be Real such that
A47: bdu100 <> 0 and
A48: du100 = bdu100 * |[1,0,0]| by ANPROJ_1:1;
A49: du100 = |[bdu100 * 1,bdu100 * 0,bdu100 * 0]| by A48,EUCLID_5:8
          .= <* bdu100,0,0 *>;
    Dir dv111 = Dir |[1,1,1]| & |[1,1,1]| is non zero
      by A44,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop dv111, |[1,1,1]| by A44,ANPROJ_1:22;
    then consider bdv111 be Real such that
A50: bdv111 <> 0 and
A51: dv111 = bdv111 * |[1,1,1]| by ANPROJ_1:1;
A52: dv111 = |[bdv111 * 1,bdv111 * 1,bdv111 * 1]| by A51,EUCLID_5:8
          .= <* bdv111,bdv111,bdv111 *>;
A53: ewr3 = <* 0,ra * dwr3.2,ra * dwr3`3 *>
              by A46,EUCLID_5:def 2
         .= <* 0,ra * dwr3.2,ra * dwr3.3 *>
              by EUCLID_5:def 3;
    du100 = <* du100`1,du100`2,du100`3 *> &
      dv111 = <* dv111`1,dv111`2,dv111`3 *> &
      ewr3 = <* ewr3`1,ewr3`2,ewr3`3 *> by EUCLID_5:3;
    then reconsider M = <* du100,dv111,ewr3 *> as Matrix of 3,F_Real
      by ANPROJ_8:19;
A54: M = <* <* du100`1,du100`2,du100`3 *>, dv111,ewr3 *> by EUCLID_5:3
      .= <* <* du100`1,du100`2,du100`3 *>,
            <* dv111`1,dv111`2,dv111`3 *>, ewr3 *>
         by EUCLID_5:3
      .= <* <* du100`1,du100`2,du100`3 *>,
            <* dv111`1,dv111`2,dv111`3 *>,
            <* ewr3`1,ewr3`2,ewr3`3 *> *> by EUCLID_5:3;
A55: |{du100,dv111,ewr3}| = 0 by A44,ANPROJ_8:43;
    MXF2MXR M = <* <* bdu100,       0, 0 *>,
                   <* bdv111,       bdv111,      bdv111 *> ,
                   <* 0,  ra * dwr3.2, ra * dwr3.3 *> *>
                 by A49,A52,A53,MATRIXR1:def 2;
    then
    reconsider M1 = <* <* bdu100,       0, 0 *>,
                       <* bdv111,       bdv111,      bdv111 *> ,
                       <* 0,  ra * dwr3.2, ra * dwr3.3 *> *>
                         as Matrix of 3,REAL by MATRIXR1:def 2;
    Det M = Det M1 by A49,A52,A53,MATRIXR1:def 1
         .= bdu100 * bdv111 * (ra * dwr3.3) - bdu100 * (ra * dwr3.2) * bdv111
           by Lm4;
    then bdu100 * bdv111 * (ra * dwr3.3) - bdu100 * (ra * dwr3.2) * bdv111 = 0
      by A55,A54,ANPROJ_8:35;
    then
A56: (bdu100 * bdv111 * ra) * dwr3.3 = (bdu100 * ra *bdv111) * dwr3.2;
    bdu100 * bdv111 <> 0 by A47,A50,XCMPLX_1:6; then
A57: bdu100 * bdv111 * ra <> 0 by A45,XCMPLX_1:6;
A58: dwr3`3 = dwr3.3 & dwr3.2 = dwr3`2 by EUCLID_5:def 2,def 3;
    then reconsider l1 = dwr3`2 as non zero Real
      by A47,A50,A45,XCMPLX_1:6,A32,A43,A56,EUCLID_5:4;
A59: now
A60:  dwr3`2 <> 0 by A32,A58,A43,A57,A56,XCMPLX_1:5,EUCLID_5:4;
      dwr3 = |[0 * l1 ,1 * l1,1 * l1]| by A58,A43,A57,A56,XCMPLX_1:5
          .= l1 * |[0,1,1]| by EUCLID_5:8;
      hence are_Prop dwr3,|[0,1,1]| by A60,ANPROJ_1:1;
      thus dwr3 is non zero by A32;
      thus |[0,1,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
    end;
    p1,p2,p3 are_collinear by A2,A3,Th12;
    then consider du100,dv001,dwp3 be Element of TOP-REAL 3 such that
A61: Dir100 = Dir(du100) & Dir001 = Dir(dv001) &
    (homography(N)).p3 = Dir dwp3 & du100 is not zero &
    dv001 is not zero & dwp3 is not zero & du100,dv001,dwp3 are_LinDep
      by A9,ANPROJ_8:102,ANPROJ_2:23;
      |[1,0,0]| is non zero & du100 is non zero &
      Dir |[1,0,0]| = Dir du100 by A61,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop du100,|[1,0,0]| by ANPROJ_1:22;
    then consider va be Real such that
A62: va <> 0 and
A63: du100 = va * |[1,0,0]| by ANPROJ_1:1;
    du100 = |[va * 1,va * 0,va * 0]| by A63,EUCLID_5:8
         .= |[va,0,0]|;
    then
A64: du100`1 = va & du100`2 = 0 & du100`3 = 0 by EUCLID_5:2;
    |[0,0,1]| is non zero & dv001 is non zero &
    Dir |[0,0,1]| = Dir dv001 by A61,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop dv001,|[0,0,1]| by ANPROJ_1:22;
    then consider vb be Real such that
A65: vb <> 0 and
A66: dv001 = vb * |[0,0,1]| by ANPROJ_1:1;
    dv001 = |[vb * 0,vb * 0,vb * 1]| by A66,EUCLID_5:8
         .= |[0,0,vb]|;
    then
A67: dv001`1 = 0 & dv001`2 = 0 & dv001`3 = vb by EUCLID_5:2;
A68: 0 = |{du100,dv001,dwp3}| by A61,ANPROJ_8:43
      .= du100`1 * dv001`2 * dwp3`3 - du100`3 * dv001`2 * dwp3`1
         - du100`1 * dv001`3 * dwp3`2 + du100`2 * dv001`3 * dwp3`1
         - du100`2 * dv001`1 * dwp3`3 + du100`3 * dv001`1 * dwp3`2
           by ANPROJ_8:27
      .= - va * vb *dwp3`2 by A67,A64;
    (-va * vb) <> 0 by A62,A65,XCMPLX_1:6;
    then
A69: dwp3`2 = 0 by A68,XCMPLX_1:6;
    q1,q2,q3 are_collinear by A2,A4,Th13;
    then consider du010,dv111,dwq3 be Element of TOP-REAL 3 such that
A70: Dir010 = Dir(du010) & Dir111 = Dir(dv111) &
    (homography(N)).q3 = Dir dwq3 & du010 is not zero & dv111 is not zero &
      dwq3 is not zero & du010,dv111,dwq3 are_LinDep
      by A9,ANPROJ_8:102,ANPROJ_2:23;
    |[0,1,0]| is non zero & du010 is non zero &
      Dir |[0,1,0]| = Dir du010 by A70,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop du010,|[0,1,0]| by ANPROJ_1:22;
    then consider vc be Real such that
A71: vc <> 0 and
A72: du010 = vc * |[0,1,0]| by ANPROJ_1:1;
    du010 = |[vc * 0,vc * 1,vc * 0]| by A72,EUCLID_5:8
         .= |[0,vc,0]|;
    then
A73: du010`1 = 0 & du010`2 = vc & du010`3 = 0 by EUCLID_5:2;
    |[1,1,1]| is non zero & dv111 is non zero &
    Dir |[1,1,1]| = Dir dv111 by A70,EUCLID_5:4,FINSEQ_1:78;
    then are_Prop dv111,|[1,1,1]| by ANPROJ_1:22;
    then consider vd be Real such that
A74: vd <> 0 and
A75: dv111 = vd * |[1,1,1]| by ANPROJ_1:1;
    dv111 = |[vd * 1,vd * 1,vd * 1]| by A75,EUCLID_5:8
         .= |[vd,vd,vd]|;
    then
A76: dv111`1 = vd & dv111`2 = vd & dv111`3 = vd by EUCLID_5:2;
A77: 0 = |{du010,dv111,dwq3}| by A70,ANPROJ_8:43
      .= du010`1 * dv111`2 * dwq3`3
         - du010`3 * dv111`2 * dwq3`1
         - du010`1 * dv111`3 * dwq3`2
         + du010`2 * dv111`3 * dwq3`1
         - du010`2 * dv111`1 * dwq3`3
         + du010`3 * dv111`1 * dwq3`2 by ANPROJ_8:27
      .= vc * vd *dwq3`1 - vc * vd * dwq3`3 by A73,A76;
    vc * vd <> 0 by A71,A74,XCMPLX_1:6;
    then
A78: dwq3`1 = dwq3`3 by A77,XCMPLX_1:5;
A79: (homography(N)).r3 = Dir |[0,1,1]| by A59,A32,ANPROJ_1:22;
    consider dhp3,dhq3,dhr3 be Element of TOP-REAL 3 such that
A80: (homography(N)).p3 = Dir dhp3 & (homography(N)).q3 = Dir dhq3 &
      (homography(N)).r3 = Dir dhr3 & dhp3 is not zero & dhq3 is not zero &
      dhr3 is not zero & dhp3,dhq3,dhr3 are_LinDep
      by A8,ANPROJ_8:102,ANPROJ_2:23;
A81: |[dwp3`1,0,dwp3`3]| is non zero
    proof
      assume |[dwp3`1,0,dwp3`3]| is zero;
      then dwp3`1 = 0 & dwp3`3 = 0 by EUCLID_5:4,FINSEQ_1:78;
      then
A82:  dwp3 = |[dwp3`2 * 0,dwp3`2 * 1,dwp3`2 * 0]| by EUCLID_5:3
          .= dwp3`2 * |[0,1,0]| by EUCLID_5:8;
      now
        dwp3`2 <> 0
        proof
          assume dwp3`2 = 0;
          then dwp3 = |[ 0 * 0, 0 * 1, 0 * 0]| by A82,EUCLID_5:8
                   .= 0.TOP-REAL 3 by EUCLID_5:4;
          hence thesis by A61;
        end;
        hence are_Prop dwp3, |[0,1,0]| by A82,ANPROJ_1:1;
        thus dwp3 is non zero by A61;
        thus |[0,1,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
      end;
      then Dir dwp3 = Dir010 by ANPROJ_1:22;
      hence thesis by A2,A3,ANPROJ_9:16,A61,A9;
    end;
    dhr3 is non zero & |[0,1,1]| is non zero by A80,EUCLID_5:4,FINSEQ_1:78 ;
    then are_Prop dhr3,|[0,1,1]| by A79,A80,ANPROJ_1:22;
    then consider wc be Real such that
A83: wc <> 0 and
A84: dhr3 = wc * |[0,1,1]| by ANPROJ_1:1;
A85: dhr3 = |[wc * 0 ,wc * 1, wc * 1]| by A84,EUCLID_5:8
         .= |[0,wc,wc]|;
A86: Dir pp6 = Dir |[dwq3`1,dwq3`2,dwq3`1]| by A78,EUCLID_5:3,A11,A70;
A87: (dwp3`3) <> 0 & (dwp3`1) <> 0 & (dwp3`3)/(dwp3`1) is non zero Real
    proof
      thus (dwp3`3) <> 0 & (dwp3`1) <> 0
      proof
        assume dwp3`3 = 0 or dwp3`1 = 0;
        then per cases;
        suppose
A88:      dwp3`3 = 0;
          then
A89:      |[dwp3`1,0,dwp3`3]| = |[dwp3`1 * 1,dwp3`1 * 0,dwp3`1 * 0]|
                             .= dwp3`1 * |[1,0,0]| by EUCLID_5:8;
          dwp3`1 <> 0
          proof
            assume
A90:        dwp3`1 = 0;
A91:        dwp3 = |[dwp3`2 * 0,dwp3`2 * 1, dwp3`2 * 0]|
                   by A88,A90,EUCLID_5:3
                .= dwp3`2 * |[0,1,0]| by EUCLID_5:8;
            now
              dwp3`2 <> 0
              proof
                assume dwp3`2 = 0;
                then dwp3 = |[ 0 * 0, 0 * 1, 0 * 0]| by A91,EUCLID_5:8
                         .= 0.TOP-REAL 3 by EUCLID_5:4;
                hence thesis by A61;
              end;
              hence are_Prop dwp3,|[0,1,0]| by A91,ANPROJ_1:1;
              thus dwp3 is non zero by A61;
              thus |[0,1,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
            end;
            then Dir dwp3 = Dir010 by ANPROJ_1:22;
            hence contradiction by A61,A9,ANPROJ_9:16,A2,A3;
          end;
          then
A92:       are_Prop |[dwp3`1,0,dwp3`3]|,|[1,0,0]|
            by A89,ANPROJ_1:1;
A93:      |[1,0,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
          Dir pp3 = Dir |[dwp3`1,0,dwp3`3]| by A69,EUCLID_5:3,A10,A61
                 .= Dir100 by A92,A81,A93,ANPROJ_1:22;
          hence contradiction by A1,ANPROJ_9:16,A9,A10;
        end;
        suppose
A94:      dwp3`1 = 0;
          then
A95:      |[dwp3`1,0,dwp3`3]| = |[dwp3`3 * 0,dwp3`3 * 0,dwp3`3 * 1]|
                             .= dwp3`3 * |[0,0,1]| by EUCLID_5:8;
          dwp3`3 <> 0
          proof
            assume
A96:        dwp3`3 = 0;
A97:        dwp3 = |[dwp3`2 * 0,dwp3`2 * 1, dwp3`2 * 0]| by A94,A96,EUCLID_5:3
                .= dwp3`2 * |[0,1,0]| by EUCLID_5:8;
            now
              dwp3`2 <> 0
              proof
                assume dwp3`2 = 0;
                then dwp3 = |[ 0 * 0, 0 * 1, 0 * 0]| by A97,EUCLID_5:8
                         .= 0.TOP-REAL 3 by EUCLID_5:4;
                hence thesis by A61;
              end;
              hence are_Prop dwp3,|[0,1,0]| by A97,ANPROJ_1:1;
              thus dwp3 is non zero by A61;
              thus |[0,1,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
            end;
            then Dir dwp3 = Dir010 by ANPROJ_1:22;
            hence contradiction by ANPROJ_9:16,A61,A9,A2,A3;
          end;
          then
A98:       are_Prop |[dwp3`1,0,dwp3`3]|,|[0,0,1]|
            by A95,ANPROJ_1:1;
A99:      |[0,0,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
          Dir pp3 = Dir |[dwp3`1,0,dwp3`3]| by A69,EUCLID_5:3,A10,A61
                 .= Dir001 by A98,A81,A99,ANPROJ_1:22;
          hence contradiction by ANPROJ_9:16,A9,A10,A1;
        end;
      end;
      hence thesis;
    end;
    then reconsider f = (dwp3`3)/(dwp3`1) as non zero Real;
A100: now
      |[dwp3`1,0,dwp3`3]| = |[dwp3`1 * 1, dwp3`1 * 0 ,dwp3`1 * f]|
                            by A87,XCMPLX_1:87
                         .= dwp3`1 * |[1,0,f]| by EUCLID_5:8;
      hence are_Prop |[dwp3`1,0,dwp3`3]|,|[1,0,f]| by A87,ANPROJ_1:1;
      thus |[dwp3`1,0,dwp3`3]| is non zero by A81;
      thus |[1,0,f]| is non zero by EUCLID_5:4,FINSEQ_1:78;
    end;
A101: Dir pp3 = Dir |[dwp3`1,0,dwp3`3]| by A69,EUCLID_5:3,A10,A61
            .= Dir |[1,0,f]| by A100,ANPROJ_1:22;
A102: dwq3`1 <> 0 & dwq3`2 <> 0
    proof
      assume dwq3`1 = 0 or dwq3`2 = 0;
      then per cases;
      suppose
A103:   dwq3`1 = 0;
        then
A104:   |[dwq3`1,dwq3`2,dwq3`1]| = |[dwq3`2 * 0,dwq3`2 * 1, dwq3`2 * 0]|
                                .= dwq3`2 * |[0,1,0]| by EUCLID_5:8;
        now
A105:     dwq3`2 <> 0
          proof
            assume
A106:       dwq3`2 = 0;
            now
              thus
A107:         dwq3 = |[dwq3`3 * 0,dwq3`3 * 0, dwq3`3 * 1]|
                     by A103,A106,EUCLID_5:3
                  .= dwq3`3 * |[0,0,1]| by EUCLID_5:8;
              thus dwq3`3 <> 0
              proof
                assume dwq3`3 = 0;
                then dwq3 = |[0 * 0 ,0 * 0 ,0 * 1]| by A107,EUCLID_5:8
                         .= 0.TOP-REAL 3 by EUCLID_5:4;
                hence contradiction by A70;
              end;
            end;
            then
A108:       are_Prop dwq3,|[0,0,1]| by ANPROJ_1:1;
            |[0,0,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
            then Dir dwq3 = Dir001 by A70,A108,ANPROJ_1:22;
            then q3 = p2 by ANPROJ_9:16,A70,A9;
            hence contradiction by A1,A2,A3,A4,Th14;
          end;
          hence are_Prop |[dwq3`1,dwq3`2,dwq3`1]|, |[0,1,0]|
            by A104,ANPROJ_1:1;
          thus |[dwq3`1,dwq3`2,dwq3`1]| is non zero
            by EUCLID_5:4,A105,FINSEQ_1:78;
          thus |[0,1,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
        end;
        then (homography(N)).q3 = (homography(N)).q1 by A86,ANPROJ_1:22,A11,A9;
        hence contradiction by ANPROJ_9:16,A1;
      end;
      suppose
A109:   dwq3`2 = 0;
        then
A110:   |[dwq3`1,dwq3`2,dwq3`1]| = |[dwq3`1 * 1,dwq3`1 * 0, dwq3`1 * 1]|
                                .= dwq3`1 * |[1,0,1]| by EUCLID_5:8;
A111:   dwq3`1 <> 0
        proof
          assume
A112:     dwq3`1 = 0;
          now
            now
              thus dwq3 = |[dwq3`3 * 0,dwq3`3 * 0,dwq3`3 * 1]|
                          by A112,A109,EUCLID_5:3
                       .= dwq3`3 * |[0,0,1]| by EUCLID_5:8;
              thus dwq3`3 <> 0 by A70,A109,A112,EUCLID_5:3,4;
            end;
            hence are_Prop dwq3,|[0,0,1]| by ANPROJ_1:1;
            thus dwq3 is non zero by A70;
            thus |[0,0,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
          end;
          then Dir dwq3 = Dir001 by ANPROJ_1:22;
          then q3 = p2 by ANPROJ_9:16,A70,A9;
          hence contradiction
            by A1,A2,A3,A4,Th14;
        end;
        then
A113:   are_Prop |[dwq3`1,dwq3`2,dwq3`1]|, |[1,0,1]| by A110,ANPROJ_1:1;
A114:   |[dwq3`1,dwq3`2,dwq3`1]| is non zero by EUCLID_5:4,A111,FINSEQ_1:78;
        |[1,0,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
        then
A115:   (homography(N)).q3 = Dir |[1,0,1]|
          by A113,A114,ANPROJ_1:22,A86,A11;
A116:   |[1,0,0]|,|[0,0,1]|,|[1,0,1]| are_LinDep
        proof
          |{ |[1,0,0]|,|[0,0,1]|,|[1,0,1]| }| = 0
          proof
            |[1,0,0]|`1 = 1 & |[0,0,1]|`1 = 0 & |[1,0,1]|`1 = 1 &
            |[1,0,0]|`2 = 0 & |[0,0,1]|`2 = 0 & |[1,0,1]|`2 = 0 &
            |[1,0,0]|`3 = 0 & |[0,0,1]|`3 = 1 & |[1,0,1]|`3 = 1
              by EUCLID_5:2;
            then
            |{ |[1,0,0]|,|[0,0,1]|,|[1,0,1]| }| =
              1 * 0 * 1 - 0 * 0 * 1 - 1 * 1 * 0 + 0 * 1 * 1 - 0 * 0 * 1
              + 0 * 0 * 0 by ANPROJ_8:27
                                               .= 0;
            hence thesis;
          end;
          hence thesis by ANPROJ_8:43;
        end;
        (homography(N)).p1 = Dir100 & (homography(N)).p2 = Dir001 &
          |[1,0,1]| is non zero & |[1,0,0]| is non zero &
          |[0,0,1]| is non zero
          by A9,EUCLID_5:4,FINSEQ_1:78;
        then p1,p2,q3 are_collinear by ANPROJ_2:23,A115,A116,ANPROJ_8:102;
        hence contradiction by A1,A2,A3,A4,Th9;
      end;
    end;
    then reconsider g = (dwq3`2)/(dwq3`1) as non zero Real;
A117: |[dwq3`1,dwq3`2,dwq3`1]| = |[dwq3`1 * 1,dwq3`1 * g,dwq3`1 * 1]|
                                  by A102,XCMPLX_1:87
                              .= dwq3`1 * |[1,g,1]| by EUCLID_5:8;
A118: are_Prop |[dwq3`1,dwq3`2,dwq3`1]|,|[1,g,1]| &
      |[dwq3`1,dwq3`2,dwq3`1]| is non zero &
      |[1,g,1]| is non zero by EUCLID_5:4,FINSEQ_1:78,A102,A117,ANPROJ_1:1;
    then
A119: Dir pp6 = Dir |[1,g,1]| by ANPROJ_1:22,A86;
     reconsider h = (b * av010)/(a * au100) as non zero Real by A22;
A120: are_Prop |[a * au100,b * av010,0]|,|[1,h,0]|
    proof
      now
        thus a * au100 <> 0 by A22,ORDINAL1:def 14;
        b * av010 = ((a * au100) * ((b * av010))) / (a * au100)
                     by A22,ORDINAL1:def 14,XCMPLX_1:89
                  .= (a * au100) * ((b * av010) / (a * au100))
                     by XCMPLX_1:74;
        hence |[a * au100,b * av010,0]|
                 = |[ a * au100 * 1, (a * au100) * ((b * av010) / (a * au100)),
                                     a * au100 * 0]|
                .=  a * au100 * |[1,h,0]| by EUCLID_5:8;
      end;
      hence thesis by ANPROJ_1:1;
    end;
A121: |[1,h,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
A122: (b2 * av111 + a2 * au001) <> 0
    proof
      assume b2 * av111 + a2 * au001 = 0;
      then
A123: wr2 = |[b2 * av111 * 1,b2 * av111 * 1, b2 * av111 * 0]| by A31
              .= b2 * av111 * |[1,1,0]| by EUCLID_5:8;
      now
A124:   b2 <> 0
        proof
          assume b2 = 0;
          then
A125:     wr2 = a2 * |[u001`1,u001`2,u001`3]| + 0 * v111
                by A26,EUCLID_5:3
             .= |[a2 * u001`1,a2 * u001`2,a2 * u001`3]| + 0 * v111
                by EUCLID_5:8
             .= |[a2 * u001`1,a2 * u001`2,a2 * u001`3]|
                + 0 * |[v111`1,v111`2,v111`3]| by EUCLID_5:3
             .= |[a2 * u001`1,a2 * u001`2,a2 * u001`3]| +
                |[0 * v111`1,0 * v111`2,0 * v111`3]|
                by EUCLID_5:8
             .= |[a2 * u001`1 + 0,a2 * u001`2 + 0,a2 * u001`3 +0 ]|
                by EUCLID_5:6
             .= a2 * |[u001`1,u001`2,u001`3]| by EUCLID_5:8
             .= a2 * u001 by EUCLID_5:3;
          a2 <> 0
          proof
            assume a2 = 0;
            then wr2 = 0 * |[u001`1,u001`2,u001`3]| by A125,EUCLID_5:3
                    .= |[0 * u001`1,0 * u001`2,0 * u001`3]|
                      by EUCLID_5:8
                    .= 0.TOP-REAL 3 by EUCLID_5:4;
            hence contradiction by A25;
          end;
          then are_Prop wr2,u001 by A125,ANPROJ_1:1;
          then Dir wr2 = Dir u001 by A25,ANPROJ_1:22;
          then p2 = r2 by A25,A9,ANPROJ_9:16;
          hence contradiction by A1,A2,A3,A5,Th15;
        end;
        thus are_Prop wr2,|[1,1,0]|
          by A29,A124,XCMPLX_1:6,A123,ANPROJ_1:1;
        thus wr2 is non zero by A25;
        thus |[1,1,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
      end;
      then
A126: Dir wr2 = Dir |[1,1,0]| by ANPROJ_1:22;
A127: |[1,1,0]|,|[1,0,0]|,|[0,1,0]| are_LinDep
      proof
        |[1,1,0]|`1 = 1 & |[1,0,0]|`1 = 1 & |[0,1,0]|`1 = 0 &
          |[1,1,0]|`2 = 1 & |[1,0,0]|`2 = 0 & |[0,1,0]|`2 = 1 &
          |[1,1,0]|`3 = 0 & |[1,0,0]|`3 = 0 & |[0,1,0]|`3 = 0
          by EUCLID_5:2;
        then |{ |[1,1,0]|,|[1,0,0]|,|[0,1,0]| }|
          = 1 * 0 * 0 - 0 * 1 * 0 - 1 * 1 * 0 + 1 * 1 * 0 -
            1 * 1 * 0 + 0 * 1 * 0 by ANPROJ_8:27
         .= 0;
        hence thesis by ANPROJ_8:43;
      end;
      |[1,1,0]| is non zero & |[1,0,0]| is non zero &
        |[0,1,0]| is non zero by EUCLID_5:4,FINSEQ_1:78;
      then (homography(N)).r2 = Dir wr2 & Dir100 = (homography(N)).p1 &
        r2,p1,q1 are_collinear
        by A25,A9,A127,A126,ANPROJ_2:23,ANPROJ_8:102;
      hence contradiction by A1,A2,A3,A4,A5,Th16;
    end;
A128: b2 * av111 <> 0
    proof
      b2 <> 0
      proof
        assume b2 = 0;
        then
A129:   wr2 = a2 * |[u001`1,u001`2,u001`3]| +
                0 * v111 by A26,EUCLID_5:3
           .= |[a2 * u001`1,a2 * u001`2,a2 * u001`3]| + 0 * v111
                by EUCLID_5:8
           .= |[a2 * u001`1,a2 * u001`2,a2 * u001`3]| +
                0 * |[v111`1,v111`2,v111`3]| by EUCLID_5:3
           .= |[a2 * u001`1,a2 * u001`2,a2 * u001`3]|
                + |[0 * v111`1,0 * v111`2,0 * v111`3]| by EUCLID_5:8
           .= |[a2 * u001`1 + 0,a2 * u001`2 + 0,a2 * u001`3 +0 ]|
                by EUCLID_5:6
           .= a2 * |[u001`1,u001`2,u001`3]| by EUCLID_5:8
           .= a2 * u001 by EUCLID_5:3;
        a2 <> 0
        proof
          assume a2 = 0;
          then wr2 = 0 * |[u001`1,u001`2,u001`3]| by A129,EUCLID_5:3
                  .= |[0 * u001`1,0 * u001`2,0 * u001`3]|
                     by EUCLID_5:8
                  .= 0.TOP-REAL 3 by EUCLID_5:4;
          hence contradiction by A25;
        end;
        then are_Prop wr2,u001 by A129,ANPROJ_1:1;
        then Dir wr2 = Dir u001 by A25,ANPROJ_1:22;
        then p2 = r2 by A25,A9,ANPROJ_9:16;
        hence contradiction by A1,A2,A3,A5,Th15;
      end;
      hence thesis by A29,XCMPLX_1:6;
    end;
    then reconsider i = (b2 * av111 + a2 * au001) / (b2 * av111)
      as non zero Real by A122;
A130:
    now
      now
        thus |[b2 * av111,b2 * av111,a2 * au001 + b2 * av111]|
          = |[b2 * av111, b2 * av111,  (b2 * av111) *
            (a2 * au001 + b2 * av111) / (b2 *av111)]|
            by A128,XCMPLX_1:89
         .= |[b2 * av111 * 1, b2 * av111 * 1,
            (b2 * av111) * ((a2 * au001 + b2 * av111) / (b2 *av111))]|
            by XCMPLX_1:74
         .= (b2 * av111) *|[1,1,i]| by EUCLID_5:8;
        thus b2 * av111 <> 0 by A128;
      end;
      hence are_Prop |[b2 * av111,b2 * av111,
                       a2 * au001 + b2 * av111]|,
                       |[1,1,i]| by ANPROJ_1:1;
      thus |[b2 * av111,b2 * av111,a2 * au001 + b2 * av111]| is
             non zero by EUCLID_5:4,FINSEQ_1:78,A128;
      thus |[1,1,i]| is non zero by FINSEQ_1:78,EUCLID_5:4;
    end;
A131: Dir pp8 = Dir |[1,1,i]| by A130,A12,A25,A31,ANPROJ_1:22;
A132:
    now
      now
        thus |[0,wc,wc]| = |[wc * 0,wc *1,wc *1]|
                        .= wc * |[0,1,1]| by EUCLID_5:8;
        thus wc <> 0 by A83;
      end;
      hence are_Prop |[0,wc,wc]|,|[0,1,1]| by ANPROJ_1:1;
      thus |[0,wc,wc]| is non zero by EUCLID_5:4,FINSEQ_1:78,A83;
      thus |[0,1,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
    end;
A133: Dir pp9 = Dir |[0,1,1]|
      by A80,A13,A85,A132,ANPROJ_1:22;
    reconsider u1 = |[1,h,0]|,u2 = |[1,1,i]|,
      u3=|[0,1,1]| as Element of TOP-REAL 3;
A134: u1`1 = 1 & u1`2 = h & u1`3 = 0 &
         u2`1 = 1 & u2`2 = 1 & u2`3 = i &
         u3`1 = 0 & u3`2 = 1 & u3`3 = 1 by EUCLID_5:2;
A135: |{ u1,u2,u3 }| = u1`1 * u2`2 * u3`3
                        - u1`3*u2`2*u3`1 - u1`1*u2`3*u3`2
                        + u1`2*u2`3*u3`1 - u1`2*u2`1*u3`3
                        + u1`3*u2`1*u3`2 by ANPROJ_8:27
                    .= 1 - i - h by A134;
    i + h = 1
    proof
A136: |[1,h,0]|`1 = 1 & |[0,0,1]|`1 = 0 & |[1,g,1]|`1 = 1 &
        |[1,h,0]|`2 = h & |[0,0,1]|`2 = 0 & |[1,g,1]|`2 = g &
        |[1,h,0]|`3 = 0 & |[0,0,1]|`3 = 1 & |[1,g,1]|`3 = 1
        by EUCLID_5:2;
A137: |[1,1,i]|`1 = 1 & |[1,0,f]|`1 = 1 & |[0,1,0]|`1 = 0 &
        |[1,1,i]|`2 = 1 & |[1,0,f]|`2 = 0 & |[0,1,0]|`2 = 1 &
        |[1,1,i]|`3 = i & |[1,0,f]|`3 = f & |[0,1,0]|`3 = 0
        by EUCLID_5:2;
      r1,p2,q3 are_collinear by A5,ANPROJ_2:24;
      then consider u,v,w be Element of TOP-REAL 3 such that
A138: (homography(N)).r1 = Dir(u) and
A139: (homography(N)).p2 = Dir(v) and
A140: (homography(N)).q3 = Dir(w) and
A141: u is not zero & v is not zero & w is not zero and
A142: u,v,w are_LinDep by ANPROJ_8:102,ANPROJ_2:23;
A143: |{ u,v,w }| = 0 by A142,ANPROJ_8:43;
      u is non zero & |[1,h,0]| is non zero &
        Dir u = Dir |[1,h,0]|
        by A141,A138,A121,A120,ANPROJ_1:22,A14,A21;
      then are_Prop |[1,h,0]|,u by ANPROJ_1:22;
      then consider aa be Real such that
      aa <> 0 and
A144: |[1,h,0]| = aa * u by ANPROJ_1:1;
      |[0,0,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
      then are_Prop |[0,0,1]|,v by A9,A139,A141,ANPROJ_1:22;
      then consider b be Real such that
      b <> 0 and
A145: |[0,0,1]| = b * v by ANPROJ_1:1;
A146: |[1,g,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
      are_Prop |[1,g,1]|,w by A119,A11,A140,A146,A141,ANPROJ_1:22;
      then consider c be Real such that
      c <> 0 and
A147: |[1,g,1]| = c * w by ANPROJ_1:1;
      |{ |[1,h,0]|, |[0,0,1]|, |[1,g,1]| }| = 0
      proof
        |{ |[1,h,0]|, |[0,0,1]|, |[1,g,1]| }|
          = aa * |{ u, b * v,c * w }| by A144,A145,A147,ANPROJ_8:31
         .= aa * (b * |{ u, v,c * w }|) by ANPROJ_8:32
         .= aa * (b * (c * |{ u,v,w }|)) by ANPROJ_8:33
         .= aa * b * c * 0 by A143;
        hence thesis;
      end;
      then
A148:  0 = 1 * 0 * 1 - 0 * 0 * 1 - 1 * 1 * g +
            h * 1 * 1 - h * 0 * 1 + 0 * 0 * g
            by A136,ANPROJ_8:27
        .= h - g;
      r2,p3,q1 are_collinear by A5,ANPROJ_2:24;
      then consider u,v,w be Element of TOP-REAL 3 such that
A149: (homography(N)).r2 = Dir(u) and
A150: (homography(N)).p3 = Dir(v) and
A151: (homography(N)).q1 = Dir(w) and
A152: u is not zero & v is not zero & w is not zero and
A153: u,v,w are_LinDep by ANPROJ_8:102,ANPROJ_2:23;
A154: |{ u,v,w }| = 0 by A153,ANPROJ_8:43;
      Dir u = Dir |[1,1,i]| & u is non zero &
        |[1,1,i]| is non zero
        by A130,A25,A31,ANPROJ_1:22,A149,A152;
      then are_Prop u,|[1,1,i]| by ANPROJ_1:22;
      then consider a be Real such that
      a <> 0 and
A155: |[1,1,i]| = a * u by ANPROJ_1:1;
      Dir v = Dir |[1,0,f]| & v is non zero &
        |[1,0,f]| is non zero
        by A152,EUCLID_5:4,FINSEQ_1:78,A101,A150,A10;
      then are_Prop v,|[1,0,f]| by ANPROJ_1:22;
      then consider b be Real such that
      b <> 0 and
A156: |[1,0,f]| = b * v by ANPROJ_1:1;
      Dir w = Dir010 & w is non zero & |[0,1,0]| is non zero
        by A152,A151,A9,EUCLID_5:4,FINSEQ_1:78;
      then are_Prop |[0,1,0]|,w by ANPROJ_1:22;
      then consider c be Real such that
      c <> 0 and
A157: |[0,1,0]| = c * w by ANPROJ_1:1;
      |{ |[1,1,i]|,|[1,0,f]|,|[0,1,0]| }|
        = a * |{ u, b * v,|[0,1,0]| }| by A155,A156,ANPROJ_8:31
       .= a * (b * |{ u, v,c * w }|) by A157,ANPROJ_8:32
       .= a * (b * (c * |{ u, v,w }|)) by ANPROJ_8:33
       .= 0 by A154;
      then
A158: 0 = 1 * 0 * 0 - i * 0 * 0 - 1 * f * 1 +
         1 * f * 0 - 1 * 1 * 0 + i * 1 * 1
         by A137,ANPROJ_8:27
       .= i - f;
A159: |[1,h,0]|`1 = 1 & |[1,0,i]|`1 = 1 & |[1,1,1]|`1 = 1 &
        |[1,h,0]|`2 = h & |[1,0,i]|`2 = 0 &  |[1,1,1]|`2 = 1 &
        |[1,h,0]|`3 = 0 & |[1,0,i]|`3 = i & |[1,1,1]|`3 = 1
        by EUCLID_5:2;
      r1,p3,q2 are_collinear by A5,ANPROJ_2:24;
      then consider u,v,w be Element of TOP-REAL 3 such that
A160: (homography(N)).r1 = Dir(u) and
A161: (homography(N)).p3 = Dir(v) and
A162: (homography(N)).q2 = Dir(w) and
A163: u is not zero & v is not zero & w is not zero and
A164: u,v,w are_LinDep by ANPROJ_8:102,ANPROJ_2:23;
A165: |{ u,v,w }| = 0 by A164,ANPROJ_8:43;
      u is non zero & |[1,h,0]| is non zero &
        Dir u = Dir |[1,h,0]|
        by A160,A121,A120,ANPROJ_1:22,A14,A21,A163;
      then are_Prop |[1,h,0]|,u by ANPROJ_1:22;
      then consider a be Real such that
      a <> 0 and
A166: |[1,h,0]| = a * u by ANPROJ_1:1;
      Dir v = Dir |[1,0,i]| & v is non zero &
        |[1,0,i]| is non zero
        by A161,A10,A101,A158,A163,EUCLID_5:4,FINSEQ_1:78;
      then are_Prop v,|[1,0,i]| by ANPROJ_1:22;
      then consider b be Real such that
      b <> 0 and
A167: |[1,0,i]| = b * v by ANPROJ_1:1;
      Dir w = Dir |[1,1,1]| &
        w is non zero &
      |[1,1,1]| is non zero by A162,A163,A9,EUCLID_5:4,FINSEQ_1:78;
      then are_Prop w,|[1,1,1]| by ANPROJ_1:22;
      then consider c be Real such that
      c <> 0 and
A168: |[1,1,1]| = c * w by ANPROJ_1:1;
      |{ |[1,h,0]|, |[1,0,i]|,|[1,1,1]| }| = 0
      proof
        |{ |[1,h,0]|, |[1,0,i]|,|[1,1,1]| }|
          = c * |{ |[1,h,0]|, |[1,0,i]|,w }| by A168,ANPROJ_8:33
         .= c * (b * |{ |[1,h,0]|,v,w }|) by A167,ANPROJ_8:32
         .= c * (b * (a * |{ u,v,w }|)) by A166,ANPROJ_8:31
         .= 0 by A165;
        hence thesis;
      end;
      then
A169: 0 = 1 * 0 * 1 - 0 * 0 * 1 - 1 * i * 1 +
           h * i * 1 - h * 1 * 1 + 0 * 1 * 1
           by ANPROJ_8:27,A159
       .=  - i + h * i - h;
A170: |[1,1,i]|`1 = 1 & |[1,0,0]|`1 = 1 & |[1,g,1]|`1 = 1 &
        |[1,1,i]|`2 = 1 & |[1,0,0]|`2 = 0 & |[1,g,1]|`2 = g &
        |[1,1,i]|`3 = i & |[1,0,0]|`3 = 0 & |[1,g,1]|`3 = 1
        by EUCLID_5:2;
      r2,p1,q3 are_collinear by A5,ANPROJ_2:24;
      then consider u,v,w be Element of TOP-REAL 3 such that
A171: (homography(N)).r2 = Dir(u) and
A172: (homography(N)).p1 = Dir(v) and
A173: (homography(N)).q3 = Dir(w) and
A174: u is not zero & v is not zero & w is not zero and
A175: u,v,w are_LinDep by ANPROJ_8:102,ANPROJ_2:23;
A176: |{ u,v,w }| = 0 by A175,ANPROJ_8:43;
      Dir u = Dir |[1,1,i]| & u is non zero &
        |[1,1,i]| is non zero
        by A174,A130,A25,A31,ANPROJ_1:22,A171;
      then are_Prop u,|[1,1,i]| by ANPROJ_1:22;
      then consider a be Real such that
      a <> 0 and
A177: |[1,1,i]| = a * u by ANPROJ_1:1;
      Dir v = Dir |[1,0,0]| & v is non zero &
        |[1,0,0]| is non zero
        by A174,A9,A172,EUCLID_5:4,FINSEQ_1:78;
      then are_Prop |[1,0,0]|,v by ANPROJ_1:22;
      then consider b be Real such that
      b <> 0 and
A178: |[1,0,0]| = b * v by ANPROJ_1:1;
      Dir w = Dir |[1,g,1]| & w is non zero &
        |[1,g,1]| is non zero
        by A174,A118,ANPROJ_1:22,A86,A11,A173;
      then are_Prop |[1,g,1]|, w by ANPROJ_1:22;
      then consider c be Real such that
      c <> 0 and
A179: |[1,g,1]| = c * w by ANPROJ_1:1;
      |{ |[1,1,i]|,|[1,0,0]|,|[1,g,1]| }| = 0
      proof
        |{ |[1,1,i]|,|[1,0,0]|,|[1,g,1]| }|
          = a * |{ u,|[1,0,0]|,|[1,g,1]| }| by A177,ANPROJ_8:31
         .= a * (b * (|{ u,v,|[1,g,1]| }|)) by A178,ANPROJ_8:32
         .= a * (b * (c * (|{ u,v,w }|))) by A179,ANPROJ_8:33
         .= 0 by A176;
        hence thesis;
      end;
      then 0 = 1 * 0 * 1 - i * 0 * 1 - 1 * 0 * g +
               1 * 0 * 1 - 1 * 1 * 1 + i * 1 * g
               by A170,ANPROJ_8:27
             .= -1 + i * g;
      hence thesis by A169,A148;
    end;
    then
A180: u1,u2,u3 are_LinDep by A135,ANPROJ_8:43;
A181: (homography(N)).r1 = Dir u1 by A121,A120,ANPROJ_1:22,A14,A21;
    |[1,h,0]| is non zero & |[1,1,i]| is non zero &
      |[0,1,1]| is non zero by EUCLID_5:4,FINSEQ_1:78;
    hence thesis by ANPROJ_8:102,A180,A181,A12,A13,A131,A133,ANPROJ_2:23;
  end;

Lm7:
  o<>p2 & o<>p3 & p2<>p3 &
  p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 & q1<> q2 & q1<>q3 &
  not o,p1,q1 are_collinear & o,p1,p2 are_collinear &
  o,p1,p3 are_collinear & o,q1,q2 are_collinear & o,q1,q3 are_collinear &
  p1,q2,r3 are_collinear & q1,p2,r3 are_collinear &
  p1,q3,r2 are_collinear & p3,q1,r2 are_collinear &
  p2,q3,r1 are_collinear & p3,q2,r1 are_collinear &
  p1,q1,r1 are_collinear implies r1,r2,r3 are_collinear
  proof
    assume that
A1: o<>p2 & o<>p3 & p2<>p3 & p1<>p2 & p1<>p3 & o<>q2 & o<>q3 &
      q2<>q3 & q1<> q2 & q1<>q3 & not o,p1,q1 are_collinear &
      o,p1,p2 are_collinear & o,p1,p3 are_collinear &
      o,q1,q2 are_collinear & o,q1,q3 are_collinear and
A2:   p1,q2,r3 are_collinear & q1,p2,r3 are_collinear &
      p1,q3,r2 are_collinear & p3,q1,r2 are_collinear &
      p2,q3,r1 are_collinear & p3,q2,r1 are_collinear and
A3:   p1,q1,r1 are_collinear;
    per cases;
    suppose
A4:   not p2,q2,r2 are_collinear;
      o <> p1 & o <> q1 & o<>p3 & p1<>p3 & p2<>p1 &
      p2<>p3 & o<>q3 & q1<>q3 & q2<> q1 & q2<>q3 &
      not o,p2,q2 are_collinear & o,p2,p1 are_collinear &
      o,p2,p3 are_collinear & o,q2,q1 are_collinear &
      o,q2,q3 are_collinear &
      p2,q1,r3 are_collinear & q2,p1,r3 are_collinear &
      p2,q3,r1 are_collinear & p3,q2,r1 are_collinear &
      p1,q3,r2 are_collinear & p3,q1,r2 are_collinear
        by A1,A2,Th8,ANPROJ_2:24;
      then r2,r1,r3 are_collinear by A4,Lm5;
      hence thesis by ANPROJ_2:24;
    end;
    suppose
A5:   p2,q2,r2 are_collinear;
      per cases;
      suppose
A6:     not p3,q3,r3 are_collinear;
        o<>p2 & o<>p1 & p2<>p1 & p3<>p2 & p3<>p1 & o<>q2 &
          o<>q1 & q2<>q1 & q3<> q2 & q3<>q1 &
        not o,p3,q3 are_collinear & o,p3,p2 are_collinear &
        o,p3,p1 are_collinear &
        o,q3,q2 are_collinear & o,q3,q1 are_collinear &
        p3,q2,r1 are_collinear & q3,p2,r1 are_collinear &
          p3,q1,r2 are_collinear & p1,q3,r2 are_collinear &
          p2,q1,r3 are_collinear & p1,q2,r3 are_collinear
          by A1,Th8,A2,COLLSP:4;
        then r3,r2,r1 are_collinear by A6,Lm5;
        hence thesis by ANPROJ_2:24;
      end;
      suppose p3,q3,r3 are_collinear;
        hence thesis by A1,A2,A3,Lm6,A5;
      end;
    end;
  end;

::$N Pappus theorem
theorem
  o<>p2 & o<>p3 & p2<>p3 &
  p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 & q1<> q2 & q1<>q3 &
  not o,p1,q1 are_collinear & o,p1,p2 are_collinear & o,p1,p3 are_collinear &
  o,q1,q2 are_collinear & o,q1,q3 are_collinear & p1,q2,r3 are_collinear &
  q1,p2,r3 are_collinear & p1,q3,r2 are_collinear & p3,q1,r2 are_collinear &
  p2,q3,r1 are_collinear & p3,q2,r1 are_collinear
  implies r1,r2,r3 are_collinear
  proof
    assume
A1: o<>p2 & o<>p3 & p2<>p3 & p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 &
      q1<> q2 & q1<>q3 & not o,p1,q1 are_collinear & o,p1,p2 are_collinear &
      o,p1,p3 are_collinear & o,q1,q2 are_collinear & o,q1,q3 are_collinear &
      p1,q2,r3 are_collinear & q1,p2,r3 are_collinear &
      p1,q3,r2 are_collinear &
      p3,q1,r2 are_collinear & p2,q3,r1 are_collinear & p3,q2,r1 are_collinear;
    per cases;
    suppose p1,q1,r1 are_collinear;
      hence thesis by A1,Lm7;
    end;
    suppose not p1,q1,r1 are_collinear;
      hence thesis by A1,Lm5;
    end;
  end;

theorem
  ProjectiveSpace TOP-REAL 3 is Pappian Desarguesian CollProjectivePlane
    by ANPROJ_8:57;

begin :: Version 2

reserve v0,v1,v2,v3,v4,
        c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,
        v100,v101,v102,v103 for Element of ProjectiveSpace TOP-REAL 3;

theorem Th19:
  c1 <> c2 & c1 <> c3 & c2 <> c3 & c2 <> c4 & c3 <> c4 & c1 <> c5 & c1 <> c6 &
  c5 <> c6 & c5 <> c7 & c6 <> c7 & (not c1,c4,c7 are_collinear) &
  (c1,c4,c2 are_collinear) & (c1,c4,c3 are_collinear) &
  (c1,c7,c5 are_collinear) & (c1,c7,c6 are_collinear) &
  (c4,c5,c8 are_collinear) & (c7,c2,c8 are_collinear) &
  (c4,c6,c9 are_collinear) & (c3,c7,c9 are_collinear) &
  (c2,c6,c10 are_collinear) & (c3,c5,c10 are_collinear)
  implies not(
  (c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c2,c3,c7
  are_collinear or c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or
  c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or c2,c7,c5
  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
  are_collinear or c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or
  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or not c4,c5,c8
  are_collinear or not c4,c6,c9 are_collinear or not c2,c7,c8
  are_collinear or not c2,c6,c10 are_collinear or not c3,c7,c9
  are_collinear or not c3,c5,c10 are_collinear)) 
  proof
    assume that
A1: c1 <> c2 and
A2: c3 <> c1 and
A3: c2 <> c3 and
A4: c2 <> c4 and
A5: c3 <> c4 and
A6: c1 <> c5 and
A7: c1 <> c6 and
A8: c5 <> c6 and
A9: c5 <> c7 and
A10: c6 <> c7 and
A11: not c1,c4,c7 are_collinear and
A12: c1,c4,c2 are_collinear and
A13: c1,c4,c3 are_collinear and
A14: c1,c7,c5 are_collinear and
A15: c1,c7,c6 are_collinear and
A16: c4,c5,c8 are_collinear and
A17: c7,c2,c8 are_collinear and
A18: c4,c6,c9 are_collinear and
A19: c3,c7,c9 are_collinear and
A20: c2,c6,c10 are_collinear and
A21: c3,c5,c10 are_collinear;
    assume
A22: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or
    c2,c3,c7 are_collinear or c4,c2,c5 are_collinear or c4,c2,c6
    are_collinear or c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or
    c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c3,c7,c5
    are_collinear or c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or
    c2,c3,c6 are_collinear or c7,c5,c4 are_collinear or c7,c6,c4
    are_collinear or c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or
    not c4,c5,c8 are_collinear or not c4,c6,c9 are_collinear or
    not c2,c7,c8 are_collinear or not c2,c6,c10 are_collinear or
    not c3,c7,c9 are_collinear or not c3,c5,c10 are_collinear;
    now
      thus not c1,c7,c4 are_collinear by COLLSP:4,A11;
      thus c4,c2,c1 are_collinear by A12,HESSENBE:1;
      thus c4,c3,c1 are_collinear by HESSENBE:1,A13;
      thus not c2,c3,c7 are_collinear by A3,A11,A12,A13,HESSENBE:3;
      thus c1,c5,c7 are_collinear by A14,COLLSP:4;
      thus c7,c1,c5 are_collinear by A14,COLLSP:4;
      thus c7,c6,c1 are_collinear by HESSENBE:1,A15;
      thus c1,c6,c7 are_collinear by A15,COLLSP:4;
      thus c7,c1,c6 are_collinear by A15,COLLSP:4;
      (for v100 holds v100,c4,c4 are_collinear) &
       (for v2,v100 holds not v100,c4,c4 are_collinear or
       not v100,c4,c3 are_collinear or not c4,c3,v2 are_collinear or
       v100,c4,v2 are_collinear) by COLLSP:2,A5,HESSENBE:3;
      hence not c4,c3,c7 are_collinear by A11,A13;
      (for v100 holds v100,c4,c4 are_collinear) &
       (for v2,v100 holds not v100,c4,c4 are_collinear or
       not v100,c4,c2 are_collinear or not c4,c2,v2 are_collinear or
      v100,c4,v2 are_collinear) by COLLSP:2,A4,HESSENBE:3;
      hence not c4,c2,c7 are_collinear by A11,A12;
      (for v100 holds v100,c1,c1 are_collinear) &
        (for v2,v100 holds not v100,c1,c1 are_collinear or
        not v100,c1,c2 are_collinear or not c1,c2,v2 are_collinear or
        v100,c1,v2 are_collinear) & c1,c2,c4 are_collinear &
      not c7,c1,c4 are_collinear by A12,COLLSP:2,A1,HESSENBE:1,3,A11;
      hence not c7,c1,c2 are_collinear;
      thus for v2,v100 holds not v100,c7,c7 are_collinear or
        not v100,c7,c6 are_collinear or  not c7,c6,v2 are_collinear or
        v100,c7,v2 are_collinear by A10,HESSENBE:3;
      thus for v100 holds v100,c7,c7 are_collinear by COLLSP:2;
      thus for v2,v100 holds not v100,c7,c7 are_collinear or
        not v100,c7,c5 are_collinear or not c7,c5,v2 are_collinear or
        v100,c7,v2  are_collinear by A9,HESSENBE:3;
      now
        thus c3,c7,c7 are_collinear by COLLSP:2;
        c1,c4,c1 are_collinear by COLLSP:2;
        hence not c3,c1,c7 are_collinear by A11,A2,A13,HESSENBE:3;
      end;
      hence not c3,c7,c1 are_collinear by HESSENBE:2,A11,A13;
      thus c5,c7,c1 are_collinear by HESSENBE:1,A14;
      now
        thus c2,c7,c7 are_collinear by COLLSP:2;
        c1,c4,c1 are_collinear by COLLSP:2;
        hence not c2,c1,c7 are_collinear by A11,A1,A12,HESSENBE:3;
      end;
      hence not c2,c7,c1 are_collinear by A11,A12,HESSENBE:2;
      not c4=c1 by COLLSP:2,A11;
      then c1,c2,c3 are_collinear by A13,A12,HESSENBE:2;
      hence c2,c3,c1 are_collinear by HESSENBE:1;
      hereby
        let v2,v100;
        not v100,c7,c5 are_collinear or not v100,c7,c7 are_collinear or
          not c5,c7,v2 are_collinear or v100,c7,v2 are_collinear
          by A9,HESSENBE:3;
        hence not v100,c7,c5 are_collinear or
        not c5,c7,v2 are_collinear or v100,c7,v2 are_collinear by COLLSP:2;
      end;
    end;
    hence contradiction
      by A6,HESSENBE:3,A17,A16,A18,A19,A20,A21,A22,COLLSP:4,A15,A8,A14,A7;
  end;

theorem
  conic(0,0,0,0,0,0) = the carrier of ProjectiveSpace TOP-REAL 3
  proof
    now
      let o be object;
      assume
A1:   o in the carrier of ProjectiveSpace TOP-REAL 3;
      for u be Element of TOP-REAL 3 st u is non zero & o = Dir u
        holds qfconic(0,0,0,0,0,0,u) = 0;
      hence o in conic(0,0,0,0,0,0) by A1;
    end;
    then the carrier of ProjectiveSpace TOP-REAL 3 c= conic(0,0,0,0,0,0)
      by TARSKI:def 3;
    hence thesis by XBOOLE_0:def 10;
  end;

theorem
  o<>p2 & o<>p3 & p2<>p3 &
  p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 & q1<> q2 & q1<>q3 &
  not o,p1,q1 are_collinear & o,p1,p2 are_collinear & o,p1,p3 are_collinear &
  o,q1,q2 are_collinear & o,q1,q3 are_collinear & p1,q2,r3 are_collinear &
  q1,p2,r3 are_collinear & p1,q3,r2 are_collinear & p3,q1,r2 are_collinear &
  p2,q3,r1 are_collinear & p3,q2,r1 are_collinear
  implies p1,p2,p3,q1,q2,q3,r1,r2,r3 are_in_Pascal_configuration by Th19;

::$N Pappus theorem
theorem
  o<>p2 & o<>p3 & p2<>p3 &
  p1<>p2 & p1<>p3 & o<>q2 & o<>q3 & q2<>q3 & q1<> q2 & q1<>q3 &
  not o,p1,q1 are_collinear & o,p1,p2 are_collinear & o,p1,p3 are_collinear &
  o,q1,q2 are_collinear & o,q1,q3 are_collinear & p1,q2,r3 are_collinear &
  q1,p2,r3 are_collinear & p1,q3,r2 are_collinear & p3,q1,r2 are_collinear &
  p2,q3,r1 are_collinear & p3,q2,r1 are_collinear
  implies r1,r2,r3 are_collinear
  proof
    assume that
A1: o<>p2 and
A2: o<>p3 and
A3: p2<>p3 and
A4: p1<>p2 and
A5: p1<>p3 and
A6: o<>q2 and
A7: o<>q3 and
A8: q2<>q3 and
A9: q1<> q2 and
A10: q1<>q3 and
A11: not o,p1,q1 are_collinear and
A12: o,p1,p2 are_collinear and
A13: o,p1,p3 are_collinear and
A14: o,q1,q2 are_collinear and
A15: o,q1,q3 are_collinear and
A16: p1,q2,r3 are_collinear and
A17: q1,p2,r3 are_collinear and
A18: p1,q3,r2 are_collinear and
A19: p3,q1,r2 are_collinear and
A20: p2,q3,r1 are_collinear and
A21: p3,q2,r1 are_collinear;
    p1,p2,p3 are_collinear by A11,A12,A13,Th12;
    then consider u1,u2,u3 be Element of TOP-REAL 3 such that
A22:  p1 = Dir u1 and
A23:  p2 = Dir u2 and
A24:  p3 = Dir u3 and
A25:  u1 is non zero and
A26:  u2 is non zero and
A27:  u3 is non zero and
A28:  u1,u2,u3 are_LinDep by ANPROJ_2:23;
A29:    |{u1,u2,u3}| = 0 by A28,ANPROJ_8:43;
    then
A30: |(u1,u2<X>u3)| = 0 by EUCLID_5:def 5;
    set x1 = (u2`2 * u3`3) - (u2`3 * u3`2),
        x2 = (u2`3 * u3`1) - (u2`1 * u3`3),
        x3 = (u2`1 * u3`2) - (u2`2 * u3`1);
A31: u1 = |[u1`1,u1`2,u1`3]| by EUCLID_5:3;
A32: u2 <X> u3 = |[ x1,x2,x3 ]| by EUCLID_5:def 4;
A33: 0 = |( u1,u2 <X> u3 )| by A29,EUCLID_5:def 5
      .= u1`1 * x1 + u1`2 * x2 + u1`3* x3 by A31,A32,EUCLID_5:30;
A34: x1 * u1.1 + x2 * u1.2 + x3 * u1.3
        = x1 * u1.1 + x2 * u1.2 + x3 * u1`3 by EUCLID_5:def 3
       .= x1 * u1.1 + x2 * u1`2 + x3 * u1`3 by EUCLID_5:def 2
       .= 0 by A33,EUCLID_5:def 1;
A35: x1 * u2.1 + x2 * u2.2 + x3 * u2.3
        = x1 * u2.1 + x2 * u2.2 + x3 * u2`3 by EUCLID_5:def 3
       .= x1 * u2.1 + x2 * u2`2 + x3 * u2`3 by EUCLID_5:def 2
       .= x1 * u2`1 + x2 * u2`2 + x3 * u2`3 by EUCLID_5:def 1
       .= 0;
A36: x1 * u3.1 + x2 * u3.2 + x3 * u3.3
        = x1 * u3.1 + x2 * u3.2 + x3 * u3`3 by EUCLID_5:def 3
       .= x1 * u3.1 + x2 * u3`2 + x3 * u3`3 by EUCLID_5:def 2
       .= x1 * u3`1 + x2 * u3`2 + x3 * u3`3 by EUCLID_5:def 1
       .= 0;
    q1,q2,q3 are_collinear by A11,A14,A15,Th13;
    then consider v1,v2,v3 be Element of TOP-REAL 3 such that
A37: q1 = Dir v1 and
A38: q2 = Dir v2 and
A39: q3 = Dir v3 and
A40: v1 is non zero and
A41: v2 is non zero and
A42: v3 is non zero and
A43: v1,v2,v3 are_LinDep by ANPROJ_2:23;
A44:    |{v1,v2,v3}| = 0 by A43,ANPROJ_8:43;
    then
A45: |(v1,v2<X>v3)| = 0 by EUCLID_5:def 5;
    set y1 = (v2`2 * v3`3) - (v2`3 * v3`2),
        y2 = (v2`3 * v3`1) - (v2`1 * v3`3),
        y3 = (v2`1 * v3`2) - (v2`2 * v3`1);
A46: v1 = |[v1`1,v1`2,v1`3]| by EUCLID_5:3;
A47: v2 <X> v3 = |[ y1,y2,y3 ]| by EUCLID_5:def 4;
A48: 0 = |( v1,v2 <X> v3 )| by A44,EUCLID_5:def 5
       .= v1`1 * y1 + v1`2 * y2 + v1`3* y3
         by A46,A47,EUCLID_5:30;
A49: y1 * v1.1 + y2 * v1.2 + y3 * v1.3
        = y1 * v1.1 + y2 * v1.2 + y3 * v1`3 by EUCLID_5:def 3
       .= y1 * v1.1 + y2 * v1`2 + y3 * v1`3 by EUCLID_5:def 2
       .= 0 by A48,EUCLID_5:def 1;
A50: y1 * v2.1 + y2 * v2.2 + y3 * v2.3
       = y1 * v2.1 + y2 * v2.2 + y3 * v2`3 by EUCLID_5:def 3
      .= y1 * v2.1 + y2 * v2`2 + y3 * v2`3 by EUCLID_5:def 2
      .= y1 * v2`1 + y2 * v2`2 + y3 * v2`3 by EUCLID_5:def 1
      .= 0;
A51: y1 * v3.1 + y2 * v3.2 + y3 * v3.3
       = y1 * v3.1 + y2 * v3.2 + y3 * v3`3 by EUCLID_5:def 3
      .= y1 * v3.1 + y2 * v3`2 + y3 * v3`3 by EUCLID_5:def 2
      .= y1 * v3`1 + y2 * v3`2 + y3 * v3`3 by EUCLID_5:def 1
      .= 0;
    set xa = x1 * y1,
        xb = x2 * y2,
        xc = x3 * y3,
        xd = (x1 * y2 + x2 * y1),
        xe = (x1 * y3 + x3 * y1),
        xf = (x2 * y3 + x3 * y2);
A52: for u be Point of TOP-REAL 3 holds
      qfconic(xa,xb,xc,xd,xe,xf,u) = |(u,u2 <X> u3)| * |(u,v2 <X> v3)|
    proof
      let u be Point of TOP-REAL 3;
A53:  u.1 = u`1 & u.2 = u`2 & u.3 = u`3 by EUCLID_5:def 1,def 2,def 3;
      now
        thus qfconic(xa,xb,xc,xd,xe,xf,u)
          = xa * u`1 * u`1 + xb * u`2 * u`2 + xc * u`3 * u`3 +
           xd * u`1 * u`2 + xe * u`1 * u`3 + xf * u`2 * u`3 by A53;
        thus |(u,u2 <X> u3)| = |( |[u`1,u`2,u`3]|, |[x1,x2,x3]| )|
                                by EUCLID_5:27,A32
                            .= u`1 * x1 + u`2 * x2 + u`3 * x3 by EUCLID_5:30;
        thus |(u,v2 <X> v3)| = |( |[u`1,u`2,u`3]|, |[y1,y2,y3]| )|
                                 by EUCLID_5:27,A47
                            .= u`1 * y1 + u`2 * y2 + u`3 * y3 by EUCLID_5:30;
      end;
      hence thesis;
    end;
A54:
    now
      thus qfconic(xa,xb,xc,xd,xe,xf,u1)
             = (x1 * u1.1 + x2 * u1.2 + x3 * u1.3) *
               (y1 * u1.1 + y2 * u1.2 + y3 * u1.3)
            .= 0 by A34;
      thus qfconic(xa,xb,xc,xd,xe,xf,u2)
            = (x1 * u2.1 + x2 * u2.2 + x3 * u2.3) *
              (y1 * u2.1 + y2 * u2.2 + y3 * u2.3)
            .= 0 by A35;
      thus qfconic(xa,xb,xc,xd,xe,xf,u3)
            = (x1 * u3.1 + x2 * u3.2 + x3 * u3.3) *
              (y1 * u3.1 + y2 * u3.2 + y3 * u3.3)
            .= 0 by A36;
      thus qfconic(xa,xb,xc,xd,xe,xf,v1)
            = (x1 * v1.1 + x2 * v1.2 + x3 * v1.3) *
              (y1 * v1.1 + y2 * v1.2 + y3 * v1.3)
            .= 0 by A49;
      thus qfconic(xa,xb,xc,xd,xe,xf,v2)
            = (x1 * v2.1 + x2 * v2.2 + x3 * v2.3) *
              (y1 * v2.1 + y2 * v2.2 + y3 * v2.3)
            .= 0 by A50;
      thus qfconic(xa,xb,xc,xd,xe,xf,v3)
            = (x1 * v3.1 + x2 * v3.2 + x3 * v3.3) *
              (y1 * v3.1 + y2 * v3.2 + y3 * v3.3)
            .= 0 by A51;
    end;
    now
      thus p1,p2,p3,q1,q2,q3,r1,r2,r3 are_in_Pascal_configuration
        by A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,
           A17,A18,A19,A20,A21,Th19;
      thus xa <> 0 or xb <> 0 or xc <> 0 or xd <> 0 or xe <> 0 or xf <> 0
      proof
        assume xa = 0 & xb = 0 & xc = 0 & xd = 0 & xe = 0 & xf = 0;
        then reconsider xa,xb,xc,xd,xe,xf as zero Real by ORDINAL1:def 14;
        set w = 1/2 * (u1 + v1);
A55:    w = 1/2 * u1 + 1/2 * v1 by RVSUM_1:51;
        0 = qfconic(xa,xb,xc,xd,xe,xf,w)
         .= |( (1/2 * u1) + (1/2 * v1) , u2 <X> u3 )|
            * |( 1/2 * u1 + 1/2 * v1 , v2 <X> v3 )| by A55,A52
         .= ( |( (1/2 * u1), u2 <X> u3 )|
             + |( (1/2 * v1), u2 <X> u3 )| )
            * |( 1/2 * u1 + 1/2 * v1 , v2 <X> v3 )|
            by EUCLID_2:18
         .= ( (1/2) * |( u1, u2 <X> u3 )|
             + |( (1/2 * v1), u2 <X> u3 )| )
            * |( 1/2 * u1 + 1/2 * v1 , v2 <X> v3 )|
            by EUCLID_2:19
         .= |( (1/2 * v1), u2 <X> u3 )| * ( |( 1/2 * u1, v2 <X> v3 )|
            + |( 1/2 * v1 , v2 <X> v3 )| ) by A30,EUCLID_2:18
         .= |( (1/2 * v1), u2 <X> u3 )| * ( |( 1/2 * u1, v2 <X> v3 )|
            + (1/2) * |( v1 , v2 <X> v3 )| ) by EUCLID_2:19
         .= (1/2) * |( v1, u2 <X> u3 )| * |( (1/2) * u1, v2 <X> v3 )|
            by A45,EUCLID_2:19
         .= (1/2) * |( v1, u2 <X> u3 )| * ((1/2)
            * |( u1, v2 <X> v3 )|) by EUCLID_2:19
         .= (1/4) * |( v1, u2 <X> u3 )| * |( u1, v2 <X> v3 )|;
        then |( v1, u2 <X> u3 )| * |( u1, v2 <X> v3 )| = 0;
        then |{ v1,u2,u3 }| * |( u1, v2 <X> v3 )| = 0 by EUCLID_5:def 5;
        then |{ v1,u2,u3 }| * |{ u1, v2, v3 }| = 0 by EUCLID_5:def 5;
        then |{ v1,u2,u3 }| = 0 or |{ u1,v2,v3 }| = 0 by XCMPLX_1:6;
        then
A56:    q1,p2,p3 are_collinear or p1,q2,q3 are_collinear
          by A22,A23,A24,A25,A26,A27,A37,A38,A39,A40,A41,A42,BKMODEL1:1;
        p1,p2,p3,q1,q2,q3,r1,r2,r3 are_in_Pascal_configuration
          by A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,
             A19,A20,A21,Th19;
        hence thesis by A56,COLLSP:8;
      end;
      thus {p1,p2,p3,q1,q2,q3} c= conic(xa,xb,xc,xd,xe,xf)
      proof
        now
          let o be object;
          assume o in {p1,p2,p3,q1,q2,q3};
          then o = p1 or o = p2 or o = p3 or
            o = q1 or o = q2 or o = q3 by ENUMSET1:def 4;
          hence o in conic(xa,xb,xc,xd,xe,xf)
            by A54,A22,A23,A24,A25,A26,A27,A37,A38,A39,A40,A41,A42,PASCAL:11;
        end;
        hence thesis by TARSKI:def 3;
      end;
    end;
    hence thesis by PASCAL:36;
  end;

:::::::::::::::::::::::
:: Prover9 + ott2miz ::
:::::::::::::::::::::::

::**********************************************************************
:: VERSION 1: Some Lemmas
::**********************************************************************

:: set(ignore_option_dependencies). % GUI handles dependencies

:: if(Prover9). % Options for Prover9
::   assign(max_weight, 1000).
::   assign(max_seconds, 60).
:: end_if.

:: if(Mace4).   % Options for Mace4
::   assign(max_seconds, 60).
:: end_if.

:: formulas(assumptions).

:: ((x = y) | (x = z) | (y = z)) -> f(x,y,z) #label(COLLSP2).
:: ((x != y) & f(x,y,z) & f(x,y,u) & f(x,y,v)) -> f(z,u,v) #label(COLLSP3).
:: f(x,y,z) -> (f(y,x,z) & f(x,z,y)) #label(COLLSP4). 
:: f(x,y,z) -> f(y,z,x) #label(COLLSP8).

:: end_of_list.

:: formulas(goals).

:: %all xo all xp1 all xp2 all xp3 
:: set(ignore_option_dependencies). % GUI handles dependencies

:: if(Prover9). % Options for Prover9
::   assign(max_weight, 1000).
::   assign(max_seconds, 60).
:: end_if.

:: if(Mace4).   % Options for Mace4
::   assign(max_seconds, 60).
:: end_if.

:: formulas(assumptions).

:: ((x = y) | (x = z) | (y = z)) -> f(x,y,z) #label(COLLSP2).
:: ((x != y) & f(x,y,z) & f(x,y,u) & f(x,y,v)) -> f(z,u,v) #label(COLLSP3).
:: f(x,y,z) -> (f(y,x,z) & f(x,z,y)) #label(COLLSP4).
:: f(x,y,z) -> f(y,z,x) #label(COLLSP8).

:: end_of_list.

:: formulas(goals).
:: %all xq1 all xq2 all xq3 
:: %all xr1 all xr2 all xr3 
:: ((xo != xp2) & (xo != xp3) & (xp2 != xp3) & (xp1 != xp2) & (xp1 != xp3) & 
:: (xo != xq2) & (xo != xq3) & (xq2 != xq3) & (xq1 != xq2) & (xq1 != xq3) &
:: -f(xo,xp1,xq1) & 
:: f(xo,xp1,xp2) & f(xo,xp1,xp3) & 
:: f(xo,xq1,xq2) & f(xo,xq1,xq3) & 
:: f(xp1,xq2,xr3) & f(xq1,xp2,xr3) & 
:: f(xp1,xq3,xr2) & f(xp3,xq1,xr2) & 
:: f(xp2,xq3,xr1) & f(xp3,xq2,xr1) ) 

:: ->
:: -f(xp1,xq1,xp2) & -f(xp1,xr1,xp3) & -f(xp1,xq1,xp3) & -f(xp1,xr1,xp2) &
:: -f(xp1,xq1,xq2) & -f(xp1,xr1,xr3) & -f(xp1,xq1,xr3) & -f(xp1,xr1,xq2) &
:: -f(xp1,xq1,xr2) & -f(xp1,xr1,xq3) & -f(xp1,xq1,xq3) & -f(xp1,xr1,xr2) &
:: -f(xq1,xr1,xq2) & -f(xq1,xp1,xq3) & -f(xq1,xr1,xq2) & -f(xq1,xp1,xq3) &
:: -f(xq1,xr1,xr2) & -f(xq1,xp1,xp3) & -f(xq1,xr1,xp3) & -f(xq1,xp1,xr2) &
:: -f(xq1,xr1,xp2) & -f(xq1,xp1,xr3) & -f(xq1,xr1,xp2) & -f(xq1,xp1,xr3) &
:: -f(xr1,xp1,xp2) & -f(xr1,xq1,xq3) & -f(xr1,xp1,xq3) & -f(xr1,xq1,xp2) &
:: -f(xr1,xp1,xq2) & -f(xr1,xq1,xp3) & -f(xr1,xp1,xp3) & -f(xr1,xq1,xq2).

:: end_of_list.

:: ============================== prooftrans ============================
:: Prover9 (32) version Dec-2007, Dec 2007.
:: Process 8264 was started by RC on 
:: Thu Sep 15 21:13:31 2016
:: The command was "/cygdrive/c/Program Files (x86)/Prover9-Mace4/bin-win32/prover9".
:: ============================== end of head ===========================

:: ============================== end of input ==========================

:: ============================== PROOF =================================

:: % -------- Comments from original proof --------
:: % Proof 1 at 0.84 (+ 0.08) seconds.
:: % Length of proof is 189.
:: % Level of proof is 54.
:: % Maximum clause weight is 112.
:: % Given clauses 1760.

:: 1 x = y | x = z | y = z -> f(x,y,z) # label(COLLSP2) # label(non_clause).  [assumption].
:: 2 x != y & f(x,y,z) & f(x,y,u) & f(x,y,w) -> f(z,u,w) # label(COLLSP3) # label(non_clause).  [assumption].
:: 3 f(x,y,z) -> f(y,x,z) & f(x,z,y) # label(COLLSP4) # label(non_clause).  [assumption].
:: 4 f(x,y,z) -> f(y,z,x) # label(COLLSP8) # label(non_clause).  [assumption].
:: 5 x != y & x != z & y != z & u != y & u != z & x != w & x != v5 & w != v5 & v6 != w & v6 != v5 & -f(x,u,v6) & f(x,u,y) & f(x,u,z) & f(x,v6,w) & f(x,v6,v5) & f(u,w,v7) & f(v6,y,v7) & f(u,v5,v8) & f(z,v6,v8) & f(y,v5,v9) & f(z,w,v9) -> -f(u,v6,y) & -f(u,v9,z) & -f(u,v6,z) & -f(u,v9,y) & -f(u,v6,w) & -f(u,v9,v7) & -f(u,v6,v7) & -f(u,v9,w) & -f(u,v6,v8) & -f(u,v9,v5) & -f(u,v6,v5) & -f(u,v9,v8) & -f(v6,v9,w) & -f(v6,u,v5) & -f(v6,v9,w) & -f(v6,u,v5) & -f(v6,v9,v8) & -f(v6,u,z) & -f(v6,v9,z) & -f(v6,u,v8) & -f(v6,v9,y) & -f(v6,u,v7) & -f(v6,v9,y) & -f(v6,u,v7) & -f(v9,u,y) & -f(v9,v6,v5) & -f(v9,u,v5) & -f(v9,v6,y) & -f(v9,u,w) & -f(v9,v6,z) & -f(v9,u,z) & -f(v9,v6,w) # label(non_clause) # label(goal).  [goal].
:: 6 x != y | f(y,x,z) # label(COLLSP2).  [clausify(1)].
:: 7 x != y | f(y,z,x) # label(COLLSP2).  [clausify(1)].
:: 8 x != y | f(z,y,x) # label(COLLSP2).  [clausify(1)].
:: 9 x = y | -f(y,x,z) | -f(y,x,u) | -f(y,x,w) | f(z,u,w) # label(COLLSP3).  [clausify(2)].
:: 10 -f(x,y,z) | f(y,x,z) # label(COLLSP4).  [clausify(3)].
:: 11 -f(x,y,z) | f(x,z,y) # label(COLLSP4).  [clausify(3)].
:: 12 -f(x,y,z) | f(y,z,x) # label(COLLSP8).  [clausify(4)].
:: 13 c2 != c1.  [deny(5)].
:: 14 c3 != c1.  [deny(5)].
:: 15 c3 != c2.  [deny(5)].
:: 16 c4 != c2.  [deny(5)].
:: 17 c4 != c3.  [deny(5)].
:: 18 c5 != c1.  [deny(5)].
:: 19 c6 != c1.  [deny(5)].
:: 20 c6 != c5.  [deny(5)].
:: 21 c7 != c5.  [deny(5)].
:: 22 c7 != c6.  [deny(5)].
:: 23 -f(c1,c4,c7).  [deny(5)].
:: 24 f(c1,c4,c2).  [deny(5)].
:: 25 f(c1,c4,c3).  [deny(5)].
:: 26 f(c1,c7,c5).  [deny(5)].
:: 27 f(c1,c7,c6).  [deny(5)].
:: 28 f(c4,c5,c8).  [deny(5)].
:: 29 f(c7,c2,c8).  [deny(5)].
:: 30 f(c4,c6,c9).  [deny(5)].
:: 31 f(c3,c7,c9).  [deny(5)].
:: 32 f(c2,c6,c10).  [deny(5)].
:: 33 f(c3,c5,c10).  [deny(5)].
:: 34 f(c4,c7,c2) | f(c4,c10,c3) | f(c4,c7,c3) | f(c4,c10,c2) | f(c4,c7,c5) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c7,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c4,c6) | f(c7,c10,c9) | f(c7,c4,c3) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c7,c6) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c7,c3) | f(c10,c4,c3) | f(c10,c7,c5).  [deny(5)].
:: 40 f(x,y,x).  [xx_res(7,a)].
:: 41 f(x,y,y).  [xx_res(8,a)].
:: 42 -f(c7,c1,c4).  [ur(12,b,23,a)].
:: 44 -f(c4,c1,c7).  [ur(10,b,23,a)].
:: 45 c7 != c4.  [ur(8,b,23,a)].
:: 46 c7 != c1.  [ur(7,b,23,a)].
:: 47 c4 != c1.  [ur(6,b,23,a)].
:: 48 f(c4,c2,c1).  [resolve(24,a,12,a)].
:: 49 f(c1,c2,c4).  [resolve(24,a,11,a)].
:: 51 -f(c1,c4,x) | -f(c1,c4,y) | f(x,y,c2).  [resolve(24,a,9,d),unit_del(a,47)].
:: 54 f(c4,c3,c1).  [resolve(25,a,12,a)].
:: 55 f(c1,c3,c4).  [resolve(25,a,11,a)].
:: 60 f(c7,c5,c1).  [resolve(26,a,12,a)].
:: 61 f(c1,c5,c7).  [resolve(26,a,11,a)].
:: 63 -f(c1,c7,x) | -f(c1,c7,y) | f(x,y,c5).  [resolve(26,a,9,d),unit_del(a,46)].
:: 66 f(c7,c6,c1).  [resolve(27,a,12,a)].
:: 67 f(c1,c6,c7).  [resolve(27,a,11,a)].
:: 72 f(c5,c8,c4).  [resolve(28,a,12,a)].
:: 78 f(c2,c8,c7).  [resolve(29,a,12,a)].
:: 84 f(c6,c9,c4).  [resolve(30,a,12,a)].
:: 90 f(c7,c9,c3).  [resolve(31,a,12,a)].
:: 96 f(c6,c10,c2).  [resolve(32,a,12,a)].
:: 102 f(c5,c10,c3).  [resolve(33,a,12,a)].
:: 108 f(c4,c7,c2) | f(c4,c10,c3) | f(c4,c7,c3) | f(c4,c10,c2) | f(c4,c7,c5) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c7,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c4,c6) | f(c7,c10,c9) | f(c7,c4,c3) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c7,c3) | f(c10,c4,c3) | f(c10,c7,c5) | f(c7,c6,c10).  [resolve(34,v,12,a)].
:: 115 -f(c4,c7,c1).  [ur(12,b,42,a)].
:: 116 -f(c7,c4,c1).  [ur(11,b,42,a)].
:: 117 x = y | -f(y,x,z) | -f(y,x,u) | f(z,u,y).  [resolve(40,a,9,d)].
:: 118 x = y | -f(y,x,z) | -f(y,x,u) | f(z,y,u).  [resolve(40,a,9,c)].
:: 120 x = y | -f(y,x,z) | -f(y,x,u) | f(z,u,x).  [resolve(41,a,9,d)].
:: 121 x = y | -f(y,x,z) | -f(y,x,u) | f(z,x,u).  [resolve(41,a,9,c)].
:: 122 x = y | -f(y,x,z) | -f(y,x,u) | f(x,z,u).  [resolve(41,a,9,b)].
:: 124 f(c2,c4,c1).  [resolve(48,a,10,a)].
:: 128 -f(c4,c2,c7).  [ur(9,a,16,a(flip),c,48,a,d,40,a,e,42,a)].
:: 132 -f(c1,c2,c7).  [ur(9,a,13,a,c,40,a,d,49,a,e,42,a)].
:: 134 -f(c4,c7,c2).  [ur(11,b,128,a)].
:: 143 f(c4,c10,c3) | f(c4,c7,c3) | f(c4,c10,c2) | f(c4,c7,c5) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c7,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c4,c6) | f(c7,c10,c9) | f(c7,c4,c3) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c7,c3) | f(c10,c4,c3) | f(c10,c7,c5) | f(c7,c6,c10).  [back_unit_del(108),unit_del(a,134)].
:: 152 f(c3,c4,c1).  [resolve(54,a,10,a)].
:: 156 -f(c4,c3,c7).  [ur(9,a,17,a(flip),c,40,a,d,54,a,e,116,a)].
:: 160 -f(c1,c3,c7).  [ur(9,a,14,a,c,40,a,d,55,a,e,42,a)].
:: 165 -f(c1,c4,x) | f(c1,x,c2).  [resolve(51,a,40,a)].
:: 177 f(c5,c1,c7).  [resolve(60,a,12,a)].
:: 178 f(c5,c7,c1).  [resolve(60,a,10,a)].
:: 182 -f(c7,c5,c4).  [ur(9,a,21,a(flip),c,40,a,d,60,a,e,115,a)].
:: 183 -f(c7,c5,c2).  [ur(9,a,21,a(flip),b,60,a,d,40,a,e,132,a)].
:: 187 -f(c1,c5,c4).  [ur(9,a,18,a,c,40,a,d,61,a,e,44,a)].
:: 196 -f(c7,c6,x) | -f(c7,c6,y) | f(c1,x,y).  [resolve(66,a,9,b),flip(a),unit_del(a,22)].
:: 197 -f(c7,c6,c4).  [ur(9,a,22,a(flip),c,40,a,d,66,a,e,115,a)].
:: 198 -f(c7,c6,c2).  [ur(9,a,22,a(flip),b,66,a,d,40,a,e,132,a)].
:: 205 -f(c7,c4,c3).  [ur(12,b,156,a)].
:: 206 -f(c4,c7,c3).  [ur(11,b,156,a)].
:: 208 c7 != c3.  [ur(8,b,156,a)].
:: 210 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c5) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c7,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c4,c6) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c7,c3) | f(c10,c4,c3) | f(c10,c7,c5) | f(c7,c6,c10).  [back_unit_del(143),unit_del(b,206),unit_del(o,205)].
:: 220 -f(c3,c7,c4).  [ur(9,a,208,a,c,40,a,d,41,a,e,156,a)].
:: 222 -f(c7,c1,c3).  [ur(12,b,160,a)].
:: 227 -f(c1,c5,c3).  [ur(9,a,18,a,b,40,a,d,61,a,e,160,a)].
:: 229 -f(c7,c5,c3).  [ur(9,a,21,a(flip),b,60,a,d,40,a,e,160,a)].
:: 233 -f(c1,c6,c4).  [ur(9,a,19,a,c,40,a,d,67,a,e,44,a)].
:: 234 -f(c1,c6,c3).  [ur(9,a,19,a,b,40,a,d,67,a,e,160,a)].
:: 239 f(c8,c4,c5).  [resolve(72,a,12,a)].
:: 257 f(c8,c2,c7).  [resolve(78,a,10,a)].
:: 271 -f(c4,c7,c5).  [ur(12,b,182,a)].
:: 274 c5 != c4.  [ur(8,b,182,a),flip(a)].
:: 281 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c7,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c4,c6) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c7,c3) | f(c10,c4,c3) | f(c10,c7,c5) | f(c7,c6,c10).  [back_unit_del(210),unit_del(c,271)].
:: 289 f(c9,c4,c6).  [resolve(84,a,12,a)].
:: 301 f(c9,c7,c3).  [resolve(90,a,10,a)].
:: 314 c5 != c2.  [ur(8,b,183,a),flip(a)].
:: 316 -f(c5,c2,c7).  [ur(9,a,314,a(flip),c,40,a,d,41,a,e,183,a)].
:: 324 -f(c4,c3,c5).  [ur(9,a,17,a(flip),b,54,a,d,40,a,e,187,a)].
:: 332 f(c10,c2,c6).  [resolve(96,a,12,a)].
:: 333 f(c10,c6,c2).  [resolve(96,a,10,a)].
:: 348 -f(c4,c7,c6).  [ur(12,b,197,a)].
:: 349 -f(c7,c4,c6).  [ur(11,b,197,a)].
:: 351 c6 != c4.  [ur(8,b,197,a),flip(a)].
:: 353 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c7,c3) | f(c10,c4,c3) | f(c10,c7,c5) | f(c7,c6,c10).  [back_unit_del(281),unit_del(h,348),unit_del(k,349)].
:: 366 -f(c4,c6,c7).  [ur(9,a,351,a,c,41,a,d,40,a,e,197,a)].
:: 368 -f(c2,c7,c6).  [ur(12,b,198,a)].
:: 371 c6 != c2.  [ur(8,b,198,a),flip(a)].
:: 378 f(c10,c3,c5).  [resolve(102,a,12,a)].
:: 379 f(c10,c5,c3).  [resolve(102,a,10,a)].
:: 389 -f(c1,c7,x) | f(c7,x,c5).  [resolve(63,a,41,a)].
:: 411 -f(c3,c4,c5).  [ur(9,a,17,a,b,152,a,d,41,a,e,187,a)].
:: 421 -f(c5,c1,c3).  [ur(9,a,18,a(flip),b,41,a,d,177,a,e,160,a)].
:: 425 -f(c5,c7,c3).  [ur(9,a,21,a,b,41,a,c,178,a,e,222,a)].
:: 442 c5 != c3.  [ur(8,b,227,a),flip(a)].
:: 472 -f(c3,c7,c5).  [ur(12,b,229,a)].
:: 497 -f(c2,c4,c6).  [ur(9,a,16,a,b,124,a,d,41,a,e,233,a)].
:: 675 f(c1,c3,c2).  [resolve(165,a,25,a)].
:: 794 x = y | -f(y,x,z) | f(z,y,x).  [resolve(118,c,41,a)].
:: 805 f(c3,c2,c1).  [resolve(675,a,12,a)].
:: 820 -f(c3,c2,c6).  [ur(117,a,15,a(flip),b,805,a,d,234,a)].
:: 821 -f(c3,c2,c5).  [ur(117,a,15,a(flip),b,805,a,d,227,a)].
:: 1127 -f(c5,c4,c3).  [ur(117,a,274,a(flip),b,41,a,d,324,a)].
:: 1348 c10 = c5 | -f(c10,c5,x) | f(c5,x,c3).  [resolve(122,c,379,a),flip(a)].
:: 1349 c10 = c3 | -f(c10,c3,x) | f(c3,x,c5).  [resolve(122,c,378,a),flip(a)].
:: 1350 c10 = c6 | -f(c10,c6,x) | f(c6,x,c2).  [resolve(122,c,333,a),flip(a)].
:: 1351 c10 = c2 | -f(c10,c2,x) | f(c2,x,c6).  [resolve(122,c,332,a),flip(a)].
:: 1352 c9 = c7 | -f(c9,c7,x) | f(c7,x,c3).  [resolve(122,c,301,a),flip(a)].
:: 1355 c9 = c4 | -f(c9,c4,x) | f(c4,x,c6).  [resolve(122,c,289,a),flip(a)].
:: 1359 c8 = c4 | -f(c8,c4,x) | f(c4,x,c5).  [resolve(122,c,239,a),flip(a)].
:: 1412 f(c7,c6,c5).  [resolve(389,a,27,a)].
:: 1425 f(c6,c5,c7).  [resolve(1412,a,12,a)].
:: 1450 -f(c6,c5,c2).  [ur(122,a,20,a(flip),c,1425,a,d,316,a)].
:: 1452 -f(c6,c5,c3).  [ur(122,a,20,a(flip),b,1425,a,d,425,a)].
:: 1619 -f(c6,c4,c2).  [ur(121,a,351,a(flip),c,40,a,d,497,a)].
:: 1632 -f(c2,c6,c3).  [ur(120,a,371,a,c,40,a,d,820,a)].
:: 1637 -f(c3,c5,c2).  [ur(120,a,442,a,b,40,a,d,821,a)].
:: 1644 -f(c2,c6,c5).  [ur(122,a,371,a,c,40,a,d,1450,a)].
:: 1653 -f(c3,c5,c6).  [ur(121,a,442,a,c,40,a,d,1452,a)].
:: 1687 -f(c7,c6,x) | f(c1,x,c5).  [resolve(196,b,1412,a)].
:: 1720 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c7,c3) | f(c10,c4,c3) | f(c7,c6,c10).  [resolve(353,u,10,a),merge(v)].
:: 1841 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c7,c2) | f(c10,c4,c5) | f(c10,c4,c3) | f(c7,c6,c10).  [resolve(1720,s,10,a),merge(u)].
:: 1858 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c6) | f(c10,c4,c5) | f(c10,c4,c3) | f(c7,c6,c10).  [resolve(1841,q,10,a),merge(t)].
:: 1875 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c5) | f(c10,c4,c3) | f(c7,c6,c10).  [resolve(1858,p,10,a),merge(s)].
:: 1892 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c10,c4,c3) | f(c7,c6,c10).  [resolve(1875,p,10,a),merge(r)].
:: 1909 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c10,c4,c2) | f(c7,c6,c10).  [resolve(1892,p,10,a),merge(q)].
:: 1926 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10).  [resolve(1909,o,10,a),merge(p)].
:: 1941 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10) | f(c10,c9,c7).  [resolve(1926,j,12,a)].
:: 1960 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10) | f(c9,c7,c10).  [resolve(1941,o,12,a)].
:: 2007 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c5) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10) | c9 = c7.  [resolve(1960,o,1352,b),merge(p)].
:: 2022 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10) | c9 = c7 | f(c10,c5,c7).  [resolve(2007,i,12,a)].
:: 2029 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c10,c3) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10) | c9 = c7 | c10 = c5.  [resolve(2022,o,1348,b),unit_del(p,425)].
:: 2046 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10) | c9 = c7 | c10 = c5 | f(c10,c3,c7).  [resolve(2029,i,12,a)].
:: 2053 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c4,c9) | f(c7,c10,c2) | f(c7,c4,c8) | f(c7,c6,c10) | c9 = c7 | c10 = c5 | c10 = c3.  [resolve(2046,o,1349,b),unit_del(p,472)].
:: 2070 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c4,c9) | f(c7,c4,c8) | f(c7,c6,c10) | c9 = c7 | c10 = c5 | c10 = c3 | f(c10,c2,c7).  [resolve(2053,j,12,a)].
:: 2077 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c4,c9) | f(c7,c4,c8) | f(c7,c6,c10) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2.  [resolve(2070,o,1351,b),unit_del(p,368)].
:: 2080 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c4,c9) | f(c7,c4,c8) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5).  [resolve(2077,k,1687,a)].
:: 2158 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | f(c7,c4,c8) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5).  [resolve(2080,i,10,a),merge(o)].
:: 2175 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | f(c4,c10,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5).  [resolve(2158,i,10,a),merge(n)].
:: 2190 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | f(c10,c9,c4).  [resolve(2175,h,12,a)].
:: 2209 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | f(c9,c4,c10).  [resolve(2190,m,12,a)].
:: 2257 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c10,c8) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4.  [resolve(2209,m,1355,b),merge(n)].
:: 2272 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | f(c10,c8,c4).  [resolve(2257,c,12,a)].
:: 2291 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | f(c8,c4,c10).  [resolve(2272,m,12,a)].
:: 2337 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | f(c4,c10,c6) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4.  [resolve(2291,m,1359,b),merge(n)].
:: 2352 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | f(c10,c6,c4).  [resolve(2337,f,12,a)].
:: 2358 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c10,c5) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6.  [resolve(2352,m,1350,b),unit_del(n,1619)].
:: 2375 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6 | f(c10,c5,c4).  [resolve(2358,d,12,a)].
:: 2382 f(c4,c10,c3) | f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6.  [resolve(2375,m,1348,b),merge(m),unit_del(m,1127)].
:: 2397 f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6 | f(c10,c3,c4).  [resolve(2382,a,12,a)].
:: 2403 f(c4,c10,c2) | f(c4,c7,c8) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6.  [resolve(2397,l,1349,b),merge(l),unit_del(l,411)].
:: 2418 f(c4,c7,c8) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6 | f(c10,c2,c4).  [resolve(2403,a,12,a)].
:: 2424 f(c4,c7,c8) | f(c4,c7,c9) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6.  [resolve(2418,k,1351,b),merge(k),unit_del(k,497)].
:: 2425 f(c4,c7,c8) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6 | f(c9,c4,c7).  [resolve(2424,b,794,b),unit_del(j,45)].
:: 2445 f(c4,c7,c8) | c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6.  [resolve(2425,j,1355,b),merge(j),unit_del(j,348)].
:: 2446 c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6 | f(c8,c4,c7).  [resolve(2445,a,794,b),unit_del(i,45)].
:: 2466 c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | f(c1,c10,c5) | c9 = c4 | c8 = c4 | c10 = c6.  [resolve(2446,i,1359,b),merge(i),unit_del(i,271)].
:: 2481 c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | c9 = c4 | c8 = c4 | c10 = c6 | f(c10,c5,c1).  [resolve(2466,e,12,a)].
:: 2487 c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | c9 = c4 | c8 = c4 | c10 = c6.  [resolve(2481,h,1348,b),merge(h),unit_del(h,421)].
:: 2494 c9 = c7 | c10 = c5 | c10 = c3 | c10 = c2 | c9 = c4 | c8 = c4.  [para(2487(g,1),33(a,3)),unit_del(g,1653)].
:: 2501 c9 = c7 | c10 = c3 | c10 = c2 | c9 = c4 | c8 = c4.  [para(2494(b,1),32(a,3)),unit_del(f,1644)].
:: 2508 c9 = c7 | c10 = c2 | c9 = c4 | c8 = c4.  [para(2501(b,1),32(a,3)),unit_del(e,1632)].
:: 2515 c9 = c7 | c9 = c4 | c8 = c4.  [para(2508(b,1),33(a,3)),unit_del(d,1637)].
:: 2522 c9 = c4 | c8 = c4.  [para(2515(a,1),30(a,3)),unit_del(c,366)].
:: 2529 c8 = c4.  [para(2522(a,1),31(a,3)),unit_del(b,220)].
:: 2627 $F.  [back_rewrite(257),rewrite([2529(1)]),unit_del(a,128)].

:: ============================== end of proof ==========================

:: PROVER9: reformat IVY, renumber proof

:: ;; ============================== prooftrans ============================
:: ;; Prover9 (32) version Dec-2007, Dec 2007.
:: ;; Process 8264 was started by RC on 
:: ;; Thu Sep 15 21:13:31 2016
:: ;; The command was "/cygdrive/c/Program Files (x86)/Prover9-Mace4/bin-win32/prover9".
:: ;; ============================== end of head ===========================

:: ;; BEGINNING OF PROOF OBJECT
:: (
:: (1 (input) (= v0 v0) NIL)
:: (2 (input) (or (not (= v0 v1)) (f v1 v0 v2)) NIL)
:: (3 (input) (or (not (= v0 v1)) (f v1 v2 v0)) NIL)
:: (4 (input) (or (not (= v0 v1)) (f v2 v1 v0)) NIL)
:: (5 (input) (or (= v0 v1) (or (not (f v1 v0 v2)) (or (not (f v1 v0 v3)) (or (not (f v1 v0 v4)) (f v2 v3 v4))))) NIL)
:: (6 (input) (or (not (f v0 v1 v2)) (f v1 v0 v2)) NIL)
:: (7 (input) (or (not (f v0 v1 v2)) (f v0 v2 v1)) NIL)
:: (8 (input) (or (not (f v0 v1 v2)) (f v1 v2 v0)) NIL)
:: (9 (input) (not (= (c2) (c1))) NIL)
:: (10 (input) (not (= (c3) (c1))) NIL)
:: (11 (input) (not (= (c3) (c2))) NIL)
:: (12 (input) (not (= (c4) (c2))) NIL)
:: (13 (input) (not (= (c4) (c3))) NIL)
:: (14 (input) (not (= (c5) (c1))) NIL)
:: (15 (input) (not (= (c6) (c1))) NIL)
:: (16 (input) (not (= (c6) (c5))) NIL)
:: (17 (input) (not (= (c7) (c5))) NIL)
:: (18 (input) (not (= (c7) (c6))) NIL)
:: (19 (input) (not (f (c1) (c4) (c7))) NIL)
:: (20 (input) (f (c1) (c4) (c2)) NIL)
:: (21 (input) (f (c1) (c4) (c3)) NIL)
:: (22 (input) (f (c1) (c7) (c5)) NIL)
:: (23 (input) (f (c1) (c7) (c6)) NIL)
:: (24 (input) (f (c4) (c5) (c8)) NIL)
:: (25 (input) (f (c7) (c2) (c8)) NIL)
:: (26 (input) (f (c4) (c6) (c9)) NIL)
:: (27 (input) (f (c3) (c7) (c9)) NIL)
:: (28 (input) (f (c2) (c6) (c10)) NIL)
:: (29 (input) (f (c3) (c5) (c10)) NIL)
:: (30 (input) (or (f (c4) (c7) (c2)) (or (f (c4) (c10) (c3)) (or (f (c4) (c7) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c5)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c7) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c4) (c6)) (or (f (c7) (c10) (c9)) (or (f (c7) (c4) (c3)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c7) (c6)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (f (c10) (c7) (c5))))))))))))))))))))))))))))) NIL)
:: (31 (instantiate 3 ((v0 . v100) (v1 . v100))) (or (not (= v100 v100)) (f v100 v2 v100)) NIL)
:: (32 (instantiate 1 ((v0 . v100))) (= v100 v100) NIL)
:: (33 (resolve 31 (1) 32 ()) (f v100 v2 v100) NIL)
:: (34 (instantiate 33 ((v100 . v0) (v2 . v1))) (f v0 v1 v0) NIL)
:: (35 (instantiate 4 ((v0 . v100) (v1 . v100))) (or (not (= v100 v100)) (f v2 v100 v100)) NIL)
:: (36 (instantiate 1 ((v0 . v100))) (= v100 v100) NIL)
:: (37 (resolve 35 (1) 36 ()) (f v2 v100 v100) NIL)
:: (38 (instantiate 37 ((v2 . v0) (v100 . v1))) (f v0 v1 v1) NIL)
:: (39 (instantiate 8 ((v0 . (c7)) (v1 . (c1)) (v2 . (c4)))) (or (not (f (c7) (c1) (c4))) (f (c1) (c4) (c7))) NIL)
:: (40 (resolve 39 (2) 19 ()) (not (f (c7) (c1) (c4))) NIL)
:: (41 (instantiate 6 ((v0 . (c4)) (v1 . (c1)) (v2 . (c7)))) (or (not (f (c4) (c1) (c7))) (f (c1) (c4) (c7))) NIL)
:: (42 (resolve 41 (2) 19 ()) (not (f (c4) (c1) (c7))) NIL)
:: (43 (instantiate 4 ((v0 . (c7)) (v1 . (c4)) (v2 . (c1)))) (or (not (= (c7) (c4))) (f (c1) (c4) (c7))) NIL)
:: (44 (resolve 43 (2) 19 ()) (not (= (c7) (c4))) NIL)
:: (45 (instantiate 3 ((v0 . (c7)) (v1 . (c1)) (v2 . (c4)))) (or (not (= (c7) (c1))) (f (c1) (c4) (c7))) NIL)
:: (46 (resolve 45 (2) 19 ()) (not (= (c7) (c1))) NIL)
:: (47 (instantiate 2 ((v0 . (c4)) (v1 . (c1)) (v2 . (c7)))) (or (not (= (c4) (c1))) (f (c1) (c4) (c7))) NIL)
:: (48 (resolve 47 (2) 19 ()) (not (= (c4) (c1))) NIL)
:: (49 (instantiate 8 ((v0 . (c1)) (v1 . (c4)) (v2 . (c2)))) (or (not (f (c1) (c4) (c2))) (f (c4) (c2) (c1))) NIL)
:: (50 (resolve 20 () 49 (1)) (f (c4) (c2) (c1)) NIL)
:: (51 (instantiate 7 ((v0 . (c1)) (v1 . (c4)) (v2 . (c2)))) (or (not (f (c1) (c4) (c2))) (f (c1) (c2) (c4))) NIL)
:: (52 (resolve 20 () 51 (1)) (f (c1) (c2) (c4)) NIL)
:: (53 (instantiate 5 ((v0 . (c4)) (v1 . (c1)) (v2 . v102) (v3 . v103) (v4 . (c2)))) (or (= (c4) (c1)) (or (not (f (c1) (c4) v102)) (or (not (f (c1) (c4) v103)) (or (not (f (c1) (c4) (c2))) (f v102 v103 (c2)))))) NIL)
:: (54 (resolve 20 () 53 (2 2 2 1)) (or (= (c4) (c1)) (or (not (f (c1) (c4) v102)) (or (not (f (c1) (c4) v103)) (f v102 v103 (c2))))) NIL)
:: (55 (instantiate 54 ((v102 . v0) (v103 . v1))) (or (= (c4) (c1)) (or (not (f (c1) (c4) v0)) (or (not (f (c1) (c4) v1)) (f v0 v1 (c2))))) NIL)
:: (56 (instantiate 55 ((v0 . v100) (v1 . v101))) (or (= (c4) (c1)) (or (not (f (c1) (c4) v100)) (or (not (f (c1) (c4) v101)) (f v100 v101 (c2))))) NIL)
:: (57 (resolve 48 () 56 (1)) (or (not (f (c1) (c4) v100)) (or (not (f (c1) (c4) v101)) (f v100 v101 (c2)))) NIL)
:: (58 (instantiate 57 ((v100 . v0) (v101 . v1))) (or (not (f (c1) (c4) v0)) (or (not (f (c1) (c4) v1)) (f v0 v1 (c2)))) NIL)
:: (59 (instantiate 8 ((v0 . (c1)) (v1 . (c4)) (v2 . (c3)))) (or (not (f (c1) (c4) (c3))) (f (c4) (c3) (c1))) NIL)
:: (60 (resolve 21 () 59 (1)) (f (c4) (c3) (c1)) NIL)
:: (61 (instantiate 7 ((v0 . (c1)) (v1 . (c4)) (v2 . (c3)))) (or (not (f (c1) (c4) (c3))) (f (c1) (c3) (c4))) NIL)
:: (62 (resolve 21 () 61 (1)) (f (c1) (c3) (c4)) NIL)
:: (63 (instantiate 8 ((v0 . (c1)) (v1 . (c7)) (v2 . (c5)))) (or (not (f (c1) (c7) (c5))) (f (c7) (c5) (c1))) NIL)
:: (64 (resolve 22 () 63 (1)) (f (c7) (c5) (c1)) NIL)
:: (65 (instantiate 7 ((v0 . (c1)) (v1 . (c7)) (v2 . (c5)))) (or (not (f (c1) (c7) (c5))) (f (c1) (c5) (c7))) NIL)
:: (66 (resolve 22 () 65 (1)) (f (c1) (c5) (c7)) NIL)
:: (67 (instantiate 5 ((v0 . (c7)) (v1 . (c1)) (v2 . v102) (v3 . v103) (v4 . (c5)))) (or (= (c7) (c1)) (or (not (f (c1) (c7) v102)) (or (not (f (c1) (c7) v103)) (or (not (f (c1) (c7) (c5))) (f v102 v103 (c5)))))) NIL)
:: (68 (resolve 22 () 67 (2 2 2 1)) (or (= (c7) (c1)) (or (not (f (c1) (c7) v102)) (or (not (f (c1) (c7) v103)) (f v102 v103 (c5))))) NIL)
:: (69 (instantiate 68 ((v102 . v0) (v103 . v1))) (or (= (c7) (c1)) (or (not (f (c1) (c7) v0)) (or (not (f (c1) (c7) v1)) (f v0 v1 (c5))))) NIL)
:: (70 (instantiate 69 ((v0 . v100) (v1 . v101))) (or (= (c7) (c1)) (or (not (f (c1) (c7) v100)) (or (not (f (c1) (c7) v101)) (f v100 v101 (c5))))) NIL)
:: (71 (resolve 46 () 70 (1)) (or (not (f (c1) (c7) v100)) (or (not (f (c1) (c7) v101)) (f v100 v101 (c5)))) NIL)
:: (72 (instantiate 71 ((v100 . v0) (v101 . v1))) (or (not (f (c1) (c7) v0)) (or (not (f (c1) (c7) v1)) (f v0 v1 (c5)))) NIL)
:: (73 (instantiate 8 ((v0 . (c1)) (v1 . (c7)) (v2 . (c6)))) (or (not (f (c1) (c7) (c6))) (f (c7) (c6) (c1))) NIL)
:: (74 (resolve 23 () 73 (1)) (f (c7) (c6) (c1)) NIL)
:: (75 (instantiate 7 ((v0 . (c1)) (v1 . (c7)) (v2 . (c6)))) (or (not (f (c1) (c7) (c6))) (f (c1) (c6) (c7))) NIL)
:: (76 (resolve 23 () 75 (1)) (f (c1) (c6) (c7)) NIL)
:: (77 (instantiate 8 ((v0 . (c4)) (v1 . (c5)) (v2 . (c8)))) (or (not (f (c4) (c5) (c8))) (f (c5) (c8) (c4))) NIL)
:: (78 (resolve 24 () 77 (1)) (f (c5) (c8) (c4)) NIL)
:: (79 (instantiate 8 ((v0 . (c7)) (v1 . (c2)) (v2 . (c8)))) (or (not (f (c7) (c2) (c8))) (f (c2) (c8) (c7))) NIL)
:: (80 (resolve 25 () 79 (1)) (f (c2) (c8) (c7)) NIL)
:: (81 (instantiate 8 ((v0 . (c4)) (v1 . (c6)) (v2 . (c9)))) (or (not (f (c4) (c6) (c9))) (f (c6) (c9) (c4))) NIL)
:: (82 (resolve 26 () 81 (1)) (f (c6) (c9) (c4)) NIL)
:: (83 (instantiate 8 ((v0 . (c3)) (v1 . (c7)) (v2 . (c9)))) (or (not (f (c3) (c7) (c9))) (f (c7) (c9) (c3))) NIL)
:: (84 (resolve 27 () 83 (1)) (f (c7) (c9) (c3)) NIL)
:: (85 (instantiate 8 ((v0 . (c2)) (v1 . (c6)) (v2 . (c10)))) (or (not (f (c2) (c6) (c10))) (f (c6) (c10) (c2))) NIL)
:: (86 (resolve 28 () 85 (1)) (f (c6) (c10) (c2)) NIL)
:: (87 (instantiate 8 ((v0 . (c3)) (v1 . (c5)) (v2 . (c10)))) (or (not (f (c3) (c5) (c10))) (f (c5) (c10) (c3))) NIL)
:: (88 (resolve 29 () 87 (1)) (f (c5) (c10) (c3)) NIL)
:: (89 (instantiate 8 ((v0 . (c10)) (v1 . (c7)) (v2 . (c6)))) (or (not (f (c10) (c7) (c6))) (f (c7) (c6) (c10))) NIL)
:: (90 (resolve 30 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 89 (1)) (or (f (c4) (c7) (c2)) (or (f (c4) (c10) (c3)) (or (f (c4) (c7) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c5)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c7) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c4) (c6)) (or (f (c7) (c10) (c9)) (or (f (c7) (c4) (c3)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c10) (c7) (c5)) (f (c7) (c6) (c10))))))))))))))))))))))))))))) NIL)
:: (91 (instantiate 8 ((v0 . (c4)) (v1 . (c7)) (v2 . (c1)))) (or (not (f (c4) (c7) (c1))) (f (c7) (c1) (c4))) NIL)
:: (92 (resolve 91 (2) 40 ()) (not (f (c4) (c7) (c1))) NIL)
:: (93 (instantiate 7 ((v0 . (c7)) (v1 . (c4)) (v2 . (c1)))) (or (not (f (c7) (c4) (c1))) (f (c7) (c1) (c4))) NIL)
:: (94 (resolve 93 (2) 40 ()) (not (f (c7) (c4) (c1))) NIL)
:: (95 (instantiate 34 ((v0 . v104) (v1 . v100))) (f v104 v100 v104) NIL)
:: (96 (instantiate 5 ((v0 . v100) (v1 . v104) (v2 . v102) (v3 . v103) (v4 . v104))) (or (= v100 v104) (or (not (f v104 v100 v102)) (or (not (f v104 v100 v103)) (or (not (f v104 v100 v104)) (f v102 v103 v104))))) NIL)
:: (97 (resolve 95 () 96 (2 2 2 1)) (or (= v100 v104) (or (not (f v104 v100 v102)) (or (not (f v104 v100 v103)) (f v102 v103 v104)))) NIL)
:: (98 (instantiate 97 ((v100 . v0) (v104 . v1) (v102 . v2) (v103 . v3))) (or (= v0 v1) (or (not (f v1 v0 v2)) (or (not (f v1 v0 v3)) (f v2 v3 v1)))) NIL)
:: (99 (instantiate 34 ((v0 . v103) (v1 . v100))) (f v103 v100 v103) NIL)
:: (100 (instantiate 5 ((v0 . v100) (v1 . v103) (v2 . v102) (v3 . v103) (v4 . v104))) (or (= v100 v103) (or (not (f v103 v100 v102)) (or (not (f v103 v100 v103)) (or (not (f v103 v100 v104)) (f v102 v103 v104))))) NIL)
:: (101 (resolve 99 () 100 (2 2 1)) (or (= v100 v103) (or (not (f v103 v100 v102)) (or (not (f v103 v100 v104)) (f v102 v103 v104)))) NIL)
:: (102 (instantiate 101 ((v100 . v0) (v103 . v1) (v102 . v2) (v104 . v3))) (or (= v0 v1) (or (not (f v1 v0 v2)) (or (not (f v1 v0 v3)) (f v2 v1 v3)))) NIL)
:: (103 (instantiate 38 ((v0 . v101) (v1 . v104))) (f v101 v104 v104) NIL)
:: (104 (instantiate 5 ((v0 . v104) (v1 . v101) (v2 . v102) (v3 . v103) (v4 . v104))) (or (= v104 v101) (or (not (f v101 v104 v102)) (or (not (f v101 v104 v103)) (or (not (f v101 v104 v104)) (f v102 v103 v104))))) NIL)
:: (105 (resolve 103 () 104 (2 2 2 1)) (or (= v104 v101) (or (not (f v101 v104 v102)) (or (not (f v101 v104 v103)) (f v102 v103 v104)))) NIL)
:: (106 (instantiate 105 ((v104 . v0) (v101 . v1) (v102 . v2) (v103 . v3))) (or (= v0 v1) (or (not (f v1 v0 v2)) (or (not (f v1 v0 v3)) (f v2 v3 v0)))) NIL)
:: (107 (instantiate 38 ((v0 . v101) (v1 . v103))) (f v101 v103 v103) NIL)
:: (108 (instantiate 5 ((v0 . v103) (v1 . v101) (v2 . v102) (v3 . v103) (v4 . v104))) (or (= v103 v101) (or (not (f v101 v103 v102)) (or (not (f v101 v103 v103)) (or (not (f v101 v103 v104)) (f v102 v103 v104))))) NIL)
:: (109 (resolve 107 () 108 (2 2 1)) (or (= v103 v101) (or (not (f v101 v103 v102)) (or (not (f v101 v103 v104)) (f v102 v103 v104)))) NIL)
:: (110 (instantiate 109 ((v103 . v0) (v101 . v1) (v102 . v2) (v104 . v3))) (or (= v0 v1) (or (not (f v1 v0 v2)) (or (not (f v1 v0 v3)) (f v2 v0 v3)))) NIL)
:: (111 (instantiate 38 ((v0 . v101) (v1 . v102))) (f v101 v102 v102) NIL)
:: (112 (instantiate 5 ((v0 . v102) (v1 . v101) (v2 . v102) (v3 . v103) (v4 . v104))) (or (= v102 v101) (or (not (f v101 v102 v102)) (or (not (f v101 v102 v103)) (or (not (f v101 v102 v104)) (f v102 v103 v104))))) NIL)
:: (113 (resolve 111 () 112 (2 1)) (or (= v102 v101) (or (not (f v101 v102 v103)) (or (not (f v101 v102 v104)) (f v102 v103 v104)))) NIL)
:: (114 (instantiate 113 ((v102 . v0) (v101 . v1) (v103 . v2) (v104 . v3))) (or (= v0 v1) (or (not (f v1 v0 v2)) (or (not (f v1 v0 v3)) (f v0 v2 v3)))) NIL)
:: (115 (instantiate 6 ((v0 . (c4)) (v1 . (c2)) (v2 . (c1)))) (or (not (f (c4) (c2) (c1))) (f (c2) (c4) (c1))) NIL)
:: (116 (resolve 50 () 115 (1)) (f (c2) (c4) (c1)) NIL)
:: (117 (instantiate 5 ((v0 . (c2)) (v1 . (c4)))) (or (= (c2) (c4)) (or (not (f (c4) (c2) v2)) (or (not (f (c4) (c2) v3)) (or (not (f (c4) (c2) v4)) (f v2 v3 v4))))) NIL)
:: (118 (flip 12 ()) (not (= (c2) (c4))) NIL)
:: (119 (resolve 117 (1) 118 ()) (or (not (f (c4) (c2) v2)) (or (not (f (c4) (c2) v3)) (or (not (f (c4) (c2) v4)) (f v2 v3 v4)))) NIL)
:: (120 (instantiate 119 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c4) (c2) v0)) (or (not (f (c4) (c2) v1)) (or (not (f (c4) (c2) v2)) (f v0 v1 v2)))) NIL)
:: (121 (instantiate 120 ((v1 . (c1)))) (or (not (f (c4) (c2) v0)) (or (not (f (c4) (c2) (c1))) (or (not (f (c4) (c2) v2)) (f v0 (c1) v2)))) NIL)
:: (122 (resolve 121 (2 1) 50 ()) (or (not (f (c4) (c2) v0)) (or (not (f (c4) (c2) v2)) (f v0 (c1) v2))) NIL)
:: (123 (instantiate 122 ((v2 . v1))) (or (not (f (c4) (c2) v0)) (or (not (f (c4) (c2) v1)) (f v0 (c1) v1))) NIL)
:: (124 (instantiate 123 ((v1 . (c4)))) (or (not (f (c4) (c2) v0)) (or (not (f (c4) (c2) (c4))) (f v0 (c1) (c4)))) NIL)
:: (125 (instantiate 34 ((v0 . (c4)) (v1 . (c2)))) (f (c4) (c2) (c4)) NIL)
:: (126 (resolve 124 (2 1) 125 ()) (or (not (f (c4) (c2) v0)) (f v0 (c1) (c4))) NIL)
:: (127 (instantiate 126 ((v0 . (c7)))) (or (not (f (c4) (c2) (c7))) (f (c7) (c1) (c4))) NIL)
:: (128 (resolve 127 (2) 40 ()) (not (f (c4) (c2) (c7))) NIL)
:: (129 (instantiate 5 ((v0 . (c2)) (v1 . (c1)))) (or (= (c2) (c1)) (or (not (f (c1) (c2) v2)) (or (not (f (c1) (c2) v3)) (or (not (f (c1) (c2) v4)) (f v2 v3 v4))))) NIL)
:: (130 (resolve 129 (1) 9 ()) (or (not (f (c1) (c2) v2)) (or (not (f (c1) (c2) v3)) (or (not (f (c1) (c2) v4)) (f v2 v3 v4)))) NIL)
:: (131 (instantiate 130 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c1) (c2) v0)) (or (not (f (c1) (c2) v1)) (or (not (f (c1) (c2) v2)) (f v0 v1 v2)))) NIL)
:: (132 (instantiate 131 ((v1 . (c1)))) (or (not (f (c1) (c2) v0)) (or (not (f (c1) (c2) (c1))) (or (not (f (c1) (c2) v2)) (f v0 (c1) v2)))) NIL)
:: (133 (instantiate 34 ((v0 . (c1)) (v1 . (c2)))) (f (c1) (c2) (c1)) NIL)
:: (134 (resolve 132 (2 1) 133 ()) (or (not (f (c1) (c2) v0)) (or (not (f (c1) (c2) v2)) (f v0 (c1) v2))) NIL)
:: (135 (instantiate 134 ((v2 . v1))) (or (not (f (c1) (c2) v0)) (or (not (f (c1) (c2) v1)) (f v0 (c1) v1))) NIL)
:: (136 (instantiate 135 ((v1 . (c4)))) (or (not (f (c1) (c2) v0)) (or (not (f (c1) (c2) (c4))) (f v0 (c1) (c4)))) NIL)
:: (137 (resolve 136 (2 1) 52 ()) (or (not (f (c1) (c2) v0)) (f v0 (c1) (c4))) NIL)
:: (138 (instantiate 137 ((v0 . (c7)))) (or (not (f (c1) (c2) (c7))) (f (c7) (c1) (c4))) NIL)
:: (139 (resolve 138 (2) 40 ()) (not (f (c1) (c2) (c7))) NIL)
:: (140 (instantiate 7 ((v0 . (c4)) (v1 . (c7)) (v2 . (c2)))) (or (not (f (c4) (c7) (c2))) (f (c4) (c2) (c7))) NIL)
:: (141 (resolve 140 (2) 128 ()) (not (f (c4) (c7) (c2))) NIL)
:: (142 (resolve 141 () 90 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c7) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c5)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c7) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c4) (c6)) (or (f (c7) (c10) (c9)) (or (f (c7) (c4) (c3)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c10) (c7) (c5)) (f (c7) (c6) (c10)))))))))))))))))))))))))))) NIL)
:: (143 (instantiate 6 ((v0 . (c4)) (v1 . (c3)) (v2 . (c1)))) (or (not (f (c4) (c3) (c1))) (f (c3) (c4) (c1))) NIL)
:: (144 (resolve 60 () 143 (1)) (f (c3) (c4) (c1)) NIL)
:: (145 (instantiate 5 ((v0 . (c3)) (v1 . (c4)))) (or (= (c3) (c4)) (or (not (f (c4) (c3) v2)) (or (not (f (c4) (c3) v3)) (or (not (f (c4) (c3) v4)) (f v2 v3 v4))))) NIL)
:: (146 (flip 13 ()) (not (= (c3) (c4))) NIL)
:: (147 (resolve 145 (1) 146 ()) (or (not (f (c4) (c3) v2)) (or (not (f (c4) (c3) v3)) (or (not (f (c4) (c3) v4)) (f v2 v3 v4)))) NIL)
:: (148 (instantiate 147 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) v1)) (or (not (f (c4) (c3) v2)) (f v0 v1 v2)))) NIL)
:: (149 (instantiate 148 ((v1 . (c4)))) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) (c4))) (or (not (f (c4) (c3) v2)) (f v0 (c4) v2)))) NIL)
:: (150 (instantiate 34 ((v0 . (c4)) (v1 . (c3)))) (f (c4) (c3) (c4)) NIL)
:: (151 (resolve 149 (2 1) 150 ()) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) v2)) (f v0 (c4) v2))) NIL)
:: (152 (instantiate 151 ((v2 . v1))) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) v1)) (f v0 (c4) v1))) NIL)
:: (153 (instantiate 152 ((v1 . (c1)))) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) (c1))) (f v0 (c4) (c1)))) NIL)
:: (154 (resolve 153 (2 1) 60 ()) (or (not (f (c4) (c3) v0)) (f v0 (c4) (c1))) NIL)
:: (155 (instantiate 154 ((v0 . (c7)))) (or (not (f (c4) (c3) (c7))) (f (c7) (c4) (c1))) NIL)
:: (156 (resolve 155 (2) 94 ()) (not (f (c4) (c3) (c7))) NIL)
:: (157 (instantiate 5 ((v0 . (c3)) (v1 . (c1)))) (or (= (c3) (c1)) (or (not (f (c1) (c3) v2)) (or (not (f (c1) (c3) v3)) (or (not (f (c1) (c3) v4)) (f v2 v3 v4))))) NIL)
:: (158 (resolve 157 (1) 10 ()) (or (not (f (c1) (c3) v2)) (or (not (f (c1) (c3) v3)) (or (not (f (c1) (c3) v4)) (f v2 v3 v4)))) NIL)
:: (159 (instantiate 158 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c1) (c3) v0)) (or (not (f (c1) (c3) v1)) (or (not (f (c1) (c3) v2)) (f v0 v1 v2)))) NIL)
:: (160 (instantiate 159 ((v1 . (c1)))) (or (not (f (c1) (c3) v0)) (or (not (f (c1) (c3) (c1))) (or (not (f (c1) (c3) v2)) (f v0 (c1) v2)))) NIL)
:: (161 (instantiate 34 ((v0 . (c1)) (v1 . (c3)))) (f (c1) (c3) (c1)) NIL)
:: (162 (resolve 160 (2 1) 161 ()) (or (not (f (c1) (c3) v0)) (or (not (f (c1) (c3) v2)) (f v0 (c1) v2))) NIL)
:: (163 (instantiate 162 ((v2 . v1))) (or (not (f (c1) (c3) v0)) (or (not (f (c1) (c3) v1)) (f v0 (c1) v1))) NIL)
:: (164 (instantiate 163 ((v1 . (c4)))) (or (not (f (c1) (c3) v0)) (or (not (f (c1) (c3) (c4))) (f v0 (c1) (c4)))) NIL)
:: (165 (resolve 164 (2 1) 62 ()) (or (not (f (c1) (c3) v0)) (f v0 (c1) (c4))) NIL)
:: (166 (instantiate 165 ((v0 . (c7)))) (or (not (f (c1) (c3) (c7))) (f (c7) (c1) (c4))) NIL)
:: (167 (resolve 166 (2) 40 ()) (not (f (c1) (c3) (c7))) NIL)
:: (168 (instantiate 58 ((v0 . (c1)))) (or (not (f (c1) (c4) (c1))) (or (not (f (c1) (c4) v1)) (f (c1) v1 (c2)))) NIL)
:: (169 (instantiate 34 ((v0 . (c1)) (v1 . (c4)))) (f (c1) (c4) (c1)) NIL)
:: (170 (resolve 168 (1) 169 ()) (or (not (f (c1) (c4) v1)) (f (c1) v1 (c2))) NIL)
:: (171 (instantiate 170 ((v1 . v0))) (or (not (f (c1) (c4) v0)) (f (c1) v0 (c2))) NIL)
:: (172 (instantiate 8 ((v0 . (c7)) (v1 . (c5)) (v2 . (c1)))) (or (not (f (c7) (c5) (c1))) (f (c5) (c1) (c7))) NIL)
:: (173 (resolve 64 () 172 (1)) (f (c5) (c1) (c7)) NIL)
:: (174 (instantiate 6 ((v0 . (c7)) (v1 . (c5)) (v2 . (c1)))) (or (not (f (c7) (c5) (c1))) (f (c5) (c7) (c1))) NIL)
:: (175 (resolve 64 () 174 (1)) (f (c5) (c7) (c1)) NIL)
:: (176 (instantiate 5 ((v0 . (c5)) (v1 . (c7)))) (or (= (c5) (c7)) (or (not (f (c7) (c5) v2)) (or (not (f (c7) (c5) v3)) (or (not (f (c7) (c5) v4)) (f v2 v3 v4))))) NIL)
:: (177 (flip 17 ()) (not (= (c5) (c7))) NIL)
:: (178 (resolve 176 (1) 177 ()) (or (not (f (c7) (c5) v2)) (or (not (f (c7) (c5) v3)) (or (not (f (c7) (c5) v4)) (f v2 v3 v4)))) NIL)
:: (179 (instantiate 178 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) v1)) (or (not (f (c7) (c5) v2)) (f v0 v1 v2)))) NIL)
:: (180 (instantiate 179 ((v1 . (c7)))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) (c7))) (or (not (f (c7) (c5) v2)) (f v0 (c7) v2)))) NIL)
:: (181 (instantiate 34 ((v0 . (c7)) (v1 . (c5)))) (f (c7) (c5) (c7)) NIL)
:: (182 (resolve 180 (2 1) 181 ()) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) v2)) (f v0 (c7) v2))) NIL)
:: (183 (instantiate 182 ((v2 . v1))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) v1)) (f v0 (c7) v1))) NIL)
:: (184 (instantiate 183 ((v1 . (c1)))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) (c1))) (f v0 (c7) (c1)))) NIL)
:: (185 (resolve 184 (2 1) 64 ()) (or (not (f (c7) (c5) v0)) (f v0 (c7) (c1))) NIL)
:: (186 (instantiate 185 ((v0 . (c4)))) (or (not (f (c7) (c5) (c4))) (f (c4) (c7) (c1))) NIL)
:: (187 (resolve 186 (2) 92 ()) (not (f (c7) (c5) (c4))) NIL)
:: (188 (instantiate 5 ((v0 . (c5)) (v1 . (c7)))) (or (= (c5) (c7)) (or (not (f (c7) (c5) v2)) (or (not (f (c7) (c5) v3)) (or (not (f (c7) (c5) v4)) (f v2 v3 v4))))) NIL)
:: (189 (flip 17 ()) (not (= (c5) (c7))) NIL)
:: (190 (resolve 188 (1) 189 ()) (or (not (f (c7) (c5) v2)) (or (not (f (c7) (c5) v3)) (or (not (f (c7) (c5) v4)) (f v2 v3 v4)))) NIL)
:: (191 (instantiate 190 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) v1)) (or (not (f (c7) (c5) v2)) (f v0 v1 v2)))) NIL)
:: (192 (instantiate 191 ((v0 . (c1)))) (or (not (f (c7) (c5) (c1))) (or (not (f (c7) (c5) v1)) (or (not (f (c7) (c5) v2)) (f (c1) v1 v2)))) NIL)
:: (193 (resolve 192 (1) 64 ()) (or (not (f (c7) (c5) v1)) (or (not (f (c7) (c5) v2)) (f (c1) v1 v2))) NIL)
:: (194 (instantiate 193 ((v1 . v0) (v2 . v1))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) v1)) (f (c1) v0 v1))) NIL)
:: (195 (instantiate 194 ((v1 . (c7)))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) (c7))) (f (c1) v0 (c7)))) NIL)
:: (196 (instantiate 34 ((v0 . (c7)) (v1 . (c5)))) (f (c7) (c5) (c7)) NIL)
:: (197 (resolve 195 (2 1) 196 ()) (or (not (f (c7) (c5) v0)) (f (c1) v0 (c7))) NIL)
:: (198 (instantiate 197 ((v0 . (c2)))) (or (not (f (c7) (c5) (c2))) (f (c1) (c2) (c7))) NIL)
:: (199 (resolve 198 (2) 139 ()) (not (f (c7) (c5) (c2))) NIL)
:: (200 (instantiate 5 ((v0 . (c5)) (v1 . (c1)))) (or (= (c5) (c1)) (or (not (f (c1) (c5) v2)) (or (not (f (c1) (c5) v3)) (or (not (f (c1) (c5) v4)) (f v2 v3 v4))))) NIL)
:: (201 (resolve 200 (1) 14 ()) (or (not (f (c1) (c5) v2)) (or (not (f (c1) (c5) v3)) (or (not (f (c1) (c5) v4)) (f v2 v3 v4)))) NIL)
:: (202 (instantiate 201 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) v1)) (or (not (f (c1) (c5) v2)) (f v0 v1 v2)))) NIL)
:: (203 (instantiate 202 ((v1 . (c1)))) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) (c1))) (or (not (f (c1) (c5) v2)) (f v0 (c1) v2)))) NIL)
:: (204 (instantiate 34 ((v0 . (c1)) (v1 . (c5)))) (f (c1) (c5) (c1)) NIL)
:: (205 (resolve 203 (2 1) 204 ()) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) v2)) (f v0 (c1) v2))) NIL)
:: (206 (instantiate 205 ((v2 . v1))) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) v1)) (f v0 (c1) v1))) NIL)
:: (207 (instantiate 206 ((v1 . (c7)))) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) (c7))) (f v0 (c1) (c7)))) NIL)
:: (208 (resolve 207 (2 1) 66 ()) (or (not (f (c1) (c5) v0)) (f v0 (c1) (c7))) NIL)
:: (209 (instantiate 208 ((v0 . (c4)))) (or (not (f (c1) (c5) (c4))) (f (c4) (c1) (c7))) NIL)
:: (210 (resolve 209 (2) 42 ()) (not (f (c1) (c5) (c4))) NIL)
:: (211 (instantiate 5 ((v0 . (c6)) (v1 . (c7)) (v2 . (c1)) (v3 . v103) (v4 . v104))) (or (= (c6) (c7)) (or (not (f (c7) (c6) (c1))) (or (not (f (c7) (c6) v103)) (or (not (f (c7) (c6) v104)) (f (c1) v103 v104))))) NIL)
:: (212 (resolve 74 () 211 (2 1)) (or (= (c6) (c7)) (or (not (f (c7) (c6) v103)) (or (not (f (c7) (c6) v104)) (f (c1) v103 v104)))) NIL)
:: (213 (instantiate 212 ((v103 . v0) (v104 . v1))) (or (= (c6) (c7)) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v1)) (f (c1) v0 v1)))) NIL)
:: (214 (flip 213 (1)) (or (= (c7) (c6)) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v1)) (f (c1) v0 v1)))) NIL)
:: (215 (instantiate 214 ((v0 . v100) (v1 . v101))) (or (= (c7) (c6)) (or (not (f (c7) (c6) v100)) (or (not (f (c7) (c6) v101)) (f (c1) v100 v101)))) NIL)
:: (216 (resolve 18 () 215 (1)) (or (not (f (c7) (c6) v100)) (or (not (f (c7) (c6) v101)) (f (c1) v100 v101))) NIL)
:: (217 (instantiate 216 ((v100 . v0) (v101 . v1))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v1)) (f (c1) v0 v1))) NIL)
:: (218 (instantiate 5 ((v0 . (c6)) (v1 . (c7)))) (or (= (c6) (c7)) (or (not (f (c7) (c6) v2)) (or (not (f (c7) (c6) v3)) (or (not (f (c7) (c6) v4)) (f v2 v3 v4))))) NIL)
:: (219 (flip 18 ()) (not (= (c6) (c7))) NIL)
:: (220 (resolve 218 (1) 219 ()) (or (not (f (c7) (c6) v2)) (or (not (f (c7) (c6) v3)) (or (not (f (c7) (c6) v4)) (f v2 v3 v4)))) NIL)
:: (221 (instantiate 220 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v1)) (or (not (f (c7) (c6) v2)) (f v0 v1 v2)))) NIL)
:: (222 (instantiate 221 ((v1 . (c7)))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) (c7))) (or (not (f (c7) (c6) v2)) (f v0 (c7) v2)))) NIL)
:: (223 (instantiate 34 ((v0 . (c7)) (v1 . (c6)))) (f (c7) (c6) (c7)) NIL)
:: (224 (resolve 222 (2 1) 223 ()) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v2)) (f v0 (c7) v2))) NIL)
:: (225 (instantiate 224 ((v2 . v1))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v1)) (f v0 (c7) v1))) NIL)
:: (226 (instantiate 225 ((v1 . (c1)))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) (c1))) (f v0 (c7) (c1)))) NIL)
:: (227 (resolve 226 (2 1) 74 ()) (or (not (f (c7) (c6) v0)) (f v0 (c7) (c1))) NIL)
:: (228 (instantiate 227 ((v0 . (c4)))) (or (not (f (c7) (c6) (c4))) (f (c4) (c7) (c1))) NIL)
:: (229 (resolve 228 (2) 92 ()) (not (f (c7) (c6) (c4))) NIL)
:: (230 (instantiate 5 ((v0 . (c6)) (v1 . (c7)))) (or (= (c6) (c7)) (or (not (f (c7) (c6) v2)) (or (not (f (c7) (c6) v3)) (or (not (f (c7) (c6) v4)) (f v2 v3 v4))))) NIL)
:: (231 (flip 18 ()) (not (= (c6) (c7))) NIL)
:: (232 (resolve 230 (1) 231 ()) (or (not (f (c7) (c6) v2)) (or (not (f (c7) (c6) v3)) (or (not (f (c7) (c6) v4)) (f v2 v3 v4)))) NIL)
:: (233 (instantiate 232 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v1)) (or (not (f (c7) (c6) v2)) (f v0 v1 v2)))) NIL)
:: (234 (instantiate 233 ((v0 . (c1)))) (or (not (f (c7) (c6) (c1))) (or (not (f (c7) (c6) v1)) (or (not (f (c7) (c6) v2)) (f (c1) v1 v2)))) NIL)
:: (235 (resolve 234 (1) 74 ()) (or (not (f (c7) (c6) v1)) (or (not (f (c7) (c6) v2)) (f (c1) v1 v2))) NIL)
:: (236 (instantiate 235 ((v1 . v0) (v2 . v1))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) v1)) (f (c1) v0 v1))) NIL)
:: (237 (instantiate 236 ((v1 . (c7)))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) (c7))) (f (c1) v0 (c7)))) NIL)
:: (238 (instantiate 34 ((v0 . (c7)) (v1 . (c6)))) (f (c7) (c6) (c7)) NIL)
:: (239 (resolve 237 (2 1) 238 ()) (or (not (f (c7) (c6) v0)) (f (c1) v0 (c7))) NIL)
:: (240 (instantiate 239 ((v0 . (c2)))) (or (not (f (c7) (c6) (c2))) (f (c1) (c2) (c7))) NIL)
:: (241 (resolve 240 (2) 139 ()) (not (f (c7) (c6) (c2))) NIL)
:: (242 (instantiate 8 ((v0 . (c7)) (v1 . (c4)) (v2 . (c3)))) (or (not (f (c7) (c4) (c3))) (f (c4) (c3) (c7))) NIL)
:: (243 (resolve 242 (2) 156 ()) (not (f (c7) (c4) (c3))) NIL)
:: (244 (instantiate 7 ((v0 . (c4)) (v1 . (c7)) (v2 . (c3)))) (or (not (f (c4) (c7) (c3))) (f (c4) (c3) (c7))) NIL)
:: (245 (resolve 244 (2) 156 ()) (not (f (c4) (c7) (c3))) NIL)
:: (246 (instantiate 4 ((v0 . (c7)) (v1 . (c3)) (v2 . (c4)))) (or (not (= (c7) (c3))) (f (c4) (c3) (c7))) NIL)
:: (247 (resolve 246 (2) 156 ()) (not (= (c7) (c3))) NIL)
:: (248 (resolve 245 () 142 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c5)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c7) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c4) (c6)) (or (f (c7) (c10) (c9)) (or (f (c7) (c4) (c3)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c10) (c7) (c5)) (f (c7) (c6) (c10))))))))))))))))))))))))))) NIL)
:: (249 (resolve 243 () 248 (2 2 2 2 2 2 2 2 2 2 2 2 2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c5)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c7) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c4) (c6)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c10) (c7) (c5)) (f (c7) (c6) (c10)))))))))))))))))))))))))) NIL)
:: (250 (instantiate 5 ((v0 . (c7)) (v1 . (c3)))) (or (= (c7) (c3)) (or (not (f (c3) (c7) v2)) (or (not (f (c3) (c7) v3)) (or (not (f (c3) (c7) v4)) (f v2 v3 v4))))) NIL)
:: (251 (resolve 250 (1) 247 ()) (or (not (f (c3) (c7) v2)) (or (not (f (c3) (c7) v3)) (or (not (f (c3) (c7) v4)) (f v2 v3 v4)))) NIL)
:: (252 (instantiate 251 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c3) (c7) v0)) (or (not (f (c3) (c7) v1)) (or (not (f (c3) (c7) v2)) (f v0 v1 v2)))) NIL)
:: (253 (instantiate 252 ((v1 . (c3)))) (or (not (f (c3) (c7) v0)) (or (not (f (c3) (c7) (c3))) (or (not (f (c3) (c7) v2)) (f v0 (c3) v2)))) NIL)
:: (254 (instantiate 34 ((v0 . (c3)) (v1 . (c7)))) (f (c3) (c7) (c3)) NIL)
:: (255 (resolve 253 (2 1) 254 ()) (or (not (f (c3) (c7) v0)) (or (not (f (c3) (c7) v2)) (f v0 (c3) v2))) NIL)
:: (256 (instantiate 255 ((v2 . v1))) (or (not (f (c3) (c7) v0)) (or (not (f (c3) (c7) v1)) (f v0 (c3) v1))) NIL)
:: (257 (instantiate 256 ((v1 . (c7)))) (or (not (f (c3) (c7) v0)) (or (not (f (c3) (c7) (c7))) (f v0 (c3) (c7)))) NIL)
:: (258 (instantiate 38 ((v0 . (c3)) (v1 . (c7)))) (f (c3) (c7) (c7)) NIL)
:: (259 (resolve 257 (2 1) 258 ()) (or (not (f (c3) (c7) v0)) (f v0 (c3) (c7))) NIL)
:: (260 (instantiate 259 ((v0 . (c4)))) (or (not (f (c3) (c7) (c4))) (f (c4) (c3) (c7))) NIL)
:: (261 (resolve 260 (2) 156 ()) (not (f (c3) (c7) (c4))) NIL)
:: (262 (instantiate 8 ((v0 . (c7)) (v1 . (c1)) (v2 . (c3)))) (or (not (f (c7) (c1) (c3))) (f (c1) (c3) (c7))) NIL)
:: (263 (resolve 262 (2) 167 ()) (not (f (c7) (c1) (c3))) NIL)
:: (264 (instantiate 5 ((v0 . (c5)) (v1 . (c1)))) (or (= (c5) (c1)) (or (not (f (c1) (c5) v2)) (or (not (f (c1) (c5) v3)) (or (not (f (c1) (c5) v4)) (f v2 v3 v4))))) NIL)
:: (265 (resolve 264 (1) 14 ()) (or (not (f (c1) (c5) v2)) (or (not (f (c1) (c5) v3)) (or (not (f (c1) (c5) v4)) (f v2 v3 v4)))) NIL)
:: (266 (instantiate 265 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) v1)) (or (not (f (c1) (c5) v2)) (f v0 v1 v2)))) NIL)
:: (267 (instantiate 266 ((v0 . (c1)))) (or (not (f (c1) (c5) (c1))) (or (not (f (c1) (c5) v1)) (or (not (f (c1) (c5) v2)) (f (c1) v1 v2)))) NIL)
:: (268 (instantiate 34 ((v0 . (c1)) (v1 . (c5)))) (f (c1) (c5) (c1)) NIL)
:: (269 (resolve 267 (1) 268 ()) (or (not (f (c1) (c5) v1)) (or (not (f (c1) (c5) v2)) (f (c1) v1 v2))) NIL)
:: (270 (instantiate 269 ((v1 . v0) (v2 . v1))) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) v1)) (f (c1) v0 v1))) NIL)
:: (271 (instantiate 270 ((v1 . (c7)))) (or (not (f (c1) (c5) v0)) (or (not (f (c1) (c5) (c7))) (f (c1) v0 (c7)))) NIL)
:: (272 (resolve 271 (2 1) 66 ()) (or (not (f (c1) (c5) v0)) (f (c1) v0 (c7))) NIL)
:: (273 (instantiate 272 ((v0 . (c3)))) (or (not (f (c1) (c5) (c3))) (f (c1) (c3) (c7))) NIL)
:: (274 (resolve 273 (2) 167 ()) (not (f (c1) (c5) (c3))) NIL)
:: (275 (instantiate 5 ((v0 . (c5)) (v1 . (c7)))) (or (= (c5) (c7)) (or (not (f (c7) (c5) v2)) (or (not (f (c7) (c5) v3)) (or (not (f (c7) (c5) v4)) (f v2 v3 v4))))) NIL)
:: (276 (flip 17 ()) (not (= (c5) (c7))) NIL)
:: (277 (resolve 275 (1) 276 ()) (or (not (f (c7) (c5) v2)) (or (not (f (c7) (c5) v3)) (or (not (f (c7) (c5) v4)) (f v2 v3 v4)))) NIL)
:: (278 (instantiate 277 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) v1)) (or (not (f (c7) (c5) v2)) (f v0 v1 v2)))) NIL)
:: (279 (instantiate 278 ((v0 . (c1)))) (or (not (f (c7) (c5) (c1))) (or (not (f (c7) (c5) v1)) (or (not (f (c7) (c5) v2)) (f (c1) v1 v2)))) NIL)
:: (280 (resolve 279 (1) 64 ()) (or (not (f (c7) (c5) v1)) (or (not (f (c7) (c5) v2)) (f (c1) v1 v2))) NIL)
:: (281 (instantiate 280 ((v1 . v0) (v2 . v1))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) v1)) (f (c1) v0 v1))) NIL)
:: (282 (instantiate 281 ((v1 . (c7)))) (or (not (f (c7) (c5) v0)) (or (not (f (c7) (c5) (c7))) (f (c1) v0 (c7)))) NIL)
:: (283 (instantiate 34 ((v0 . (c7)) (v1 . (c5)))) (f (c7) (c5) (c7)) NIL)
:: (284 (resolve 282 (2 1) 283 ()) (or (not (f (c7) (c5) v0)) (f (c1) v0 (c7))) NIL)
:: (285 (instantiate 284 ((v0 . (c3)))) (or (not (f (c7) (c5) (c3))) (f (c1) (c3) (c7))) NIL)
:: (286 (resolve 285 (2) 167 ()) (not (f (c7) (c5) (c3))) NIL)
:: (287 (instantiate 5 ((v0 . (c6)) (v1 . (c1)))) (or (= (c6) (c1)) (or (not (f (c1) (c6) v2)) (or (not (f (c1) (c6) v3)) (or (not (f (c1) (c6) v4)) (f v2 v3 v4))))) NIL)
:: (288 (resolve 287 (1) 15 ()) (or (not (f (c1) (c6) v2)) (or (not (f (c1) (c6) v3)) (or (not (f (c1) (c6) v4)) (f v2 v3 v4)))) NIL)
:: (289 (instantiate 288 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) v1)) (or (not (f (c1) (c6) v2)) (f v0 v1 v2)))) NIL)
:: (290 (instantiate 289 ((v1 . (c1)))) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) (c1))) (or (not (f (c1) (c6) v2)) (f v0 (c1) v2)))) NIL)
:: (291 (instantiate 34 ((v0 . (c1)) (v1 . (c6)))) (f (c1) (c6) (c1)) NIL)
:: (292 (resolve 290 (2 1) 291 ()) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) v2)) (f v0 (c1) v2))) NIL)
:: (293 (instantiate 292 ((v2 . v1))) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) v1)) (f v0 (c1) v1))) NIL)
:: (294 (instantiate 293 ((v1 . (c7)))) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) (c7))) (f v0 (c1) (c7)))) NIL)
:: (295 (resolve 294 (2 1) 76 ()) (or (not (f (c1) (c6) v0)) (f v0 (c1) (c7))) NIL)
:: (296 (instantiate 295 ((v0 . (c4)))) (or (not (f (c1) (c6) (c4))) (f (c4) (c1) (c7))) NIL)
:: (297 (resolve 296 (2) 42 ()) (not (f (c1) (c6) (c4))) NIL)
:: (298 (instantiate 5 ((v0 . (c6)) (v1 . (c1)))) (or (= (c6) (c1)) (or (not (f (c1) (c6) v2)) (or (not (f (c1) (c6) v3)) (or (not (f (c1) (c6) v4)) (f v2 v3 v4))))) NIL)
:: (299 (resolve 298 (1) 15 ()) (or (not (f (c1) (c6) v2)) (or (not (f (c1) (c6) v3)) (or (not (f (c1) (c6) v4)) (f v2 v3 v4)))) NIL)
:: (300 (instantiate 299 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) v1)) (or (not (f (c1) (c6) v2)) (f v0 v1 v2)))) NIL)
:: (301 (instantiate 300 ((v0 . (c1)))) (or (not (f (c1) (c6) (c1))) (or (not (f (c1) (c6) v1)) (or (not (f (c1) (c6) v2)) (f (c1) v1 v2)))) NIL)
:: (302 (instantiate 34 ((v0 . (c1)) (v1 . (c6)))) (f (c1) (c6) (c1)) NIL)
:: (303 (resolve 301 (1) 302 ()) (or (not (f (c1) (c6) v1)) (or (not (f (c1) (c6) v2)) (f (c1) v1 v2))) NIL)
:: (304 (instantiate 303 ((v1 . v0) (v2 . v1))) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) v1)) (f (c1) v0 v1))) NIL)
:: (305 (instantiate 304 ((v1 . (c7)))) (or (not (f (c1) (c6) v0)) (or (not (f (c1) (c6) (c7))) (f (c1) v0 (c7)))) NIL)
:: (306 (resolve 305 (2 1) 76 ()) (or (not (f (c1) (c6) v0)) (f (c1) v0 (c7))) NIL)
:: (307 (instantiate 306 ((v0 . (c3)))) (or (not (f (c1) (c6) (c3))) (f (c1) (c3) (c7))) NIL)
:: (308 (resolve 307 (2) 167 ()) (not (f (c1) (c6) (c3))) NIL)
:: (309 (instantiate 8 ((v0 . (c5)) (v1 . (c8)) (v2 . (c4)))) (or (not (f (c5) (c8) (c4))) (f (c8) (c4) (c5))) NIL)
:: (310 (resolve 78 () 309 (1)) (f (c8) (c4) (c5)) NIL)
:: (311 (instantiate 6 ((v0 . (c2)) (v1 . (c8)) (v2 . (c7)))) (or (not (f (c2) (c8) (c7))) (f (c8) (c2) (c7))) NIL)
:: (312 (resolve 80 () 311 (1)) (f (c8) (c2) (c7)) NIL)
:: (313 (instantiate 8 ((v0 . (c4)) (v1 . (c7)) (v2 . (c5)))) (or (not (f (c4) (c7) (c5))) (f (c7) (c5) (c4))) NIL)
:: (314 (resolve 313 (2) 187 ()) (not (f (c4) (c7) (c5))) NIL)
:: (315 (instantiate 4 ((v0 . (c4)) (v1 . (c5)) (v2 . (c7)))) (or (not (= (c4) (c5))) (f (c7) (c5) (c4))) NIL)
:: (316 (resolve 315 (2) 187 ()) (not (= (c4) (c5))) NIL)
:: (317 (flip 316 ()) (not (= (c5) (c4))) NIL)
:: (318 (resolve 314 () 249 (2 2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c7) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c4) (c6)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c10) (c7) (c5)) (f (c7) (c6) (c10))))))))))))))))))))))))) NIL)
:: (319 (instantiate 8 ((v0 . (c6)) (v1 . (c9)) (v2 . (c4)))) (or (not (f (c6) (c9) (c4))) (f (c9) (c4) (c6))) NIL)
:: (320 (resolve 82 () 319 (1)) (f (c9) (c4) (c6)) NIL)
:: (321 (instantiate 6 ((v0 . (c7)) (v1 . (c9)) (v2 . (c3)))) (or (not (f (c7) (c9) (c3))) (f (c9) (c7) (c3))) NIL)
:: (322 (resolve 84 () 321 (1)) (f (c9) (c7) (c3)) NIL)
:: (323 (instantiate 4 ((v0 . (c2)) (v1 . (c5)) (v2 . (c7)))) (or (not (= (c2) (c5))) (f (c7) (c5) (c2))) NIL)
:: (324 (resolve 323 (2) 199 ()) (not (= (c2) (c5))) NIL)
:: (325 (flip 324 ()) (not (= (c5) (c2))) NIL)
:: (326 (instantiate 5 ((v0 . (c2)) (v1 . (c5)))) (or (= (c2) (c5)) (or (not (f (c5) (c2) v2)) (or (not (f (c5) (c2) v3)) (or (not (f (c5) (c2) v4)) (f v2 v3 v4))))) NIL)
:: (327 (flip 325 ()) (not (= (c2) (c5))) NIL)
:: (328 (resolve 326 (1) 327 ()) (or (not (f (c5) (c2) v2)) (or (not (f (c5) (c2) v3)) (or (not (f (c5) (c2) v4)) (f v2 v3 v4)))) NIL)
:: (329 (instantiate 328 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c5) (c2) v0)) (or (not (f (c5) (c2) v1)) (or (not (f (c5) (c2) v2)) (f v0 v1 v2)))) NIL)
:: (330 (instantiate 329 ((v1 . (c5)))) (or (not (f (c5) (c2) v0)) (or (not (f (c5) (c2) (c5))) (or (not (f (c5) (c2) v2)) (f v0 (c5) v2)))) NIL)
:: (331 (instantiate 34 ((v0 . (c5)) (v1 . (c2)))) (f (c5) (c2) (c5)) NIL)
:: (332 (resolve 330 (2 1) 331 ()) (or (not (f (c5) (c2) v0)) (or (not (f (c5) (c2) v2)) (f v0 (c5) v2))) NIL)
:: (333 (instantiate 332 ((v2 . v1))) (or (not (f (c5) (c2) v0)) (or (not (f (c5) (c2) v1)) (f v0 (c5) v1))) NIL)
:: (334 (instantiate 333 ((v1 . (c2)))) (or (not (f (c5) (c2) v0)) (or (not (f (c5) (c2) (c2))) (f v0 (c5) (c2)))) NIL)
:: (335 (instantiate 38 ((v0 . (c5)) (v1 . (c2)))) (f (c5) (c2) (c2)) NIL)
:: (336 (resolve 334 (2 1) 335 ()) (or (not (f (c5) (c2) v0)) (f v0 (c5) (c2))) NIL)
:: (337 (instantiate 336 ((v0 . (c7)))) (or (not (f (c5) (c2) (c7))) (f (c7) (c5) (c2))) NIL)
:: (338 (resolve 337 (2) 199 ()) (not (f (c5) (c2) (c7))) NIL)
:: (339 (instantiate 5 ((v0 . (c3)) (v1 . (c4)))) (or (= (c3) (c4)) (or (not (f (c4) (c3) v2)) (or (not (f (c4) (c3) v3)) (or (not (f (c4) (c3) v4)) (f v2 v3 v4))))) NIL)
:: (340 (flip 13 ()) (not (= (c3) (c4))) NIL)
:: (341 (resolve 339 (1) 340 ()) (or (not (f (c4) (c3) v2)) (or (not (f (c4) (c3) v3)) (or (not (f (c4) (c3) v4)) (f v2 v3 v4)))) NIL)
:: (342 (instantiate 341 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) v1)) (or (not (f (c4) (c3) v2)) (f v0 v1 v2)))) NIL)
:: (343 (instantiate 342 ((v0 . (c1)))) (or (not (f (c4) (c3) (c1))) (or (not (f (c4) (c3) v1)) (or (not (f (c4) (c3) v2)) (f (c1) v1 v2)))) NIL)
:: (344 (resolve 343 (1) 60 ()) (or (not (f (c4) (c3) v1)) (or (not (f (c4) (c3) v2)) (f (c1) v1 v2))) NIL)
:: (345 (instantiate 344 ((v1 . v0) (v2 . v1))) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) v1)) (f (c1) v0 v1))) NIL)
:: (346 (instantiate 345 ((v1 . (c4)))) (or (not (f (c4) (c3) v0)) (or (not (f (c4) (c3) (c4))) (f (c1) v0 (c4)))) NIL)
:: (347 (instantiate 34 ((v0 . (c4)) (v1 . (c3)))) (f (c4) (c3) (c4)) NIL)
:: (348 (resolve 346 (2 1) 347 ()) (or (not (f (c4) (c3) v0)) (f (c1) v0 (c4))) NIL)
:: (349 (instantiate 348 ((v0 . (c5)))) (or (not (f (c4) (c3) (c5))) (f (c1) (c5) (c4))) NIL)
:: (350 (resolve 349 (2) 210 ()) (not (f (c4) (c3) (c5))) NIL)
:: (351 (instantiate 8 ((v0 . (c6)) (v1 . (c10)) (v2 . (c2)))) (or (not (f (c6) (c10) (c2))) (f (c10) (c2) (c6))) NIL)
:: (352 (resolve 86 () 351 (1)) (f (c10) (c2) (c6)) NIL)
:: (353 (instantiate 6 ((v0 . (c6)) (v1 . (c10)) (v2 . (c2)))) (or (not (f (c6) (c10) (c2))) (f (c10) (c6) (c2))) NIL)
:: (354 (resolve 86 () 353 (1)) (f (c10) (c6) (c2)) NIL)
:: (355 (instantiate 8 ((v0 . (c4)) (v1 . (c7)) (v2 . (c6)))) (or (not (f (c4) (c7) (c6))) (f (c7) (c6) (c4))) NIL)
:: (356 (resolve 355 (2) 229 ()) (not (f (c4) (c7) (c6))) NIL)
:: (357 (instantiate 7 ((v0 . (c7)) (v1 . (c4)) (v2 . (c6)))) (or (not (f (c7) (c4) (c6))) (f (c7) (c6) (c4))) NIL)
:: (358 (resolve 357 (2) 229 ()) (not (f (c7) (c4) (c6))) NIL)
:: (359 (instantiate 4 ((v0 . (c4)) (v1 . (c6)) (v2 . (c7)))) (or (not (= (c4) (c6))) (f (c7) (c6) (c4))) NIL)
:: (360 (resolve 359 (2) 229 ()) (not (= (c4) (c6))) NIL)
:: (361 (flip 360 ()) (not (= (c6) (c4))) NIL)
:: (362 (resolve 356 () 318 (2 2 2 2 2 2 2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c4) (c6)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c10) (c7) (c5)) (f (c7) (c6) (c10)))))))))))))))))))))))) NIL)
:: (363 (resolve 358 () 362 (2 2 2 2 2 2 2 2 2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c10) (c7) (c5)) (f (c7) (c6) (c10))))))))))))))))))))))) NIL)
:: (364 (instantiate 5 ((v0 . (c6)) (v1 . (c4)))) (or (= (c6) (c4)) (or (not (f (c4) (c6) v2)) (or (not (f (c4) (c6) v3)) (or (not (f (c4) (c6) v4)) (f v2 v3 v4))))) NIL)
:: (365 (resolve 364 (1) 361 ()) (or (not (f (c4) (c6) v2)) (or (not (f (c4) (c6) v3)) (or (not (f (c4) (c6) v4)) (f v2 v3 v4)))) NIL)
:: (366 (instantiate 365 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c4) (c6) v0)) (or (not (f (c4) (c6) v1)) (or (not (f (c4) (c6) v2)) (f v0 v1 v2)))) NIL)
:: (367 (instantiate 366 ((v1 . (c6)))) (or (not (f (c4) (c6) v0)) (or (not (f (c4) (c6) (c6))) (or (not (f (c4) (c6) v2)) (f v0 (c6) v2)))) NIL)
:: (368 (instantiate 38 ((v0 . (c4)) (v1 . (c6)))) (f (c4) (c6) (c6)) NIL)
:: (369 (resolve 367 (2 1) 368 ()) (or (not (f (c4) (c6) v0)) (or (not (f (c4) (c6) v2)) (f v0 (c6) v2))) NIL)
:: (370 (instantiate 369 ((v2 . v1))) (or (not (f (c4) (c6) v0)) (or (not (f (c4) (c6) v1)) (f v0 (c6) v1))) NIL)
:: (371 (instantiate 370 ((v1 . (c4)))) (or (not (f (c4) (c6) v0)) (or (not (f (c4) (c6) (c4))) (f v0 (c6) (c4)))) NIL)
:: (372 (instantiate 34 ((v0 . (c4)) (v1 . (c6)))) (f (c4) (c6) (c4)) NIL)
:: (373 (resolve 371 (2 1) 372 ()) (or (not (f (c4) (c6) v0)) (f v0 (c6) (c4))) NIL)
:: (374 (instantiate 373 ((v0 . (c7)))) (or (not (f (c4) (c6) (c7))) (f (c7) (c6) (c4))) NIL)
:: (375 (resolve 374 (2) 229 ()) (not (f (c4) (c6) (c7))) NIL)
:: (376 (instantiate 8 ((v0 . (c2)) (v1 . (c7)) (v2 . (c6)))) (or (not (f (c2) (c7) (c6))) (f (c7) (c6) (c2))) NIL)
:: (377 (resolve 376 (2) 241 ()) (not (f (c2) (c7) (c6))) NIL)
:: (378 (instantiate 4 ((v0 . (c2)) (v1 . (c6)) (v2 . (c7)))) (or (not (= (c2) (c6))) (f (c7) (c6) (c2))) NIL)
:: (379 (resolve 378 (2) 241 ()) (not (= (c2) (c6))) NIL)
:: (380 (flip 379 ()) (not (= (c6) (c2))) NIL)
:: (381 (instantiate 8 ((v0 . (c5)) (v1 . (c10)) (v2 . (c3)))) (or (not (f (c5) (c10) (c3))) (f (c10) (c3) (c5))) NIL)
:: (382 (resolve 88 () 381 (1)) (f (c10) (c3) (c5)) NIL)
:: (383 (instantiate 6 ((v0 . (c5)) (v1 . (c10)) (v2 . (c3)))) (or (not (f (c5) (c10) (c3))) (f (c10) (c5) (c3))) NIL)
:: (384 (resolve 88 () 383 (1)) (f (c10) (c5) (c3)) NIL)
:: (385 (instantiate 72 ((v0 . (c7)))) (or (not (f (c1) (c7) (c7))) (or (not (f (c1) (c7) v1)) (f (c7) v1 (c5)))) NIL)
:: (386 (instantiate 38 ((v0 . (c1)) (v1 . (c7)))) (f (c1) (c7) (c7)) NIL)
:: (387 (resolve 385 (1) 386 ()) (or (not (f (c1) (c7) v1)) (f (c7) v1 (c5))) NIL)
:: (388 (instantiate 387 ((v1 . v0))) (or (not (f (c1) (c7) v0)) (f (c7) v0 (c5))) NIL)
:: (389 (instantiate 5 ((v0 . (c4)) (v1 . (c3)))) (or (= (c4) (c3)) (or (not (f (c3) (c4) v2)) (or (not (f (c3) (c4) v3)) (or (not (f (c3) (c4) v4)) (f v2 v3 v4))))) NIL)
:: (390 (resolve 389 (1) 13 ()) (or (not (f (c3) (c4) v2)) (or (not (f (c3) (c4) v3)) (or (not (f (c3) (c4) v4)) (f v2 v3 v4)))) NIL)
:: (391 (instantiate 390 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c3) (c4) v0)) (or (not (f (c3) (c4) v1)) (or (not (f (c3) (c4) v2)) (f v0 v1 v2)))) NIL)
:: (392 (instantiate 391 ((v0 . (c1)))) (or (not (f (c3) (c4) (c1))) (or (not (f (c3) (c4) v1)) (or (not (f (c3) (c4) v2)) (f (c1) v1 v2)))) NIL)
:: (393 (resolve 392 (1) 144 ()) (or (not (f (c3) (c4) v1)) (or (not (f (c3) (c4) v2)) (f (c1) v1 v2))) NIL)
:: (394 (instantiate 393 ((v1 . v0) (v2 . v1))) (or (not (f (c3) (c4) v0)) (or (not (f (c3) (c4) v1)) (f (c1) v0 v1))) NIL)
:: (395 (instantiate 394 ((v1 . (c4)))) (or (not (f (c3) (c4) v0)) (or (not (f (c3) (c4) (c4))) (f (c1) v0 (c4)))) NIL)
:: (396 (instantiate 38 ((v0 . (c3)) (v1 . (c4)))) (f (c3) (c4) (c4)) NIL)
:: (397 (resolve 395 (2 1) 396 ()) (or (not (f (c3) (c4) v0)) (f (c1) v0 (c4))) NIL)
:: (398 (instantiate 397 ((v0 . (c5)))) (or (not (f (c3) (c4) (c5))) (f (c1) (c5) (c4))) NIL)
:: (399 (resolve 398 (2) 210 ()) (not (f (c3) (c4) (c5))) NIL)
:: (400 (instantiate 5 ((v0 . (c1)) (v1 . (c5)))) (or (= (c1) (c5)) (or (not (f (c5) (c1) v2)) (or (not (f (c5) (c1) v3)) (or (not (f (c5) (c1) v4)) (f v2 v3 v4))))) NIL)
:: (401 (flip 14 ()) (not (= (c1) (c5))) NIL)
:: (402 (resolve 400 (1) 401 ()) (or (not (f (c5) (c1) v2)) (or (not (f (c5) (c1) v3)) (or (not (f (c5) (c1) v4)) (f v2 v3 v4)))) NIL)
:: (403 (instantiate 402 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c5) (c1) v0)) (or (not (f (c5) (c1) v1)) (or (not (f (c5) (c1) v2)) (f v0 v1 v2)))) NIL)
:: (404 (instantiate 403 ((v0 . (c1)))) (or (not (f (c5) (c1) (c1))) (or (not (f (c5) (c1) v1)) (or (not (f (c5) (c1) v2)) (f (c1) v1 v2)))) NIL)
:: (405 (instantiate 38 ((v0 . (c5)) (v1 . (c1)))) (f (c5) (c1) (c1)) NIL)
:: (406 (resolve 404 (1) 405 ()) (or (not (f (c5) (c1) v1)) (or (not (f (c5) (c1) v2)) (f (c1) v1 v2))) NIL)
:: (407 (instantiate 406 ((v1 . v0) (v2 . v1))) (or (not (f (c5) (c1) v0)) (or (not (f (c5) (c1) v1)) (f (c1) v0 v1))) NIL)
:: (408 (instantiate 407 ((v1 . (c7)))) (or (not (f (c5) (c1) v0)) (or (not (f (c5) (c1) (c7))) (f (c1) v0 (c7)))) NIL)
:: (409 (resolve 408 (2 1) 173 ()) (or (not (f (c5) (c1) v0)) (f (c1) v0 (c7))) NIL)
:: (410 (instantiate 409 ((v0 . (c3)))) (or (not (f (c5) (c1) (c3))) (f (c1) (c3) (c7))) NIL)
:: (411 (resolve 410 (2) 167 ()) (not (f (c5) (c1) (c3))) NIL)
:: (412 (instantiate 5 ((v0 . (c7)) (v1 . (c5)))) (or (= (c7) (c5)) (or (not (f (c5) (c7) v2)) (or (not (f (c5) (c7) v3)) (or (not (f (c5) (c7) v4)) (f v2 v3 v4))))) NIL)
:: (413 (resolve 412 (1) 17 ()) (or (not (f (c5) (c7) v2)) (or (not (f (c5) (c7) v3)) (or (not (f (c5) (c7) v4)) (f v2 v3 v4)))) NIL)
:: (414 (instantiate 413 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c5) (c7) v0)) (or (not (f (c5) (c7) v1)) (or (not (f (c5) (c7) v2)) (f v0 v1 v2)))) NIL)
:: (415 (instantiate 414 ((v0 . (c7)))) (or (not (f (c5) (c7) (c7))) (or (not (f (c5) (c7) v1)) (or (not (f (c5) (c7) v2)) (f (c7) v1 v2)))) NIL)
:: (416 (instantiate 38 ((v0 . (c5)) (v1 . (c7)))) (f (c5) (c7) (c7)) NIL)
:: (417 (resolve 415 (1) 416 ()) (or (not (f (c5) (c7) v1)) (or (not (f (c5) (c7) v2)) (f (c7) v1 v2))) NIL)
:: (418 (instantiate 417 ((v1 . v0) (v2 . v1))) (or (not (f (c5) (c7) v0)) (or (not (f (c5) (c7) v1)) (f (c7) v0 v1))) NIL)
:: (419 (instantiate 418 ((v0 . (c1)))) (or (not (f (c5) (c7) (c1))) (or (not (f (c5) (c7) v1)) (f (c7) (c1) v1))) NIL)
:: (420 (resolve 419 (1) 175 ()) (or (not (f (c5) (c7) v1)) (f (c7) (c1) v1)) NIL)
:: (421 (instantiate 420 ((v1 . v0))) (or (not (f (c5) (c7) v0)) (f (c7) (c1) v0)) NIL)
:: (422 (instantiate 421 ((v0 . (c3)))) (or (not (f (c5) (c7) (c3))) (f (c7) (c1) (c3))) NIL)
:: (423 (resolve 422 (2) 263 ()) (not (f (c5) (c7) (c3))) NIL)
:: (424 (instantiate 4 ((v0 . (c3)) (v1 . (c5)) (v2 . (c1)))) (or (not (= (c3) (c5))) (f (c1) (c5) (c3))) NIL)
:: (425 (resolve 424 (2) 274 ()) (not (= (c3) (c5))) NIL)
:: (426 (flip 425 ()) (not (= (c5) (c3))) NIL)
:: (427 (instantiate 8 ((v0 . (c3)) (v1 . (c7)) (v2 . (c5)))) (or (not (f (c3) (c7) (c5))) (f (c7) (c5) (c3))) NIL)
:: (428 (resolve 427 (2) 286 ()) (not (f (c3) (c7) (c5))) NIL)
:: (429 (instantiate 5 ((v0 . (c4)) (v1 . (c2)))) (or (= (c4) (c2)) (or (not (f (c2) (c4) v2)) (or (not (f (c2) (c4) v3)) (or (not (f (c2) (c4) v4)) (f v2 v3 v4))))) NIL)
:: (430 (resolve 429 (1) 12 ()) (or (not (f (c2) (c4) v2)) (or (not (f (c2) (c4) v3)) (or (not (f (c2) (c4) v4)) (f v2 v3 v4)))) NIL)
:: (431 (instantiate 430 ((v2 . v0) (v3 . v1) (v4 . v2))) (or (not (f (c2) (c4) v0)) (or (not (f (c2) (c4) v1)) (or (not (f (c2) (c4) v2)) (f v0 v1 v2)))) NIL)
:: (432 (instantiate 431 ((v0 . (c1)))) (or (not (f (c2) (c4) (c1))) (or (not (f (c2) (c4) v1)) (or (not (f (c2) (c4) v2)) (f (c1) v1 v2)))) NIL)
:: (433 (resolve 432 (1) 116 ()) (or (not (f (c2) (c4) v1)) (or (not (f (c2) (c4) v2)) (f (c1) v1 v2))) NIL)
:: (434 (instantiate 433 ((v1 . v0) (v2 . v1))) (or (not (f (c2) (c4) v0)) (or (not (f (c2) (c4) v1)) (f (c1) v0 v1))) NIL)
:: (435 (instantiate 434 ((v1 . (c4)))) (or (not (f (c2) (c4) v0)) (or (not (f (c2) (c4) (c4))) (f (c1) v0 (c4)))) NIL)
:: (436 (instantiate 38 ((v0 . (c2)) (v1 . (c4)))) (f (c2) (c4) (c4)) NIL)
:: (437 (resolve 435 (2 1) 436 ()) (or (not (f (c2) (c4) v0)) (f (c1) v0 (c4))) NIL)
:: (438 (instantiate 437 ((v0 . (c6)))) (or (not (f (c2) (c4) (c6))) (f (c1) (c6) (c4))) NIL)
:: (439 (resolve 438 (2) 297 ()) (not (f (c2) (c4) (c6))) NIL)
:: (440 (instantiate 171 ((v0 . (c3)))) (or (not (f (c1) (c4) (c3))) (f (c1) (c3) (c2))) NIL)
:: (441 (resolve 440 (1) 21 ()) (f (c1) (c3) (c2)) NIL)
:: (442 (instantiate 102 ((v0 . v101) (v1 . v100) (v3 . v101))) (or (= v101 v100) (or (not (f v100 v101 v2)) (or (not (f v100 v101 v101)) (f v2 v100 v101)))) NIL)
:: (443 (instantiate 38 ((v0 . v100) (v1 . v101))) (f v100 v101 v101) NIL)
:: (444 (resolve 442 (2 2 1) 443 ()) (or (= v101 v100) (or (not (f v100 v101 v2)) (f v2 v100 v101))) NIL)
:: (445 (instantiate 444 ((v101 . v0) (v100 . v1))) (or (= v0 v1) (or (not (f v1 v0 v2)) (f v2 v1 v0))) NIL)
:: (446 (instantiate 8 ((v0 . (c1)) (v1 . (c3)) (v2 . (c2)))) (or (not (f (c1) (c3) (c2))) (f (c3) (c2) (c1))) NIL)
:: (447 (resolve 441 () 446 (1)) (f (c3) (c2) (c1)) NIL)
:: (448 (instantiate 98 ((v0 . (c2)) (v1 . (c3)))) (or (= (c2) (c3)) (or (not (f (c3) (c2) v2)) (or (not (f (c3) (c2) v3)) (f v2 v3 (c3))))) NIL)
:: (449 (flip 11 ()) (not (= (c2) (c3))) NIL)
:: (450 (resolve 448 (1) 449 ()) (or (not (f (c3) (c2) v2)) (or (not (f (c3) (c2) v3)) (f v2 v3 (c3)))) NIL)
:: (451 (instantiate 450 ((v2 . v0) (v3 . v1))) (or (not (f (c3) (c2) v0)) (or (not (f (c3) (c2) v1)) (f v0 v1 (c3)))) NIL)
:: (452 (instantiate 451 ((v0 . (c1)))) (or (not (f (c3) (c2) (c1))) (or (not (f (c3) (c2) v1)) (f (c1) v1 (c3)))) NIL)
:: (453 (resolve 452 (1) 447 ()) (or (not (f (c3) (c2) v1)) (f (c1) v1 (c3))) NIL)
:: (454 (instantiate 453 ((v1 . v0))) (or (not (f (c3) (c2) v0)) (f (c1) v0 (c3))) NIL)
:: (455 (instantiate 454 ((v0 . (c6)))) (or (not (f (c3) (c2) (c6))) (f (c1) (c6) (c3))) NIL)
:: (456 (resolve 455 (2) 308 ()) (not (f (c3) (c2) (c6))) NIL)
:: (457 (instantiate 98 ((v0 . (c2)) (v1 . (c3)))) (or (= (c2) (c3)) (or (not (f (c3) (c2) v2)) (or (not (f (c3) (c2) v3)) (f v2 v3 (c3))))) NIL)
:: (458 (flip 11 ()) (not (= (c2) (c3))) NIL)
:: (459 (resolve 457 (1) 458 ()) (or (not (f (c3) (c2) v2)) (or (not (f (c3) (c2) v3)) (f v2 v3 (c3)))) NIL)
:: (460 (instantiate 459 ((v2 . v0) (v3 . v1))) (or (not (f (c3) (c2) v0)) (or (not (f (c3) (c2) v1)) (f v0 v1 (c3)))) NIL)
:: (461 (instantiate 460 ((v0 . (c1)))) (or (not (f (c3) (c2) (c1))) (or (not (f (c3) (c2) v1)) (f (c1) v1 (c3)))) NIL)
:: (462 (resolve 461 (1) 447 ()) (or (not (f (c3) (c2) v1)) (f (c1) v1 (c3))) NIL)
:: (463 (instantiate 462 ((v1 . v0))) (or (not (f (c3) (c2) v0)) (f (c1) v0 (c3))) NIL)
:: (464 (instantiate 463 ((v0 . (c5)))) (or (not (f (c3) (c2) (c5))) (f (c1) (c5) (c3))) NIL)
:: (465 (resolve 464 (2) 274 ()) (not (f (c3) (c2) (c5))) NIL)
:: (466 (instantiate 98 ((v0 . (c4)) (v1 . (c5)))) (or (= (c4) (c5)) (or (not (f (c5) (c4) v2)) (or (not (f (c5) (c4) v3)) (f v2 v3 (c5))))) NIL)
:: (467 (flip 317 ()) (not (= (c4) (c5))) NIL)
:: (468 (resolve 466 (1) 467 ()) (or (not (f (c5) (c4) v2)) (or (not (f (c5) (c4) v3)) (f v2 v3 (c5)))) NIL)
:: (469 (instantiate 468 ((v2 . v0) (v3 . v1))) (or (not (f (c5) (c4) v0)) (or (not (f (c5) (c4) v1)) (f v0 v1 (c5)))) NIL)
:: (470 (instantiate 469 ((v0 . (c4)))) (or (not (f (c5) (c4) (c4))) (or (not (f (c5) (c4) v1)) (f (c4) v1 (c5)))) NIL)
:: (471 (instantiate 38 ((v0 . (c5)) (v1 . (c4)))) (f (c5) (c4) (c4)) NIL)
:: (472 (resolve 470 (1) 471 ()) (or (not (f (c5) (c4) v1)) (f (c4) v1 (c5))) NIL)
:: (473 (instantiate 472 ((v1 . v0))) (or (not (f (c5) (c4) v0)) (f (c4) v0 (c5))) NIL)
:: (474 (instantiate 473 ((v0 . (c3)))) (or (not (f (c5) (c4) (c3))) (f (c4) (c3) (c5))) NIL)
:: (475 (resolve 474 (2) 350 ()) (not (f (c5) (c4) (c3))) NIL)
:: (476 (instantiate 114 ((v0 . (c5)) (v1 . (c10)) (v3 . (c3)))) (or (= (c5) (c10)) (or (not (f (c10) (c5) v2)) (or (not (f (c10) (c5) (c3))) (f (c5) v2 (c3))))) NIL)
:: (477 (resolve 476 (2 2 1) 384 ()) (or (= (c5) (c10)) (or (not (f (c10) (c5) v2)) (f (c5) v2 (c3)))) NIL)
:: (478 (instantiate 477 ((v2 . v0))) (or (= (c5) (c10)) (or (not (f (c10) (c5) v0)) (f (c5) v0 (c3)))) NIL)
:: (479 (flip 478 (1)) (or (= (c10) (c5)) (or (not (f (c10) (c5) v0)) (f (c5) v0 (c3)))) NIL)
:: (480 (instantiate 114 ((v0 . (c3)) (v1 . (c10)) (v3 . (c5)))) (or (= (c3) (c10)) (or (not (f (c10) (c3) v2)) (or (not (f (c10) (c3) (c5))) (f (c3) v2 (c5))))) NIL)
:: (481 (resolve 480 (2 2 1) 382 ()) (or (= (c3) (c10)) (or (not (f (c10) (c3) v2)) (f (c3) v2 (c5)))) NIL)
:: (482 (instantiate 481 ((v2 . v0))) (or (= (c3) (c10)) (or (not (f (c10) (c3) v0)) (f (c3) v0 (c5)))) NIL)
:: (483 (flip 482 (1)) (or (= (c10) (c3)) (or (not (f (c10) (c3) v0)) (f (c3) v0 (c5)))) NIL)
:: (484 (instantiate 114 ((v0 . (c6)) (v1 . (c10)) (v3 . (c2)))) (or (= (c6) (c10)) (or (not (f (c10) (c6) v2)) (or (not (f (c10) (c6) (c2))) (f (c6) v2 (c2))))) NIL)
:: (485 (resolve 484 (2 2 1) 354 ()) (or (= (c6) (c10)) (or (not (f (c10) (c6) v2)) (f (c6) v2 (c2)))) NIL)
:: (486 (instantiate 485 ((v2 . v0))) (or (= (c6) (c10)) (or (not (f (c10) (c6) v0)) (f (c6) v0 (c2)))) NIL)
:: (487 (flip 486 (1)) (or (= (c10) (c6)) (or (not (f (c10) (c6) v0)) (f (c6) v0 (c2)))) NIL)
:: (488 (instantiate 114 ((v0 . (c2)) (v1 . (c10)) (v3 . (c6)))) (or (= (c2) (c10)) (or (not (f (c10) (c2) v2)) (or (not (f (c10) (c2) (c6))) (f (c2) v2 (c6))))) NIL)
:: (489 (resolve 488 (2 2 1) 352 ()) (or (= (c2) (c10)) (or (not (f (c10) (c2) v2)) (f (c2) v2 (c6)))) NIL)
:: (490 (instantiate 489 ((v2 . v0))) (or (= (c2) (c10)) (or (not (f (c10) (c2) v0)) (f (c2) v0 (c6)))) NIL)
:: (491 (flip 490 (1)) (or (= (c10) (c2)) (or (not (f (c10) (c2) v0)) (f (c2) v0 (c6)))) NIL)
:: (492 (instantiate 114 ((v0 . (c7)) (v1 . (c9)) (v3 . (c3)))) (or (= (c7) (c9)) (or (not (f (c9) (c7) v2)) (or (not (f (c9) (c7) (c3))) (f (c7) v2 (c3))))) NIL)
:: (493 (resolve 492 (2 2 1) 322 ()) (or (= (c7) (c9)) (or (not (f (c9) (c7) v2)) (f (c7) v2 (c3)))) NIL)
:: (494 (instantiate 493 ((v2 . v0))) (or (= (c7) (c9)) (or (not (f (c9) (c7) v0)) (f (c7) v0 (c3)))) NIL)
:: (495 (flip 494 (1)) (or (= (c9) (c7)) (or (not (f (c9) (c7) v0)) (f (c7) v0 (c3)))) NIL)
:: (496 (instantiate 114 ((v0 . (c4)) (v1 . (c9)) (v3 . (c6)))) (or (= (c4) (c9)) (or (not (f (c9) (c4) v2)) (or (not (f (c9) (c4) (c6))) (f (c4) v2 (c6))))) NIL)
:: (497 (resolve 496 (2 2 1) 320 ()) (or (= (c4) (c9)) (or (not (f (c9) (c4) v2)) (f (c4) v2 (c6)))) NIL)
:: (498 (instantiate 497 ((v2 . v0))) (or (= (c4) (c9)) (or (not (f (c9) (c4) v0)) (f (c4) v0 (c6)))) NIL)
:: (499 (flip 498 (1)) (or (= (c9) (c4)) (or (not (f (c9) (c4) v0)) (f (c4) v0 (c6)))) NIL)
:: (500 (instantiate 114 ((v0 . (c4)) (v1 . (c8)) (v3 . (c5)))) (or (= (c4) (c8)) (or (not (f (c8) (c4) v2)) (or (not (f (c8) (c4) (c5))) (f (c4) v2 (c5))))) NIL)
:: (501 (resolve 500 (2 2 1) 310 ()) (or (= (c4) (c8)) (or (not (f (c8) (c4) v2)) (f (c4) v2 (c5)))) NIL)
:: (502 (instantiate 501 ((v2 . v0))) (or (= (c4) (c8)) (or (not (f (c8) (c4) v0)) (f (c4) v0 (c5)))) NIL)
:: (503 (flip 502 (1)) (or (= (c8) (c4)) (or (not (f (c8) (c4) v0)) (f (c4) v0 (c5)))) NIL)
:: (504 (instantiate 388 ((v0 . (c6)))) (or (not (f (c1) (c7) (c6))) (f (c7) (c6) (c5))) NIL)
:: (505 (resolve 504 (1) 23 ()) (f (c7) (c6) (c5)) NIL)
:: (506 (instantiate 8 ((v0 . (c7)) (v1 . (c6)) (v2 . (c5)))) (or (not (f (c7) (c6) (c5))) (f (c6) (c5) (c7))) NIL)
:: (507 (resolve 505 () 506 (1)) (f (c6) (c5) (c7)) NIL)
:: (508 (instantiate 114 ((v0 . (c5)) (v1 . (c6)))) (or (= (c5) (c6)) (or (not (f (c6) (c5) v2)) (or (not (f (c6) (c5) v3)) (f (c5) v2 v3)))) NIL)
:: (509 (flip 16 ()) (not (= (c5) (c6))) NIL)
:: (510 (resolve 508 (1) 509 ()) (or (not (f (c6) (c5) v2)) (or (not (f (c6) (c5) v3)) (f (c5) v2 v3))) NIL)
:: (511 (instantiate 510 ((v2 . v0) (v3 . v1))) (or (not (f (c6) (c5) v0)) (or (not (f (c6) (c5) v1)) (f (c5) v0 v1))) NIL)
:: (512 (instantiate 511 ((v1 . (c7)))) (or (not (f (c6) (c5) v0)) (or (not (f (c6) (c5) (c7))) (f (c5) v0 (c7)))) NIL)
:: (513 (resolve 512 (2 1) 507 ()) (or (not (f (c6) (c5) v0)) (f (c5) v0 (c7))) NIL)
:: (514 (instantiate 513 ((v0 . (c2)))) (or (not (f (c6) (c5) (c2))) (f (c5) (c2) (c7))) NIL)
:: (515 (resolve 514 (2) 338 ()) (not (f (c6) (c5) (c2))) NIL)
:: (516 (instantiate 114 ((v0 . (c5)) (v1 . (c6)))) (or (= (c5) (c6)) (or (not (f (c6) (c5) v2)) (or (not (f (c6) (c5) v3)) (f (c5) v2 v3)))) NIL)
:: (517 (flip 16 ()) (not (= (c5) (c6))) NIL)
:: (518 (resolve 516 (1) 517 ()) (or (not (f (c6) (c5) v2)) (or (not (f (c6) (c5) v3)) (f (c5) v2 v3))) NIL)
:: (519 (instantiate 518 ((v2 . v0) (v3 . v1))) (or (not (f (c6) (c5) v0)) (or (not (f (c6) (c5) v1)) (f (c5) v0 v1))) NIL)
:: (520 (instantiate 519 ((v0 . (c7)))) (or (not (f (c6) (c5) (c7))) (or (not (f (c6) (c5) v1)) (f (c5) (c7) v1))) NIL)
:: (521 (resolve 520 (1) 507 ()) (or (not (f (c6) (c5) v1)) (f (c5) (c7) v1)) NIL)
:: (522 (instantiate 521 ((v1 . v0))) (or (not (f (c6) (c5) v0)) (f (c5) (c7) v0)) NIL)
:: (523 (instantiate 522 ((v0 . (c3)))) (or (not (f (c6) (c5) (c3))) (f (c5) (c7) (c3))) NIL)
:: (524 (resolve 523 (2) 423 ()) (not (f (c6) (c5) (c3))) NIL)
:: (525 (instantiate 110 ((v0 . (c4)) (v1 . (c6)))) (or (= (c4) (c6)) (or (not (f (c6) (c4) v2)) (or (not (f (c6) (c4) v3)) (f v2 (c4) v3)))) NIL)
:: (526 (flip 361 ()) (not (= (c4) (c6))) NIL)
:: (527 (resolve 525 (1) 526 ()) (or (not (f (c6) (c4) v2)) (or (not (f (c6) (c4) v3)) (f v2 (c4) v3))) NIL)
:: (528 (instantiate 527 ((v2 . v0) (v3 . v1))) (or (not (f (c6) (c4) v0)) (or (not (f (c6) (c4) v1)) (f v0 (c4) v1))) NIL)
:: (529 (instantiate 528 ((v1 . (c6)))) (or (not (f (c6) (c4) v0)) (or (not (f (c6) (c4) (c6))) (f v0 (c4) (c6)))) NIL)
:: (530 (instantiate 34 ((v0 . (c6)) (v1 . (c4)))) (f (c6) (c4) (c6)) NIL)
:: (531 (resolve 529 (2 1) 530 ()) (or (not (f (c6) (c4) v0)) (f v0 (c4) (c6))) NIL)
:: (532 (instantiate 531 ((v0 . (c2)))) (or (not (f (c6) (c4) (c2))) (f (c2) (c4) (c6))) NIL)
:: (533 (resolve 532 (2) 439 ()) (not (f (c6) (c4) (c2))) NIL)
:: (534 (instantiate 106 ((v0 . (c6)) (v1 . (c2)))) (or (= (c6) (c2)) (or (not (f (c2) (c6) v2)) (or (not (f (c2) (c6) v3)) (f v2 v3 (c6))))) NIL)
:: (535 (resolve 534 (1) 380 ()) (or (not (f (c2) (c6) v2)) (or (not (f (c2) (c6) v3)) (f v2 v3 (c6)))) NIL)
:: (536 (instantiate 535 ((v2 . v0) (v3 . v1))) (or (not (f (c2) (c6) v0)) (or (not (f (c2) (c6) v1)) (f v0 v1 (c6)))) NIL)
:: (537 (instantiate 536 ((v1 . (c2)))) (or (not (f (c2) (c6) v0)) (or (not (f (c2) (c6) (c2))) (f v0 (c2) (c6)))) NIL)
:: (538 (instantiate 34 ((v0 . (c2)) (v1 . (c6)))) (f (c2) (c6) (c2)) NIL)
:: (539 (resolve 537 (2 1) 538 ()) (or (not (f (c2) (c6) v0)) (f v0 (c2) (c6))) NIL)
:: (540 (instantiate 539 ((v0 . (c3)))) (or (not (f (c2) (c6) (c3))) (f (c3) (c2) (c6))) NIL)
:: (541 (resolve 540 (2) 456 ()) (not (f (c2) (c6) (c3))) NIL)
:: (542 (instantiate 106 ((v0 . (c5)) (v1 . (c3)))) (or (= (c5) (c3)) (or (not (f (c3) (c5) v2)) (or (not (f (c3) (c5) v3)) (f v2 v3 (c5))))) NIL)
:: (543 (resolve 542 (1) 426 ()) (or (not (f (c3) (c5) v2)) (or (not (f (c3) (c5) v3)) (f v2 v3 (c5)))) NIL)
:: (544 (instantiate 543 ((v2 . v0) (v3 . v1))) (or (not (f (c3) (c5) v0)) (or (not (f (c3) (c5) v1)) (f v0 v1 (c5)))) NIL)
:: (545 (instantiate 544 ((v0 . (c3)))) (or (not (f (c3) (c5) (c3))) (or (not (f (c3) (c5) v1)) (f (c3) v1 (c5)))) NIL)
:: (546 (instantiate 34 ((v0 . (c3)) (v1 . (c5)))) (f (c3) (c5) (c3)) NIL)
:: (547 (resolve 545 (1) 546 ()) (or (not (f (c3) (c5) v1)) (f (c3) v1 (c5))) NIL)
:: (548 (instantiate 547 ((v1 . v0))) (or (not (f (c3) (c5) v0)) (f (c3) v0 (c5))) NIL)
:: (549 (instantiate 548 ((v0 . (c2)))) (or (not (f (c3) (c5) (c2))) (f (c3) (c2) (c5))) NIL)
:: (550 (resolve 549 (2) 465 ()) (not (f (c3) (c5) (c2))) NIL)
:: (551 (instantiate 114 ((v0 . (c6)) (v1 . (c2)))) (or (= (c6) (c2)) (or (not (f (c2) (c6) v2)) (or (not (f (c2) (c6) v3)) (f (c6) v2 v3)))) NIL)
:: (552 (resolve 551 (1) 380 ()) (or (not (f (c2) (c6) v2)) (or (not (f (c2) (c6) v3)) (f (c6) v2 v3))) NIL)
:: (553 (instantiate 552 ((v2 . v0) (v3 . v1))) (or (not (f (c2) (c6) v0)) (or (not (f (c2) (c6) v1)) (f (c6) v0 v1))) NIL)
:: (554 (instantiate 553 ((v1 . (c2)))) (or (not (f (c2) (c6) v0)) (or (not (f (c2) (c6) (c2))) (f (c6) v0 (c2)))) NIL)
:: (555 (instantiate 34 ((v0 . (c2)) (v1 . (c6)))) (f (c2) (c6) (c2)) NIL)
:: (556 (resolve 554 (2 1) 555 ()) (or (not (f (c2) (c6) v0)) (f (c6) v0 (c2))) NIL)
:: (557 (instantiate 556 ((v0 . (c5)))) (or (not (f (c2) (c6) (c5))) (f (c6) (c5) (c2))) NIL)
:: (558 (resolve 557 (2) 515 ()) (not (f (c2) (c6) (c5))) NIL)
:: (559 (instantiate 110 ((v0 . (c5)) (v1 . (c3)))) (or (= (c5) (c3)) (or (not (f (c3) (c5) v2)) (or (not (f (c3) (c5) v3)) (f v2 (c5) v3)))) NIL)
:: (560 (resolve 559 (1) 426 ()) (or (not (f (c3) (c5) v2)) (or (not (f (c3) (c5) v3)) (f v2 (c5) v3))) NIL)
:: (561 (instantiate 560 ((v2 . v0) (v3 . v1))) (or (not (f (c3) (c5) v0)) (or (not (f (c3) (c5) v1)) (f v0 (c5) v1))) NIL)
:: (562 (instantiate 561 ((v1 . (c3)))) (or (not (f (c3) (c5) v0)) (or (not (f (c3) (c5) (c3))) (f v0 (c5) (c3)))) NIL)
:: (563 (instantiate 34 ((v0 . (c3)) (v1 . (c5)))) (f (c3) (c5) (c3)) NIL)
:: (564 (resolve 562 (2 1) 563 ()) (or (not (f (c3) (c5) v0)) (f v0 (c5) (c3))) NIL)
:: (565 (instantiate 564 ((v0 . (c6)))) (or (not (f (c3) (c5) (c6))) (f (c6) (c5) (c3))) NIL)
:: (566 (resolve 565 (2) 524 ()) (not (f (c3) (c5) (c6))) NIL)
:: (567 (instantiate 217 ((v1 . (c5)))) (or (not (f (c7) (c6) v0)) (or (not (f (c7) (c6) (c5))) (f (c1) v0 (c5)))) NIL)
:: (568 (resolve 567 (2 1) 505 ()) (or (not (f (c7) (c6) v0)) (f (c1) v0 (c5))) NIL)
:: (569 (instantiate 6 ((v0 . (c10)) (v1 . (c7)) (v2 . (c5)))) (or (not (f (c10) (c7) (c5))) (f (c7) (c10) (c5))) NIL)
:: (570 (resolve 363 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 569 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (or (f (c7) (c6) (c10)) (f (c7) (c10) (c5))))))))))))))))))))))) NIL)
:: (571 (propositional 570) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c7) (c3)) (or (f (c10) (c4) (c3)) (f (c7) (c6) (c10)))))))))))))))))))))) NIL)
:: (572 (instantiate 6 ((v0 . (c10)) (v1 . (c7)) (v2 . (c3)))) (or (not (f (c10) (c7) (c3))) (f (c7) (c10) (c3))) NIL)
:: (573 (resolve 571 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 572 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c4) (c3)) (or (f (c7) (c6) (c10)) (f (c7) (c10) (c3)))))))))))))))))))))) NIL)
:: (574 (propositional 573) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c7) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c4) (c3)) (f (c7) (c6) (c10))))))))))))))))))))) NIL)
:: (575 (instantiate 6 ((v0 . (c10)) (v1 . (c7)) (v2 . (c2)))) (or (not (f (c10) (c7) (c2))) (f (c7) (c10) (c2))) NIL)
:: (576 (resolve 574 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 575 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c4) (c5)) (or (f (c10) (c4) (c3)) (or (f (c7) (c6) (c10)) (f (c7) (c10) (c2))))))))))))))))))))) NIL)
:: (577 (propositional 576) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c6)) (or (f (c10) (c4) (c5)) (or (f (c10) (c4) (c3)) (f (c7) (c6) (c10)))))))))))))))))))) NIL)
:: (578 (instantiate 6 ((v0 . (c10)) (v1 . (c4)) (v2 . (c6)))) (or (not (f (c10) (c4) (c6))) (f (c4) (c10) (c6))) NIL)
:: (579 (resolve 577 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 578 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c4) (c3)) (or (f (c7) (c6) (c10)) (f (c4) (c10) (c6)))))))))))))))))))) NIL)
:: (580 (propositional 579) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c5)) (or (f (c10) (c4) (c3)) (f (c7) (c6) (c10))))))))))))))))))) NIL)
:: (581 (instantiate 6 ((v0 . (c10)) (v1 . (c4)) (v2 . (c5)))) (or (not (f (c10) (c4) (c5))) (f (c4) (c10) (c5))) NIL)
:: (582 (resolve 580 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 581 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c3)) (or (f (c7) (c6) (c10)) (f (c4) (c10) (c5))))))))))))))))))) NIL)
:: (583 (propositional 582) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c10) (c4) (c3)) (f (c7) (c6) (c10)))))))))))))))))) NIL)
:: (584 (instantiate 6 ((v0 . (c10)) (v1 . (c4)) (v2 . (c3)))) (or (not (f (c10) (c4) (c3))) (f (c4) (c10) (c3))) NIL)
:: (585 (resolve 583 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 584 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (or (f (c7) (c6) (c10)) (f (c4) (c10) (c3)))))))))))))))))) NIL)
:: (586 (propositional 585) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c10) (c4) (c2)) (f (c7) (c6) (c10))))))))))))))))) NIL)
:: (587 (instantiate 6 ((v0 . (c10)) (v1 . (c4)) (v2 . (c2)))) (or (not (f (c10) (c4) (c2))) (f (c4) (c10) (c2))) NIL)
:: (588 (resolve 586 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 1) 587 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (f (c4) (c10) (c2))))))))))))))))) NIL)
:: (589 (propositional 588) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (f (c7) (c6) (c10)))))))))))))))) NIL)
:: (590 (instantiate 8 ((v0 . (c7)) (v1 . (c10)) (v2 . (c9)))) (or (not (f (c7) (c10) (c9))) (f (c10) (c9) (c7))) NIL)
:: (591 (resolve 589 (2 2 2 2 2 2 2 2 2 1) 590 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (f (c10) (c9) (c7)))))))))))))))) NIL)
:: (592 (instantiate 8 ((v0 . (c10)) (v1 . (c9)) (v2 . (c7)))) (or (not (f (c10) (c9) (c7))) (f (c9) (c7) (c10))) NIL)
:: (593 (resolve 591 (2 2 2 2 2 2 2 2 2 2 2 2 2 2) 592 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (f (c9) (c7) (c10)))))))))))))))) NIL)
:: (594 (instantiate 495 ((v0 . (c10)))) (or (= (c9) (c7)) (or (not (f (c9) (c7) (c10))) (f (c7) (c10) (c3)))) NIL)
:: (595 (resolve 593 (2 2 2 2 2 2 2 2 2 2 2 2 2 2) 594 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (f (c7) (c10) (c3))))))))))))))))) NIL)
:: (596 (propositional 595) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c5)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (= (c9) (c7)))))))))))))))) NIL)
:: (597 (instantiate 8 ((v0 . (c7)) (v1 . (c10)) (v2 . (c5)))) (or (not (f (c7) (c10) (c5))) (f (c10) (c5) (c7))) NIL)
:: (598 (resolve 596 (2 2 2 2 2 2 2 2 1) 597 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (f (c10) (c5) (c7)))))))))))))))) NIL)
:: (599 (instantiate 479 ((v0 . (c7)))) (or (= (c10) (c5)) (or (not (f (c10) (c5) (c7))) (f (c5) (c7) (c3)))) NIL)
:: (600 (resolve 598 (2 2 2 2 2 2 2 2 2 2 2 2 2 2) 599 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (or (= (c10) (c5)) (f (c5) (c7) (c3))))))))))))))))) NIL)
:: (601 (resolve 423 () 600 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c10) (c3)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (= (c10) (c5)))))))))))))))) NIL)
:: (602 (instantiate 8 ((v0 . (c7)) (v1 . (c10)) (v2 . (c3)))) (or (not (f (c7) (c10) (c3))) (f (c10) (c3) (c7))) NIL)
:: (603 (resolve 601 (2 2 2 2 2 2 2 2 1) 602 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (or (= (c10) (c5)) (f (c10) (c3) (c7)))))))))))))))) NIL)
:: (604 (instantiate 483 ((v0 . (c7)))) (or (= (c10) (c3)) (or (not (f (c10) (c3) (c7))) (f (c3) (c7) (c5)))) NIL)
:: (605 (resolve 603 (2 2 2 2 2 2 2 2 2 2 2 2 2 2) 604 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (f (c3) (c7) (c5))))))))))))))))) NIL)
:: (606 (resolve 428 () 605 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c9)) (or (f (c7) (c10) (c2)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (or (= (c10) (c5)) (= (c10) (c3)))))))))))))))) NIL)
:: (607 (instantiate 8 ((v0 . (c7)) (v1 . (c10)) (v2 . (c2)))) (or (not (f (c7) (c10) (c2))) (f (c10) (c2) (c7))) NIL)
:: (608 (resolve 606 (2 2 2 2 2 2 2 2 2 1) 607 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c9)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (f (c10) (c2) (c7)))))))))))))))) NIL)
:: (609 (instantiate 491 ((v0 . (c7)))) (or (= (c10) (c2)) (or (not (f (c10) (c2) (c7))) (f (c2) (c7) (c6)))) NIL)
:: (610 (resolve 608 (2 2 2 2 2 2 2 2 2 2 2 2 2 2) 609 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c9)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (f (c2) (c7) (c6))))))))))))))))) NIL)
:: (611 (resolve 377 () 610 (2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c9)) (or (f (c7) (c4) (c8)) (or (f (c7) (c6) (c10)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (= (c10) (c2)))))))))))))))) NIL)
:: (612 (instantiate 568 ((v0 . (c10)))) (or (not (f (c7) (c6) (c10))) (f (c1) (c10) (c5))) NIL)
:: (613 (resolve 611 (2 2 2 2 2 2 2 2 2 2 1) 612 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c9)) (or (f (c7) (c4) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (f (c1) (c10) (c5)))))))))))))))) NIL)
:: (614 (instantiate 6 ((v0 . (c7)) (v1 . (c4)) (v2 . (c9)))) (or (not (f (c7) (c4) (c9))) (f (c4) (c7) (c9))) NIL)
:: (615 (resolve 613 (2 2 2 2 2 2 2 2 1) 614 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (f (c4) (c7) (c9)))))))))))))))) NIL)
:: (616 (propositional 615) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (f (c7) (c4) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (f (c1) (c10) (c5))))))))))))))) NIL)
:: (617 (instantiate 6 ((v0 . (c7)) (v1 . (c4)) (v2 . (c8)))) (or (not (f (c7) (c4) (c8))) (f (c4) (c7) (c8))) NIL)
:: (618 (resolve 616 (2 2 2 2 2 2 2 2 1) 617 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (f (c4) (c7) (c8))))))))))))))) NIL)
:: (619 (propositional 618) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (f (c4) (c10) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (f (c1) (c10) (c5)))))))))))))) NIL)
:: (620 (instantiate 8 ((v0 . (c4)) (v1 . (c10)) (v2 . (c9)))) (or (not (f (c4) (c10) (c9))) (f (c10) (c9) (c4))) NIL)
:: (621 (resolve 619 (2 2 2 2 2 2 2 1) 620 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (f (c10) (c9) (c4)))))))))))))) NIL)
:: (622 (instantiate 8 ((v0 . (c10)) (v1 . (c9)) (v2 . (c4)))) (or (not (f (c10) (c9) (c4))) (f (c9) (c4) (c10))) NIL)
:: (623 (resolve 621 (2 2 2 2 2 2 2 2 2 2 2 2) 622 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (f (c9) (c4) (c10)))))))))))))) NIL)
:: (624 (instantiate 499 ((v0 . (c10)))) (or (= (c9) (c4)) (or (not (f (c9) (c4) (c10))) (f (c4) (c10) (c6)))) NIL)
:: (625 (resolve 623 (2 2 2 2 2 2 2 2 2 2 2 2) 624 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (f (c4) (c10) (c6))))))))))))))) NIL)
:: (626 (propositional 625) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c10) (c8)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (= (c9) (c4)))))))))))))) NIL)
:: (627 (instantiate 8 ((v0 . (c4)) (v1 . (c10)) (v2 . (c8)))) (or (not (f (c4) (c10) (c8))) (f (c10) (c8) (c4))) NIL)
:: (628 (resolve 626 (2 2 1) 627 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (f (c10) (c8) (c4)))))))))))))) NIL)
:: (629 (instantiate 8 ((v0 . (c10)) (v1 . (c8)) (v2 . (c4)))) (or (not (f (c10) (c8) (c4))) (f (c8) (c4) (c10))) NIL)
:: (630 (resolve 628 (2 2 2 2 2 2 2 2 2 2 2 2) 629 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (f (c8) (c4) (c10)))))))))))))) NIL)
:: (631 (instantiate 503 ((v0 . (c10)))) (or (= (c8) (c4)) (or (not (f (c8) (c4) (c10))) (f (c4) (c10) (c5)))) NIL)
:: (632 (resolve 630 (2 2 2 2 2 2 2 2 2 2 2 2) 631 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (f (c4) (c10) (c5))))))))))))))) NIL)
:: (633 (propositional 632) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (f (c4) (c10) (c6)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (= (c8) (c4)))))))))))))) NIL)
:: (634 (instantiate 8 ((v0 . (c4)) (v1 . (c10)) (v2 . (c6)))) (or (not (f (c4) (c10) (c6))) (f (c10) (c6) (c4))) NIL)
:: (635 (resolve 633 (2 2 2 2 2 1) 634 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (f (c10) (c6) (c4)))))))))))))) NIL)
:: (636 (instantiate 487 ((v0 . (c4)))) (or (= (c10) (c6)) (or (not (f (c10) (c6) (c4))) (f (c6) (c4) (c2)))) NIL)
:: (637 (resolve 635 (2 2 2 2 2 2 2 2 2 2 2 2) 636 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c6) (c4) (c2))))))))))))))) NIL)
:: (638 (resolve 533 () 637 (2 2 2 2 2 2 2 2 2 2 2 2 2)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c10) (c5)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (= (c10) (c6)))))))))))))) NIL)
:: (639 (instantiate 8 ((v0 . (c4)) (v1 . (c10)) (v2 . (c5)))) (or (not (f (c4) (c10) (c5))) (f (c10) (c5) (c4))) NIL)
:: (640 (resolve 638 (2 2 2 1) 639 (1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c10) (c5) (c4)))))))))))))) NIL)
:: (641 (instantiate 479 ((v0 . (c4)))) (or (= (c10) (c5)) (or (not (f (c10) (c5) (c4))) (f (c5) (c4) (c3)))) NIL)
:: (642 (resolve 640 (2 2 2 2 2 2 2 2 2 2 2 2) 641 (2 1)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c10) (c5)) (f (c5) (c4) (c3))))))))))))))) NIL)
:: (643 (propositional 642) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c5) (c4) (c3)))))))))))))) NIL)
:: (644 (resolve 475 () 643 (2 2 2 2 2 2 2 2 2 2 2 2)) (or (f (c4) (c10) (c3)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (= (c10) (c6))))))))))))) NIL)
:: (645 (instantiate 8 ((v0 . (c4)) (v1 . (c10)) (v2 . (c3)))) (or (not (f (c4) (c10) (c3))) (f (c10) (c3) (c4))) NIL)
:: (646 (resolve 644 (1) 645 (1)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c10) (c3) (c4))))))))))))) NIL)
:: (647 (instantiate 483 ((v0 . (c4)))) (or (= (c10) (c3)) (or (not (f (c10) (c3) (c4))) (f (c3) (c4) (c5)))) NIL)
:: (648 (resolve 646 (2 2 2 2 2 2 2 2 2 2 2) 647 (2 1)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c10) (c3)) (f (c3) (c4) (c5)))))))))))))) NIL)
:: (649 (propositional 648) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c3) (c4) (c5))))))))))))) NIL)
:: (650 (resolve 399 () 649 (2 2 2 2 2 2 2 2 2 2 2)) (or (f (c4) (c10) (c2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (= (c10) (c6)))))))))))) NIL)
:: (651 (instantiate 8 ((v0 . (c4)) (v1 . (c10)) (v2 . (c2)))) (or (not (f (c4) (c10) (c2))) (f (c10) (c2) (c4))) NIL)
:: (652 (resolve 650 (1) 651 (1)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c10) (c2) (c4)))))))))))) NIL)
:: (653 (instantiate 491 ((v0 . (c4)))) (or (= (c10) (c2)) (or (not (f (c10) (c2) (c4))) (f (c2) (c4) (c6)))) NIL)
:: (654 (resolve 652 (2 2 2 2 2 2 2 2 2 2) 653 (2 1)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c10) (c2)) (f (c2) (c4) (c6))))))))))))) NIL)
:: (655 (propositional 654) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c2) (c4) (c6)))))))))))) NIL)
:: (656 (resolve 439 () 655 (2 2 2 2 2 2 2 2 2 2)) (or (f (c4) (c7) (c8)) (or (f (c4) (c7) (c9)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (= (c10) (c6))))))))))) NIL)
:: (657 (instantiate 445 ((v0 . (c7)) (v1 . (c4)) (v2 . (c9)))) (or (= (c7) (c4)) (or (not (f (c4) (c7) (c9))) (f (c9) (c4) (c7)))) NIL)
:: (658 (resolve 656 (2 1) 657 (2 1)) (or (f (c4) (c7) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c7) (c4)) (f (c9) (c4) (c7)))))))))))) NIL)
:: (659 (resolve 44 () 658 (2 2 2 2 2 2 2 2 2 1)) (or (f (c4) (c7) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c9) (c4) (c7))))))))))) NIL)
:: (660 (instantiate 499 ((v0 . (c7)))) (or (= (c9) (c4)) (or (not (f (c9) (c4) (c7))) (f (c4) (c7) (c6)))) NIL)
:: (661 (resolve 659 (2 2 2 2 2 2 2 2 2) 660 (2 1)) (or (f (c4) (c7) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c9) (c4)) (f (c4) (c7) (c6)))))))))))) NIL)
:: (662 (propositional 661) (or (f (c4) (c7) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c4) (c7) (c6))))))))))) NIL)
:: (663 (resolve 356 () 662 (2 2 2 2 2 2 2 2 2)) (or (f (c4) (c7) (c8)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (= (c10) (c6)))))))))) NIL)
:: (664 (instantiate 445 ((v0 . (c7)) (v1 . (c4)) (v2 . (c8)))) (or (= (c7) (c4)) (or (not (f (c4) (c7) (c8))) (f (c8) (c4) (c7)))) NIL)
:: (665 (resolve 663 (1) 664 (2 1)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c7) (c4)) (f (c8) (c4) (c7))))))))))) NIL)
:: (666 (resolve 44 () 665 (2 2 2 2 2 2 2 2 1)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c8) (c4) (c7)))))))))) NIL)
:: (667 (instantiate 503 ((v0 . (c7)))) (or (= (c8) (c4)) (or (not (f (c8) (c4) (c7))) (f (c4) (c7) (c5)))) NIL)
:: (668 (resolve 666 (2 2 2 2 2 2 2 2) 667 (2 1)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c8) (c4)) (f (c4) (c7) (c5))))))))))) NIL)
:: (669 (propositional 668) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c4) (c7) (c5)))))))))) NIL)
:: (670 (resolve 314 () 669 (2 2 2 2 2 2 2 2)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (f (c1) (c10) (c5)) (or (= (c9) (c4)) (or (= (c8) (c4)) (= (c10) (c6))))))))) NIL)
:: (671 (instantiate 8 ((v0 . (c1)) (v1 . (c10)) (v2 . (c5)))) (or (not (f (c1) (c10) (c5))) (f (c10) (c5) (c1))) NIL)
:: (672 (resolve 670 (2 2 2 2 1) 671 (1)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c10) (c5) (c1))))))))) NIL)
:: (673 (instantiate 479 ((v0 . (c1)))) (or (= (c10) (c5)) (or (not (f (c10) (c5) (c1))) (f (c5) (c1) (c3)))) NIL)
:: (674 (resolve 672 (2 2 2 2 2 2 2) 673 (2 1)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (or (= (c10) (c5)) (f (c5) (c1) (c3)))))))))) NIL)
:: (675 (propositional 674) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (or (= (c8) (c4)) (or (= (c10) (c6)) (f (c5) (c1) (c3))))))))) NIL)
:: (676 (resolve 411 () 675 (2 2 2 2 2 2 2)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (or (= (c8) (c4)) (= (c10) (c6)))))))) NIL)
:: (677 (paramod 676 (2 2 2 2 2 2 1) 29 (3)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (or (= (c8) (c4)) (f (c3) (c5) (c6)))))))) NIL)
:: (678 (resolve 566 () 677 (2 2 2 2 2 2)) (or (= (c9) (c7)) (or (= (c10) (c5)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (= (c8) (c4))))))) NIL)
:: (679 (paramod 678 (2 1 1) 28 (3)) (or (= (c9) (c7)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (or (= (c8) (c4)) (f (c2) (c6) (c5))))))) NIL)
:: (680 (resolve 558 () 679 (2 2 2 2 2)) (or (= (c9) (c7)) (or (= (c10) (c3)) (or (= (c10) (c2)) (or (= (c9) (c4)) (= (c8) (c4)))))) NIL)
:: (681 (paramod 680 (2 1 1) 28 (3)) (or (= (c9) (c7)) (or (= (c10) (c2)) (or (= (c9) (c4)) (or (= (c8) (c4)) (f (c2) (c6) (c3)))))) NIL)
:: (682 (resolve 541 () 681 (2 2 2 2)) (or (= (c9) (c7)) (or (= (c10) (c2)) (or (= (c9) (c4)) (= (c8) (c4))))) NIL)
:: (683 (paramod 682 (2 1 1) 29 (3)) (or (= (c9) (c7)) (or (= (c9) (c4)) (or (= (c8) (c4)) (f (c3) (c5) (c2))))) NIL)
:: (684 (resolve 550 () 683 (2 2 2)) (or (= (c9) (c7)) (or (= (c9) (c4)) (= (c8) (c4)))) NIL)
:: (685 (paramod 684 (1 1) 26 (3)) (or (= (c9) (c4)) (or (= (c8) (c4)) (f (c4) (c6) (c7)))) NIL)
:: (686 (resolve 375 () 685 (2 2)) (or (= (c9) (c4)) (= (c8) (c4))) NIL)
:: (687 (paramod 686 (1 1) 27 (3)) (or (= (c8) (c4)) (f (c3) (c7) (c4))) NIL)
:: (688 (resolve 261 () 687 (2)) (= (c8) (c4)) NIL)
:: (689 (paramod 688 (1) 312 (1)) (f (c4) (c2) (c7)) NIL)
:: (690 (resolve 128 () 689 ()) false NIL)
:: )
:: ;; END OF PROOF OBJECT

:: RENAME PROOF OBJECT FILE: lem01.ivy


:: #!/bin/sh

:: # Cr\'eation du r\'epertoire de travail
:: mkdir PAPPUS

:: # Installation du fichier `PROOF OBJECT' (IVY + rename labels)
:: mv lem01.ivy ./PAPPUS

:: # Cr\'eation du fichier `index' dans le r\'epertoire ./PAPPUS
:: # contenant uniquement le nom du fichier

:: cat << EOF > ./PAPPUS/index
:: lem01.ivy
:: EOF

:: # Cr\'eation du fichier de traduction.
:: # Il se termine n\'ecessairement par `.rul'

:: cat << EOF > ./PAPPUS/lem01.rul
:: ("=" (1 "=" 2))
:: ("f" (1 "," 2 "," 3 " are_collinear"))
:: EOF

:: # T\'el\'echargement du fichier ott2miz.el de Joseph Urban
:: # https://github.com/JUrban/ott2miz/
:: # File : ott2miz.el

:: # FIX: FREEBSD 10.3 
:: # modifi\'e par l'ajout des 2 lignes apr\`es
:: # (require 'cl)
:: #
:: #   (setq ls-lisp-use-insert-directory-program t)
:: #   (setq insert-directory-program "gnuls")
:: #
:: # afin de le rendre compatible avec FREEBSD 10.3

:: # Lancer le processus suivant:
:: emacs -batch -q -l ott2miz.el --eval '(translate-many "PAPPUS/index")'
:: # Si on a l'erreur suivante:
:: # Symbol's value as variable is void: 3~
:: # Il suffit de supprimer les 2 charact\`eres du fichier ott2miz.el

:: # Le r\'esultat se trouve essentiellement dans le fichier `./PAPPUS/lem01.miz'

:: # Pour un premier test de validiter:
:: # mkdir ./dict
:: # mkdir ./text
:: # modifier l'environnement de lem01.miz par

:: #    environ

:: #      vocabularies ANPROJ_2, SUBSET_1, PENCIL_1;
:: #      notations STRUCT_0, COLLSP, ANPROJ_2;
:: #      constructors ANPROJ_2;
:: #      theorems HESSENBE,COLLSP;

:: #    begin

:: # Il faut supprimer toutes les definitions
:: # et les reservations 
:: # Il faut effectuer les reservations suivantes:

:: # reserve PCPP for CollProjectiveSpace;
:: # reserve c1,c2,c3,c4,c5,c6,c7,c8,c9,c10 for Element of PCPP;
:: # reserve v100,v101,v102,v103,v104,v0,v1,v2,v3,v4 for Element of PCPP;	
:: # Normalement un test mizf ./text/lem01 devrait fonctionner correctement.

:: # Apporter les derni\`eres manipulations :
:: # Transformer les lignes suivantes en supprimant 'assume' et
:: # en ajoutant en fin de ligne by COLLSP:1,2,3,4,5,6,7,8,9,10,HESSENBE:1,2,3...
:: # Bien sur, un passage avec RELPREM enlevera ce qui n'est plus n\'ecessaire.
:: # On gardera les autres lignes 'assume' inchang\'ees.

:: # assume A1: for v0 holds v0=v0;
:: # --> A1: for v0 holds v0=v0;
:: # assume A2: for v2,v0,v1 holds  not v0=v1 or v1,v0,v2 are_collinear;
:: # --> A2: for v2,v0,v1 holds  not v0=v1 or v1,v0,v2 are_collinear by COLLSP:1,2,...
:: # assume A3: for v0,v2,v1 holds  not v0=v1 or v1,v2,v0 are_collinear;

:: # assume A4: for v0,v1,v2 holds  not v0=v1 or v2,v1,v0 are_collinear;

:: # assume A5: for v2,v3,v4,v0,v1 holds v0=v1 or  not v1,v0,v2
:: # are_collinear or  not v1,v0,v3 are_collinear or  not v1,v0,v4
:: # are_collinear or v2,v3,v4 are_collinear;

:: # assume A6: for v2,v1,v0 holds  not v0,v1,v2 are_collinear or v1,v0,v2
:: # are_collinear;

:: # assume A7: for v2,v1,v0 holds  not v0,v1,v2 are_collinear or v0,v2,v1
:: # are_collinear;

:: # assume A8: for v2,v1,v0 holds  not v0,v1,v2 are_collinear or v1,v2,v0
:: # are_collinear;

:: # Ne pas tenir compte du fichier `lem01.voc'

:: # On terminera le travail par une suppression des erreurs
:: # 602,603,604,605,... (RELPREM,RELINFER,...)

:: On apportera une derniere modification:
:: A & B implies contradiction --> A implies not B


::**********************************************************************
:: VERSION 2: Lemma
::**********************************************************************

:: theorem OTTER1:

:: ( not c2=c1) &

:: ( not c3=c1) &

:: ( not c3=c2) &

:: ( not c4=c2) &

:: ( not c4=c3) &

:: ( not c5=c1) &

:: ( not c6=c1) &

:: ( not c6=c5) &

:: ( not c7=c5) &

:: ( not c7=c6) &

:: ( not c1,c4,c7 are_collinear) &

:: (c1,c4,c2 are_collinear) &

:: (c1,c4,c3 are_collinear) &

:: (c1,c7,c5 are_collinear) &

:: (c1,c7,c6 are_collinear) &

:: (c4,c5,c8 are_collinear) &

:: (c7,c2,c8 are_collinear) &

:: (c4,c6,c9 are_collinear) &

:: (c3,c7,c9 are_collinear) &

:: (c2,c6,c10 are_collinear) &

:: (c3,c5,c10 are_collinear) &

:: (c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c2,c3,c7
::  are_collinear or c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or
::  c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or c2,c7,c5
::  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
::  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
::  are_collinear or c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or
::  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or  not c4,c5,c8
::  are_collinear or  not c4,c6,c9 are_collinear or  not c2,c7,c8
::  are_collinear or  not c2,c6,c10 are_collinear or  not c3,c7,c9
::  are_collinear or  not c3,c5,c10 are_collinear)
:: implies contradiction
:: proof

::  A1: for v0 holds v0=v0;

:: A2: for v2,v0,v1 holds  not v0=v1 or v1,v0,v2 are_collinear by COLLSP:2;

::  A3: for v0,v2,v1 holds  not v0=v1 or v1,v2,v0 are_collinear by COLLSP:2;

::  A4: for v0,v1,v2 holds  not v0=v1 or v2,v1,v0 are_collinear by COLLSP:2,3,4,5,8;

::  A5: for v2,v1,v0 holds  not v0,v1,v2 are_collinear or v1,v0,v2
::  are_collinear by COLLSP:2,3,4,5,8;

::  A6: for v2,v1,v0 holds  not v0,v1,v2 are_collinear or v0,v2,v1
::  are_collinear by COLLSP:2,3,4,5,8;

::  A7: for v2,v1,v0 holds  not v0,v1,v2 are_collinear or v1,v2,v0
::  are_collinear by HESSENBE:1,2,3,4;

::  A8: for v2,v3,v0,v1 holds v0=v1 or  not v1,v0,v2 are_collinear
::  or  not v1,v0,v3 are_collinear or v1,v2,v3 are_collinear by HESSENBE:1,2,3,4;

::  A9: for v2,v3,v4,v0,v1 holds v0=v1 or  not v2,v3,v1
::  are_collinear or  not v2,v3,v0 are_collinear or  not v1,v0,v4
::  are_collinear or v2,v3,v4 are_collinear by HESSENBE:1,2,3,4;

:: assume A10:  not c2=c1;

:: assume A11:  not c3=c1;

:: assume A12:  not c3=c2;

:: assume A13:  not c4=c2;

:: assume A14:  not c4=c3;

:: assume A15:  not c5=c1;

:: assume A16:  not c6=c1;

:: assume A17:  not c6=c5;

:: assume A18:  not c7=c5;

:: assume A19:  not c7=c6;

:: assume A20:  not c1,c4,c7 are_collinear;

:: assume A21: c1,c4,c2 are_collinear;

:: assume A22: c1,c4,c3 are_collinear;

:: assume A23: c1,c7,c5 are_collinear;

:: assume A24: c1,c7,c6 are_collinear;

:: assume A25: c4,c5,c8 are_collinear;

:: assume A26: c7,c2,c8 are_collinear;

:: assume A27: c4,c6,c9 are_collinear;

:: assume A28: c3,c7,c9 are_collinear;

:: assume A29: c2,c6,c10 are_collinear;

:: assume A30: c3,c5,c10 are_collinear;

:: assume A31: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or
::  c2,c3,c7 are_collinear or c4,c2,c5 are_collinear or c4,c2,c6
::  are_collinear or c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or
::  c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c3,c7,c5
::  are_collinear or c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or
::  c2,c3,c6 are_collinear or c7,c5,c4 are_collinear or c7,c6,c4
::  are_collinear or c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or 
::  not c4,c5,c8 are_collinear or  not c4,c6,c9 are_collinear or  not
::  c2,c7,c8 are_collinear or  not c2,c6,c10 are_collinear or  not
::  c3,c7,c9 are_collinear or  not c3,c5,c10 are_collinear;

:: A32: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c2,c3,c7
::  are_collinear or c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or
::  c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or c2,c7,c5
::  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
::  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
::  are_collinear or c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or
::  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or  not c4,c6,c9
::  are_collinear or  not c2,c7,c8 are_collinear or  not c2,c6,c10
::  are_collinear or  not c3,c7,c9 are_collinear or  not c3,c5,c10
::  are_collinear by A25,A31;

:: A33: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c2,c3,c7
::  are_collinear or c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or
::  c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or c2,c7,c5
::  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
::  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
::  are_collinear or c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or
::  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or  not c2,c7,c8
::  are_collinear or  not c2,c6,c10 are_collinear or  not c3,c7,c9
::  are_collinear or  not c3,c5,c10 are_collinear by A27,A32;

:: A34: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c2,c3,c7
::  are_collinear or c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or
::  c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or c2,c7,c5
::  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
::  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
::  are_collinear or c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or
::  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or  not c2,c7,c8
::  are_collinear or  not c3,c7,c9 are_collinear or  not c3,c5,c10
::  are_collinear by A29,A33;

:: A35: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c2,c3,c7
::  are_collinear or c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or
::  c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or c2,c7,c5
::  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
::  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
::  are_collinear or c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or
::  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or  not c2,c7,c8
::  are_collinear or  not c3,c5,c10 are_collinear by A28,A34;

:: A36: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c2,c3,c7
::  are_collinear or c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or
::  c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or c2,c7,c5
::  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
::  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
::  are_collinear or c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or
::  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear or  not c2,c7,c8
::  are_collinear by A30,A35;

:: A37: for v2,v100 holds  not v100=v100 or v100,v2,v100 are_collinear
::  by A3;

:: A38: for v100 holds v100=v100 by A1;

:: A39: for v2,v100 holds v100,v2,v100 are_collinear
:: proof let v2,v100;
::  not v100=v100 or v100,v2,v100 are_collinear by A37;
:: hence thesis by A38;
:: end;

:: A40: for v1,v0 holds v0,v1,v0 are_collinear by A39;

:: A41: for v100,v2 holds  not v100=v100 or v2,v100,v100 are_collinear
::  by A4;

:: A42: for v100 holds v100=v100 by A1;

:: A43: for v100,v2 holds v2,v100,v100 are_collinear
:: proof let v100,v2;
::  not v100=v100 or v2,v100,v100 are_collinear by A41;
:: hence thesis by A42;
:: end;

:: A44: for v1,v0 holds v0,v1,v1 are_collinear by A43;

:: A45:  not c7,c1,c4 are_collinear or c1,c4,c7 are_collinear by A7;

:: A46:  not c7,c1,c4 are_collinear by A45,A20;

:: A47:  not c1,c7,c4 are_collinear or c1,c4,c7 are_collinear by A6;

:: A48:  not c1,c7,c4 are_collinear by A47,A20;

:: A49:  not c4,c1,c7 are_collinear or c1,c4,c7 are_collinear by A5;

:: A50:  not c4,c1,c7 are_collinear by A49,A20;

:: A51:  not c4=c1 or c1,c4,c7 are_collinear by A2;

:: A52:  not c4=c1 by A51,A20;

:: A53: for v103 holds c4=c1 or  not c1,c4,c2 are_collinear or  not
::  c1,c4,v103 are_collinear or c1,c2,v103 are_collinear by A8;

:: A54: for v103 holds c4=c1 or  not c1,c4,v103 are_collinear or
::  c1,c2,v103 are_collinear by A21,A53;

:: A55: for v0 holds c4=c1 or  not c1,c4,v0 are_collinear or c1,c2,v0
::  are_collinear by A54;

:: A56: for v100 holds c4=c1 or  not c1,c4,v100 are_collinear or
::  c1,c2,v100 are_collinear by A55;

:: A57: for v100 holds  not c1,c4,v100 are_collinear or c1,c2,v100
::  are_collinear by A52,A56;

:: A58: for v0 holds  not c1,c4,v0 are_collinear or c1,c2,v0
::  are_collinear by A57;

:: A59:  not c1,c4,c2 are_collinear or c4,c2,c1 are_collinear by A7;

:: A60: c4,c2,c1 are_collinear by A21,A59;

:: A61:  not c1,c4,c2 are_collinear or c1,c2,c4 are_collinear by A6;

:: A62: c1,c2,c4 are_collinear by A21,A61;

:: A63:  not c1,c4,c2 are_collinear or c4,c1,c2 are_collinear by A5;

:: A64: c4,c1,c2 are_collinear by A21,A63;

:: A65:  not c1,c4,c3 are_collinear or c4,c3,c1 are_collinear by A7;

:: A66: c4,c3,c1 are_collinear by A22,A65;

:: A67:  not c1,c4,c3 are_collinear or c4,c1,c3 are_collinear by A5;

:: A68: c4,c1,c3 are_collinear by A22,A67;

:: A69: for v4,v3,v2 holds c3=c2 or  not v2,v3,c2 are_collinear or  not
::  v2,v3,c3 are_collinear or  not c2,c3,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A70: for v4,v3,v2 holds  not v2,v3,c2 are_collinear or  not v2,v3,c3
::  are_collinear or  not c2,c3,v4 are_collinear or v2,v3,v4
::  are_collinear by A69,A12;

:: A71: for v2,v1,v0 holds  not v0,v1,c2 are_collinear or  not v0,v1,c3
::  are_collinear or  not c2,c3,v2 are_collinear or v0,v1,v2
::  are_collinear by A70;

:: A72: for v2 holds  not c1,c4,c2 are_collinear or  not c1,c4,c3
::  are_collinear or  not c2,c3,v2 are_collinear or c1,c4,v2
::  are_collinear by A71;

:: A73: for v2 holds  not c1,c4,c3 are_collinear or  not c2,c3,v2
::  are_collinear or c1,c4,v2 are_collinear by A72,A21;

:: A74: for v0 holds  not c1,c4,c3 are_collinear or  not c2,c3,v0
::  are_collinear or c1,c4,v0 are_collinear by A73;

:: A75: for v0 holds  not c1,c4,c3 are_collinear or  not c2,c3,v0
::  are_collinear or c1,c4,v0 are_collinear by A74;

:: A76: for v0 holds  not c2,c3,v0 are_collinear or c1,c4,v0
::  are_collinear by A75,A22;

:: A77:  not c2,c3,c7 are_collinear or c1,c4,c7 are_collinear by A76;

:: A78:  not c2,c3,c7 are_collinear by A77,A20;

:: A79: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c4,c2,c5
::  are_collinear or c4,c2,c6 are_collinear or c4,c3,c5 are_collinear or
::  c4,c3,c6 are_collinear or c2,c7,c5 are_collinear or c2,c7,c6
::  are_collinear or c3,c7,c5 are_collinear or c3,c7,c6 are_collinear or
::  c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or c7,c5,c4
::  are_collinear or c7,c6,c4 are_collinear or c5,c6,c4 are_collinear or
::  c5,c6,c2 are_collinear or  not c2,c7,c8 are_collinear by A78,A36;

:: A80:  not c1,c7,c5 are_collinear or c7,c5,c1 are_collinear by A7;

:: A81: c7,c5,c1 are_collinear by A23,A80;

:: A82:  not c1,c7,c5 are_collinear or c1,c5,c7 are_collinear by A6;

:: A83: c1,c5,c7 are_collinear by A23,A82;

:: A84:  not c1,c7,c5 are_collinear or c7,c1,c5 are_collinear by A5;

:: A85: c7,c1,c5 are_collinear by A23,A84;

:: A86:  not c1,c7,c6 are_collinear or c7,c6,c1 are_collinear by A7;

:: A87: c7,c6,c1 are_collinear by A24,A86;

:: A88:  not c1,c7,c6 are_collinear or c1,c6,c7 are_collinear by A6;

:: A89: c1,c6,c7 are_collinear by A24,A88;

:: A90:  not c1,c7,c6 are_collinear or c7,c1,c6 are_collinear by A5;

:: A91: c7,c1,c6 are_collinear by A24,A90;

:: A92:  not c7,c2,c8 are_collinear or c2,c7,c8 are_collinear by A5;

:: A93: c2,c7,c8 are_collinear by A26,A92;

:: A94: c4,c2,c7 are_collinear or c4,c3,c7 are_collinear or c4,c2,c5
::  are_collinear or c4,c2,c6 are_collinear or c4,c3,c5 are_collinear or
::  c4,c3,c6 are_collinear or c2,c7,c5 are_collinear or c2,c7,c6
::  are_collinear or c3,c7,c5 are_collinear or c3,c7,c6 are_collinear or
::  c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or c7,c5,c4
::  are_collinear or c7,c6,c4 are_collinear or c5,c6,c4 are_collinear or
::  c5,c6,c2 are_collinear by A93,A79;

:: A95: for v4,v3,v2 holds c1=c3 or  not v2,v3,c3 are_collinear or  not
::  v2,v3,c1 are_collinear or  not c3,c1,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A96:  not c1=c3 by A11;

:: A97: for v4,v3,v2 holds  not v2,v3,c3 are_collinear or  not v2,v3,c1
::  are_collinear or  not c3,c1,v4 are_collinear or v2,v3,v4
::  are_collinear by A95,A96;

:: A98: for v2,v1,v0 holds  not v0,v1,c3 are_collinear or  not v0,v1,c1
::  are_collinear or  not c3,c1,v2 are_collinear or v0,v1,v2
::  are_collinear by A97;

:: A99: for v2 holds  not c1,c4,c3 are_collinear or  not c1,c4,c1
::  are_collinear or  not c3,c1,v2 are_collinear or c1,c4,v2
::  are_collinear by A98;

:: A100: for v2 holds  not c1,c4,c1 are_collinear or  not c3,c1,v2
::  are_collinear or c1,c4,v2 are_collinear by A99,A22;

:: A101: for v0 holds  not c1,c4,c1 are_collinear or  not c3,c1,v0
::  are_collinear or c1,c4,v0 are_collinear by A100;

:: A102: for v0 holds  not c1,c4,c1 are_collinear or  not c3,c1,v0
::  are_collinear or c1,c4,v0 are_collinear by A101;

:: A103: c1,c4,c1 are_collinear by A40;

:: A104: for v0 holds  not c3,c1,v0 are_collinear or c1,c4,v0
::  are_collinear by A102,A103;

:: A105:  not c3,c1,c7 are_collinear or c1,c4,c7 are_collinear by A104;

:: A106:  not c3,c1,c7 are_collinear by A105,A20;

:: A107: for v4,v3,v2 holds c1=c2 or  not v2,v3,c2 are_collinear or  not
::  v2,v3,c1 are_collinear or  not c2,c1,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A108:  not c1=c2 by A10;

:: A109: for v4,v3,v2 holds  not v2,v3,c2 are_collinear or  not v2,v3,c1
::  are_collinear or  not c2,c1,v4 are_collinear or v2,v3,v4
::  are_collinear by A107,A108;

:: A110: for v2,v1,v0 holds  not v0,v1,c2 are_collinear or  not v0,v1,c1
::  are_collinear or  not c2,c1,v2 are_collinear or v0,v1,v2
::  are_collinear by A109;

:: A111: for v2 holds  not c1,c4,c2 are_collinear or  not c1,c4,c1
::  are_collinear or  not c2,c1,v2 are_collinear or c1,c4,v2
::  are_collinear by A110;

:: A112: for v2 holds  not c1,c4,c1 are_collinear or  not c2,c1,v2
::  are_collinear or c1,c4,v2 are_collinear by A111,A21;

:: A113: for v0 holds  not c1,c4,c1 are_collinear or  not c2,c1,v0
::  are_collinear or c1,c4,v0 are_collinear by A112;

:: A114: for v0 holds  not c1,c4,c1 are_collinear or  not c2,c1,v0
::  are_collinear or c1,c4,v0 are_collinear by A113;

:: A115: c1,c4,c1 are_collinear by A40;

:: A116: for v0 holds  not c2,c1,v0 are_collinear or c1,c4,v0
::  are_collinear by A114,A115;

:: A117:  not c2,c1,c7 are_collinear or c1,c4,c7 are_collinear by A116;

:: A118:  not c2,c1,c7 are_collinear by A117,A20;

:: A119: for v4,v3,v2 holds c3=c4 or  not v2,v3,c4 are_collinear or  not
::  v2,v3,c3 are_collinear or  not c4,c3,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A120:  not c3=c4 by A14;

:: A121: for v4,v3,v2 holds  not v2,v3,c4 are_collinear or  not v2,v3,c3
::  are_collinear or  not c4,c3,v4 are_collinear or v2,v3,v4
::  are_collinear by A119,A120;

:: A122: for v2,v1,v0 holds  not v0,v1,c4 are_collinear or  not v0,v1,c3
::  are_collinear or  not c4,c3,v2 are_collinear or v0,v1,v2
::  are_collinear by A121;

:: A123: for v2,v100 holds  not v100,c4,c4 are_collinear or  not
::  v100,c4,c3 are_collinear or  not c4,c3,v2 are_collinear or v100,c4,v2
::  are_collinear by A122;

:: A124: for v100 holds v100,c4,c4 are_collinear by A44;

:: A125: for v2,v100 holds  not v100,c4,c3 are_collinear or  not
::  c4,c3,v2 are_collinear or v100,c4,v2 are_collinear
:: proof let v2,v100;
::  not v100,c4,c4 are_collinear or  not v100,c4,c3 are_collinear or 
::  not c4,c3,v2 are_collinear or v100,c4,v2 are_collinear by A123;
:: hence thesis by A124;
:: end;

:: A126: for v1,v0 holds  not v0,c4,c3 are_collinear or  not c4,c3,v1
::  are_collinear or v0,c4,v1 are_collinear by A125;

:: A127: for v1 holds  not c1,c4,c3 are_collinear or  not c4,c3,v1
::  are_collinear or c1,c4,v1 are_collinear by A126;

:: A128: for v1 holds  not c4,c3,v1 are_collinear or c1,c4,v1
::  are_collinear by A127,A22;

:: A129: for v0 holds  not c4,c3,v0 are_collinear or c1,c4,v0
::  are_collinear by A128;

:: A130:  not c4,c3,c7 are_collinear or c1,c4,c7 are_collinear by A129;

:: A131:  not c4,c3,c7 are_collinear by A130,A20;

:: A132: for v4,v3,v2 holds c2=c4 or  not v2,v3,c4 are_collinear or  not
::  v2,v3,c2 are_collinear or  not c4,c2,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A133:  not c2=c4 by A13;

:: A134: for v4,v3,v2 holds  not v2,v3,c4 are_collinear or  not v2,v3,c2
::  are_collinear or  not c4,c2,v4 are_collinear or v2,v3,v4
::  are_collinear by A132,A133;

:: A135: for v2,v1,v0 holds  not v0,v1,c4 are_collinear or  not v0,v1,c2
::  are_collinear or  not c4,c2,v2 are_collinear or v0,v1,v2
::  are_collinear by A134;

:: A136: for v2,v100 holds  not v100,c4,c4 are_collinear or  not
::  v100,c4,c2 are_collinear or  not c4,c2,v2 are_collinear or v100,c4,v2
::  are_collinear by A135;

:: A137: for v100 holds v100,c4,c4 are_collinear by A44;

:: A138: for v2,v100 holds  not v100,c4,c2 are_collinear or  not
::  c4,c2,v2 are_collinear or v100,c4,v2 are_collinear
:: proof let v2,v100;
::  not v100,c4,c4 are_collinear or  not v100,c4,c2 are_collinear or 
::  not c4,c2,v2 are_collinear or v100,c4,v2 are_collinear by A136;
:: hence thesis by A137;
:: end;

:: A139: for v1,v0 holds  not v0,c4,c2 are_collinear or  not c4,c2,v1
::  are_collinear or v0,c4,v1 are_collinear by A138;

:: A140: for v1 holds  not c1,c4,c2 are_collinear or  not c4,c2,v1
::  are_collinear or c1,c4,v1 are_collinear by A139;

:: A141: for v1 holds  not c4,c2,v1 are_collinear or c1,c4,v1
::  are_collinear by A140,A21;

:: A142: for v0 holds  not c4,c2,v0 are_collinear or c1,c4,v0
::  are_collinear by A141;

:: A143:  not c4,c2,c7 are_collinear or c1,c4,c7 are_collinear by A142;

:: A144:  not c4,c2,c7 are_collinear by A143,A20;

:: A145: c4,c3,c7 are_collinear or c4,c2,c5 are_collinear or c4,c2,c6
::  are_collinear or c4,c3,c5 are_collinear or c4,c3,c6 are_collinear or
::  c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c3,c7,c5
::  are_collinear or c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or
::  c2,c3,c6 are_collinear or c7,c5,c4 are_collinear or c7,c6,c4
::  are_collinear or c5,c6,c4 are_collinear or c5,c6,c2 are_collinear by
::  A144,A94;

:: A146: c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or c4,c3,c5
::  are_collinear or c4,c3,c6 are_collinear or c2,c7,c5 are_collinear or
::  c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or c3,c7,c6
::  are_collinear or c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or
::  c7,c5,c4 are_collinear or c7,c6,c4 are_collinear or c5,c6,c4
::  are_collinear or c5,c6,c2 are_collinear by A131,A145;

:: A147: for v4,v3,v2 holds c2=c1 or  not v2,v3,c1 are_collinear or  not
::  v2,v3,c2 are_collinear or  not c1,c2,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A148: for v4,v3,v2 holds  not v2,v3,c1 are_collinear or  not v2,v3,c2
::  are_collinear or  not c1,c2,v4 are_collinear or v2,v3,v4
::  are_collinear by A147,A10;

:: A149: for v2,v1,v0 holds  not v0,v1,c1 are_collinear or  not v0,v1,c2
::  are_collinear or  not c1,c2,v2 are_collinear or v0,v1,v2
::  are_collinear by A148;

:: A150: for v2,v100 holds  not v100,c1,c1 are_collinear or  not
::  v100,c1,c2 are_collinear or  not c1,c2,v2 are_collinear or v100,c1,v2
::  are_collinear by A149;

:: A151: for v100 holds v100,c1,c1 are_collinear by A44;

:: A152: for v2,v100 holds  not v100,c1,c2 are_collinear or  not
::  c1,c2,v2 are_collinear or v100,c1,v2 are_collinear
:: proof let v2,v100;
::  not v100,c1,c1 are_collinear or  not v100,c1,c2 are_collinear or 
::  not c1,c2,v2 are_collinear or v100,c1,v2 are_collinear by A150;
:: hence thesis by A151;
:: end;

:: A153: for v1,v0 holds  not v0,c1,c2 are_collinear or  not c1,c2,v1
::  are_collinear or v0,c1,v1 are_collinear by A152;

:: A154: for v0 holds  not v0,c1,c2 are_collinear or  not c1,c2,c4
::  are_collinear or v0,c1,c4 are_collinear by A153;

:: A155: for v0 holds  not v0,c1,c2 are_collinear or v0,c1,c4
::  are_collinear by A154,A62;

:: A156:  not c7,c1,c2 are_collinear or c7,c1,c4 are_collinear by A155;

:: A157:  not c7,c1,c2 are_collinear by A156,A46;

:: A158: for v4,v3,v2 holds c6=c5 or  not v2,v3,c5 are_collinear or  not
::  v2,v3,c6 are_collinear or  not c5,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A159: for v4,v3,v2 holds  not v2,v3,c5 are_collinear or  not v2,v3,c6
::  are_collinear or  not c5,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A158,A17;

:: A160: for v2,v1,v0 holds  not v0,v1,c5 are_collinear or  not v0,v1,c6
::  are_collinear or  not c5,c6,v2 are_collinear or v0,v1,v2
::  are_collinear by A159;

:: A161: for v2 holds  not c1,c7,c5 are_collinear or  not c1,c7,c6
::  are_collinear or  not c5,c6,v2 are_collinear or c1,c7,v2
::  are_collinear by A160;

:: A162: for v2 holds  not c1,c7,c6 are_collinear or  not c5,c6,v2
::  are_collinear or c1,c7,v2 are_collinear by A161,A23;

:: A163: for v0 holds  not c1,c7,c6 are_collinear or  not c5,c6,v0
::  are_collinear or c1,c7,v0 are_collinear by A162;

:: A164: for v0 holds  not c1,c7,c6 are_collinear or  not c5,c6,v0
::  are_collinear or c1,c7,v0 are_collinear by A163;

:: A165: for v0 holds  not c5,c6,v0 are_collinear or c1,c7,v0
::  are_collinear by A164,A24;

:: A166:  not c5,c6,c4 are_collinear or c1,c7,c4 are_collinear by A165;

:: A167:  not c5,c6,c4 are_collinear by A166,A48;

:: A168: for v4,v3,v2 holds c6=c7 or  not v2,v3,c7 are_collinear or  not
::  v2,v3,c6 are_collinear or  not c7,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A169:  not c6=c7 by A19;

:: A170: for v4,v3,v2 holds  not v2,v3,c7 are_collinear or  not v2,v3,c6
::  are_collinear or  not c7,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A168,A169;

:: A171: for v2,v1,v0 holds  not v0,v1,c7 are_collinear or  not v0,v1,c6
::  are_collinear or  not c7,c6,v2 are_collinear or v0,v1,v2
::  are_collinear by A170;

:: A172: for v2,v100 holds  not v100,c7,c7 are_collinear or  not
::  v100,c7,c6 are_collinear or  not c7,c6,v2 are_collinear or v100,c7,v2
::  are_collinear by A171;

:: A173: for v100 holds v100,c7,c7 are_collinear by A44;

:: A174: for v2,v100 holds  not v100,c7,c6 are_collinear or  not
::  c7,c6,v2 are_collinear or v100,c7,v2 are_collinear
:: proof let v2,v100;
::  not v100,c7,c7 are_collinear or  not v100,c7,c6 are_collinear or 
::  not c7,c6,v2 are_collinear or v100,c7,v2 are_collinear by A172;
:: hence thesis by A173;
:: end;

:: A175: for v1,v0 holds  not v0,c7,c6 are_collinear or  not c7,c6,v1
::  are_collinear or v0,c7,v1 are_collinear by A174;

:: A176: for v1 holds  not c1,c7,c6 are_collinear or  not c7,c6,v1
::  are_collinear or c1,c7,v1 are_collinear by A175;

:: A177: for v1 holds  not c7,c6,v1 are_collinear or c1,c7,v1
::  are_collinear by A176,A24;

:: A178: for v0 holds  not c7,c6,v0 are_collinear or c1,c7,v0
::  are_collinear by A177;

:: A179:  not c7,c6,c4 are_collinear or c1,c7,c4 are_collinear by A178;

:: A180:  not c7,c6,c4 are_collinear by A179,A48;

:: A181: for v4,v3,v2 holds c5=c7 or  not v2,v3,c7 are_collinear or  not
::  v2,v3,c5 are_collinear or  not c7,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A182:  not c5=c7 by A18;

:: A183: for v4,v3,v2 holds  not v2,v3,c7 are_collinear or  not v2,v3,c5
::  are_collinear or  not c7,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A181,A182;

:: A184: for v2,v1,v0 holds  not v0,v1,c7 are_collinear or  not v0,v1,c5
::  are_collinear or  not c7,c5,v2 are_collinear or v0,v1,v2
::  are_collinear by A183;

:: A185: for v2,v100 holds  not v100,c7,c7 are_collinear or  not
::  v100,c7,c5 are_collinear or  not c7,c5,v2 are_collinear or v100,c7,v2
::  are_collinear by A184;

:: A186: for v100 holds v100,c7,c7 are_collinear by A44;

:: A187: for v2,v100 holds  not v100,c7,c5 are_collinear or  not
::  c7,c5,v2 are_collinear or v100,c7,v2 are_collinear
:: proof let v2,v100;
::  not v100,c7,c7 are_collinear or  not v100,c7,c5 are_collinear or 
::  not c7,c5,v2 are_collinear or v100,c7,v2 are_collinear by A185;
:: hence thesis by A186;
:: end;

:: A188: for v1,v0 holds  not v0,c7,c5 are_collinear or  not c7,c5,v1
::  are_collinear or v0,c7,v1 are_collinear by A187;

:: A189: for v1 holds  not c1,c7,c5 are_collinear or  not c7,c5,v1
::  are_collinear or c1,c7,v1 are_collinear by A188;

:: A190: for v1 holds  not c7,c5,v1 are_collinear or c1,c7,v1
::  are_collinear by A189,A23;

:: A191: for v0 holds  not c7,c5,v0 are_collinear or c1,c7,v0
::  are_collinear by A190;

:: A192:  not c7,c5,c4 are_collinear or c1,c7,c4 are_collinear by A191;

:: A193:  not c7,c5,c4 are_collinear by A192,A48;

:: A194: c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or c4,c3,c5
::  are_collinear or c4,c3,c6 are_collinear or c2,c7,c5 are_collinear or
::  c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or c3,c7,c6
::  are_collinear or c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or
::  c7,c6,c4 are_collinear or c5,c6,c4 are_collinear or c5,c6,c2
::  are_collinear by A193,A146;

:: A195: c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or c4,c3,c5
::  are_collinear or c4,c3,c6 are_collinear or c2,c7,c5 are_collinear or
::  c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or c3,c7,c6
::  are_collinear or c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or
::  c5,c6,c4 are_collinear or c5,c6,c2 are_collinear by A180,A194;

:: A196: c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or c4,c3,c5
::  are_collinear or c4,c3,c6 are_collinear or c2,c7,c5 are_collinear or
::  c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or c3,c7,c6
::  are_collinear or c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or
::  c5,c6,c2 are_collinear by A167,A195;

:: A197:  not c7=c3 or c2,c3,c7 are_collinear by A4;

:: A198:  not c7=c3 by A197,A78;

:: A199:  not c7=c2 or c2,c3,c7 are_collinear by A3;

:: A200:  not c7=c2 by A199,A78;

:: A201: for v3,v2 holds c7=c3 or  not c3,c7,v2 are_collinear or  not
::  c3,c7,v3 are_collinear or c3,v2,v3 are_collinear by A8;

:: A202: for v3,v2 holds  not c3,c7,v2 are_collinear or  not c3,c7,v3
::  are_collinear or c3,v2,v3 are_collinear by A201,A198;

:: A203: for v1,v0 holds  not c3,c7,v0 are_collinear or  not c3,c7,v1
::  are_collinear or c3,v0,v1 are_collinear by A202;

:: A204: for v0 holds  not c3,c7,v0 are_collinear or  not c3,c7,c7
::  are_collinear or c3,v0,c7 are_collinear by A203;

:: A205: c3,c7,c7 are_collinear by A44;

:: A206: for v0 holds  not c3,c7,v0 are_collinear or c3,v0,c7
::  are_collinear by A204,A205;

:: A207:  not c3,c7,c1 are_collinear or c3,c1,c7 are_collinear by A206;

:: A208:  not c3,c7,c1 are_collinear by A207,A106;

:: A209:  not c7,c5,c1 are_collinear or c5,c7,c1 are_collinear by A5;

:: A210: c5,c7,c1 are_collinear by A81,A209;

:: A211: for v4,v3,v2 holds c5=c1 or  not v2,v3,c1 are_collinear or  not
::  v2,v3,c5 are_collinear or  not c1,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A212: for v4,v3,v2 holds  not v2,v3,c1 are_collinear or  not v2,v3,c5
::  are_collinear or  not c1,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A211,A15;

:: A213: for v2,v1,v0 holds  not v0,v1,c1 are_collinear or  not v0,v1,c5
::  are_collinear or  not c1,c5,v2 are_collinear or v0,v1,v2
::  are_collinear by A212;

:: A214: for v2,v100 holds  not v100,c1,c1 are_collinear or  not
::  v100,c1,c5 are_collinear or  not c1,c5,v2 are_collinear or v100,c1,v2
::  are_collinear by A213;

:: A215: for v100 holds v100,c1,c1 are_collinear by A44;

:: A216: for v2,v100 holds  not v100,c1,c5 are_collinear or  not
::  c1,c5,v2 are_collinear or v100,c1,v2 are_collinear
:: proof let v2,v100;
::  not v100,c1,c1 are_collinear or  not v100,c1,c5 are_collinear or 
::  not c1,c5,v2 are_collinear or v100,c1,v2 are_collinear by A214;
:: hence thesis by A215;
:: end;

:: A217: for v1,v0 holds  not v0,c1,c5 are_collinear or  not c1,c5,v1
::  are_collinear or v0,c1,v1 are_collinear by A216;

:: A218: for v0 holds  not v0,c1,c5 are_collinear or  not c1,c5,c7
::  are_collinear or v0,c1,c7 are_collinear by A217;

:: A219: for v0 holds  not v0,c1,c5 are_collinear or v0,c1,c7
::  are_collinear by A218,A83;

:: A220:  not c4,c1,c5 are_collinear or c4,c1,c7 are_collinear by A219;

:: A221:  not c4,c1,c5 are_collinear by A220,A50;

:: A222:  not c7,c6,c1 are_collinear or c6,c1,c7 are_collinear by A7;

:: A223: c6,c1,c7 are_collinear by A87,A222;

:: A224:  not c7,c6,c1 are_collinear or c6,c7,c1 are_collinear by A5;

:: A225: c6,c7,c1 are_collinear by A87,A224;

:: A226: for v3,v2 holds c7=c2 or  not c2,c7,v2 are_collinear or  not
::  c2,c7,v3 are_collinear or c2,v2,v3 are_collinear by A8;

:: A227: for v3,v2 holds  not c2,c7,v2 are_collinear or  not c2,c7,v3
::  are_collinear or c2,v2,v3 are_collinear by A226,A200;

:: A228: for v1,v0 holds  not c2,c7,v0 are_collinear or  not c2,c7,v1
::  are_collinear or c2,v0,v1 are_collinear by A227;

:: A229: for v0 holds  not c2,c7,v0 are_collinear or  not c2,c7,c7
::  are_collinear or c2,v0,c7 are_collinear by A228;

:: A230: c2,c7,c7 are_collinear by A44;

:: A231: for v0 holds  not c2,c7,v0 are_collinear or c2,v0,c7
::  are_collinear by A229,A230;

:: A232:  not c2,c7,c1 are_collinear or c2,c1,c7 are_collinear by A231;

:: A233:  not c2,c7,c1 are_collinear by A232,A118;

:: A234: for v4,v3,v2 holds c6=c1 or  not v2,v3,c1 are_collinear or  not
::  v2,v3,c6 are_collinear or  not c1,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A235: for v4,v3,v2 holds  not v2,v3,c1 are_collinear or  not v2,v3,c6
::  are_collinear or  not c1,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A234,A16;

:: A236: for v2,v1,v0 holds  not v0,v1,c1 are_collinear or  not v0,v1,c6
::  are_collinear or  not c1,c6,v2 are_collinear or v0,v1,v2
::  are_collinear by A235;

:: A237: for v2 holds  not c4,c3,c1 are_collinear or  not c4,c3,c6
::  are_collinear or  not c1,c6,v2 are_collinear or c4,c3,v2
::  are_collinear by A236;

:: A238: for v2 holds  not c4,c3,c6 are_collinear or  not c1,c6,v2
::  are_collinear or c4,c3,v2 are_collinear by A237,A66;

:: A239: for v0 holds  not c4,c3,c6 are_collinear or  not c1,c6,v0
::  are_collinear or c4,c3,v0 are_collinear by A238;

:: A240:  not c4,c3,c6 are_collinear or  not c1,c6,c7 are_collinear or
::  c4,c3,c7 are_collinear by A239;

:: A241:  not c4,c3,c6 are_collinear or c4,c3,c7 are_collinear by
::  A240,A89;

:: A242:  not c4,c3,c6 are_collinear by A241,A131;

:: A243: for v4,v3,v2 holds c5=c1 or  not v2,v3,c1 are_collinear or  not
::  v2,v3,c5 are_collinear or  not c1,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A244: for v4,v3,v2 holds  not v2,v3,c1 are_collinear or  not v2,v3,c5
::  are_collinear or  not c1,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A243,A15;

:: A245: for v2,v1,v0 holds  not v0,v1,c1 are_collinear or  not v0,v1,c5
::  are_collinear or  not c1,c5,v2 are_collinear or v0,v1,v2
::  are_collinear by A244;

:: A246: for v2 holds  not c4,c3,c1 are_collinear or  not c4,c3,c5
::  are_collinear or  not c1,c5,v2 are_collinear or c4,c3,v2
::  are_collinear by A245;

:: A247: for v2 holds  not c4,c3,c5 are_collinear or  not c1,c5,v2
::  are_collinear or c4,c3,v2 are_collinear by A246,A66;

:: A248: for v0 holds  not c4,c3,c5 are_collinear or  not c1,c5,v0
::  are_collinear or c4,c3,v0 are_collinear by A247;

:: A249:  not c4,c3,c5 are_collinear or  not c1,c5,c7 are_collinear or
::  c4,c3,c7 are_collinear by A248;

:: A250:  not c4,c3,c5 are_collinear or c4,c3,c7 are_collinear by
::  A249,A83;

:: A251:  not c4,c3,c5 are_collinear by A250,A131;

:: A252: c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or c4,c3,c6
::  are_collinear or c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or
::  c3,c7,c5 are_collinear or c3,c7,c6 are_collinear or c2,c3,c5
::  are_collinear or c2,c3,c6 are_collinear or c5,c6,c2 are_collinear by
::  A251,A196;

:: A253: c4,c2,c5 are_collinear or c4,c2,c6 are_collinear or c2,c7,c5
::  are_collinear or c2,c7,c6 are_collinear or c3,c7,c5 are_collinear or
::  c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or c2,c3,c6
::  are_collinear or c5,c6,c2 are_collinear by A242,A252;

:: A254: for v4,v3,v2 holds c6=c1 or  not v2,v3,c1 are_collinear or  not
::  v2,v3,c6 are_collinear or  not c1,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A255: for v4,v3,v2 holds  not v2,v3,c1 are_collinear or  not v2,v3,c6
::  are_collinear or  not c1,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A254,A16;

:: A256: for v2,v1,v0 holds  not v0,v1,c1 are_collinear or  not v0,v1,c6
::  are_collinear or  not c1,c6,v2 are_collinear or v0,v1,v2
::  are_collinear by A255;

:: A257: for v2 holds  not c4,c2,c1 are_collinear or  not c4,c2,c6
::  are_collinear or  not c1,c6,v2 are_collinear or c4,c2,v2
::  are_collinear by A256;

:: A258: for v2 holds  not c4,c2,c6 are_collinear or  not c1,c6,v2
::  are_collinear or c4,c2,v2 are_collinear by A257,A60;

:: A259: for v0 holds  not c4,c2,c6 are_collinear or  not c1,c6,v0
::  are_collinear or c4,c2,v0 are_collinear by A258;

:: A260:  not c4,c2,c6 are_collinear or  not c1,c6,c7 are_collinear or
::  c4,c2,c7 are_collinear by A259;

:: A261:  not c4,c2,c6 are_collinear or c4,c2,c7 are_collinear by
::  A260,A89;

:: A262:  not c4,c2,c6 are_collinear by A261,A144;

:: A263: for v4,v3,v2 holds c5=c1 or  not v2,v3,c1 are_collinear or  not
::  v2,v3,c5 are_collinear or  not c1,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A264: for v4,v3,v2 holds  not v2,v3,c1 are_collinear or  not v2,v3,c5
::  are_collinear or  not c1,c5,v4 are_collinear or v2,v3,v4
::  are_collinear by A263,A15;

:: A265: for v2,v1,v0 holds  not v0,v1,c1 are_collinear or  not v0,v1,c5
::  are_collinear or  not c1,c5,v2 are_collinear or v0,v1,v2
::  are_collinear by A264;

:: A266: for v2 holds  not c4,c2,c1 are_collinear or  not c4,c2,c5
::  are_collinear or  not c1,c5,v2 are_collinear or c4,c2,v2
::  are_collinear by A265;

:: A267: for v2 holds  not c4,c2,c5 are_collinear or  not c1,c5,v2
::  are_collinear or c4,c2,v2 are_collinear by A266,A60;

:: A268: for v0 holds  not c4,c2,c5 are_collinear or  not c1,c5,v0
::  are_collinear or c4,c2,v0 are_collinear by A267;

:: A269:  not c4,c2,c5 are_collinear or  not c1,c5,c7 are_collinear or
::  c4,c2,c7 are_collinear by A268;

:: A270:  not c4,c2,c5 are_collinear or c4,c2,c7 are_collinear by
::  A269,A83;

:: A271:  not c4,c2,c5 are_collinear by A270,A144;

:: A272: c4,c2,c6 are_collinear or c2,c7,c5 are_collinear or c2,c7,c6
::  are_collinear or c3,c7,c5 are_collinear or c3,c7,c6 are_collinear or
::  c2,c3,c5 are_collinear or c2,c3,c6 are_collinear or c5,c6,c2
::  are_collinear by A271,A253;

:: A273: c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c3,c7,c5
::  are_collinear or c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or
::  c2,c3,c6 are_collinear or c5,c6,c2 are_collinear by A262,A272;

:: A274: for v4,v3,v2 holds c6=c5 or  not v2,v3,c5 are_collinear or  not
::  v2,v3,c6 are_collinear or  not c5,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A275: for v4,v3,v2 holds  not v2,v3,c5 are_collinear or  not v2,v3,c6
::  are_collinear or  not c5,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A274,A17;

:: A276: for v2,v1,v0 holds  not v0,v1,c5 are_collinear or  not v0,v1,c6
::  are_collinear or  not c5,c6,v2 are_collinear or v0,v1,v2
::  are_collinear by A275;

:: A277: for v2 holds  not c7,c1,c5 are_collinear or  not c7,c1,c6
::  are_collinear or  not c5,c6,v2 are_collinear or c7,c1,v2
::  are_collinear by A276;

:: A278: for v2 holds  not c7,c1,c6 are_collinear or  not c5,c6,v2
::  are_collinear or c7,c1,v2 are_collinear by A277,A85;

:: A279: for v0 holds  not c7,c1,c6 are_collinear or  not c5,c6,v0
::  are_collinear or c7,c1,v0 are_collinear by A278;

:: A280: for v0 holds  not c7,c1,c6 are_collinear or  not c5,c6,v0
::  are_collinear or c7,c1,v0 are_collinear by A279;

:: A281: for v0 holds  not c5,c6,v0 are_collinear or c7,c1,v0
::  are_collinear by A280,A91;

:: A282:  not c5,c6,c2 are_collinear or c7,c1,c2 are_collinear by A281;

:: A283:  not c5,c6,c2 are_collinear by A282,A157;

:: A284: c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c3,c7,c5
::  are_collinear or c3,c7,c6 are_collinear or c2,c3,c5 are_collinear or
::  c2,c3,c6 are_collinear by A283,A273;

:: A285:  not c1,c4,c3 are_collinear or c1,c2,c3 are_collinear by A58;

:: A286: c1,c2,c3 are_collinear by A285,A22;

:: A287: for v4,v3,v2 holds c7=c5 or  not v2,v3,c5 are_collinear or  not
::  v2,v3,c7 are_collinear or  not c5,c7,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A288: for v4,v3,v2 holds  not v2,v3,c5 are_collinear or  not v2,v3,c7
::  are_collinear or  not c5,c7,v4 are_collinear or v2,v3,v4
::  are_collinear by A287,A18;

:: A289: for v2,v1,v0 holds  not v0,v1,c5 are_collinear or  not v0,v1,c7
::  are_collinear or  not c5,c7,v2 are_collinear or v0,v1,v2
::  are_collinear by A288;

:: A290: for v2,v100 holds  not v100,c7,c5 are_collinear or  not
::  v100,c7,c7 are_collinear or  not c5,c7,v2 are_collinear or v100,c7,v2
::  are_collinear by A289;

:: A291: for v100 holds v100,c7,c7 are_collinear by A44;

:: A292: for v2,v100 holds  not v100,c7,c5 are_collinear or  not
::  c5,c7,v2 are_collinear or v100,c7,v2 are_collinear
:: proof let v2,v100;
::  not v100,c7,c5 are_collinear or  not v100,c7,c7 are_collinear or 
::  not c5,c7,v2 are_collinear or v100,c7,v2 are_collinear by A290;
:: hence thesis by A291;
:: end;

:: A293: for v1,v0 holds  not v0,c7,c5 are_collinear or  not c5,c7,v1
::  are_collinear or v0,c7,v1 are_collinear by A292;

:: A294: for v0 holds  not v0,c7,c5 are_collinear or  not c5,c7,c1
::  are_collinear or v0,c7,c1 are_collinear by A293;

:: A295: for v0 holds  not v0,c7,c5 are_collinear or v0,c7,c1
::  are_collinear by A294,A210;

:: A296:  not c3,c7,c5 are_collinear or c3,c7,c1 are_collinear by A295;

:: A297:  not c3,c7,c5 are_collinear by A296,A208;

:: A298: for v4,v3,v2 holds c6=c7 or  not v2,v3,c7 are_collinear or  not
::  v2,v3,c6 are_collinear or  not c7,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A299:  not c6=c7 by A19;

:: A300: for v4,v3,v2 holds  not v2,v3,c7 are_collinear or  not v2,v3,c6
::  are_collinear or  not c7,c6,v4 are_collinear or v2,v3,v4
::  are_collinear by A298,A299;

:: A301: for v2,v1,v0 holds  not v0,v1,c7 are_collinear or  not v0,v1,c6
::  are_collinear or  not c7,c6,v2 are_collinear or v0,v1,v2
::  are_collinear by A300;

:: A302: for v2,v100 holds  not v100,c7,c7 are_collinear or  not
::  v100,c7,c6 are_collinear or  not c7,c6,v2 are_collinear or v100,c7,v2
::  are_collinear by A301;

:: A303: for v100 holds v100,c7,c7 are_collinear by A44;

:: A304: for v2,v100 holds  not v100,c7,c6 are_collinear or  not
::  c7,c6,v2 are_collinear or v100,c7,v2 are_collinear
:: proof let v2,v100;
::  not v100,c7,c7 are_collinear or  not v100,c7,c6 are_collinear or 
::  not c7,c6,v2 are_collinear or v100,c7,v2 are_collinear by A302;
:: hence thesis by A303;
:: end;

:: A305: for v1,v0 holds  not v0,c7,c6 are_collinear or  not c7,c6,v1
::  are_collinear or v0,c7,v1 are_collinear by A304;

:: A306: for v0 holds  not v0,c7,c6 are_collinear or  not c7,c6,c1
::  are_collinear or v0,c7,c1 are_collinear by A305;

:: A307: for v0 holds  not v0,c7,c6 are_collinear or v0,c7,c1
::  are_collinear by A306,A87;

:: A308:  not c3,c7,c6 are_collinear or c3,c7,c1 are_collinear by A307;

:: A309:  not c3,c7,c6 are_collinear by A308,A208;

:: A310: c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c3,c7,c6
::  are_collinear or c2,c3,c5 are_collinear or c2,c3,c6 are_collinear by
::  A297,A284;

:: A311: c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c2,c3,c5
::  are_collinear or c2,c3,c6 are_collinear by A309,A310;

:: A312: for v4,v3,v2 holds c3=c2 or  not v2,v3,c2 are_collinear or  not
::  v2,v3,c3 are_collinear or  not c2,c3,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A313: for v4,v3,v2 holds  not v2,v3,c2 are_collinear or  not v2,v3,c3
::  are_collinear or  not c2,c3,v4 are_collinear or v2,v3,v4
::  are_collinear by A312,A12;

:: A314: for v2,v1,v0 holds  not v0,v1,c2 are_collinear or  not v0,v1,c3
::  are_collinear or  not c2,c3,v2 are_collinear or v0,v1,v2
::  are_collinear by A313;

:: A315: for v2 holds  not c4,c1,c2 are_collinear or  not c4,c1,c3
::  are_collinear or  not c2,c3,v2 are_collinear or c4,c1,v2
::  are_collinear by A314;

:: A316: for v2 holds  not c4,c1,c3 are_collinear or  not c2,c3,v2
::  are_collinear or c4,c1,v2 are_collinear by A315,A64;

:: A317: for v0 holds  not c4,c1,c3 are_collinear or  not c2,c3,v0
::  are_collinear or c4,c1,v0 are_collinear by A316;

:: A318: for v0 holds  not c4,c1,c3 are_collinear or  not c2,c3,v0
::  are_collinear or c4,c1,v0 are_collinear by A317;

:: A319: for v0 holds  not c2,c3,v0 are_collinear or c4,c1,v0
::  are_collinear by A318,A68;

:: A320:  not c2,c3,c5 are_collinear or c4,c1,c5 are_collinear by A319;

:: A321:  not c2,c3,c5 are_collinear by A320,A221;

:: A322: c2,c7,c5 are_collinear or c2,c7,c6 are_collinear or c2,c3,c6
::  are_collinear by A321,A311;

:: A323:  not c1,c2,c3 are_collinear or c2,c3,c1 are_collinear by A7;

:: A324: c2,c3,c1 are_collinear by A286,A323;

:: A325: for v4,v3,v2 holds c7=c6 or  not v2,v3,c6 are_collinear or  not
::  v2,v3,c7 are_collinear or  not c6,c7,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A326: for v4,v3,v2 holds  not v2,v3,c6 are_collinear or  not v2,v3,c7
::  are_collinear or  not c6,c7,v4 are_collinear or v2,v3,v4
::  are_collinear by A325,A19;

:: A327: for v2,v1,v0 holds  not v0,v1,c6 are_collinear or  not v0,v1,c7
::  are_collinear or  not c6,c7,v2 are_collinear or v0,v1,v2
::  are_collinear by A326;

:: A328: for v2,v100 holds  not v100,c7,c6 are_collinear or  not
::  v100,c7,c7 are_collinear or  not c6,c7,v2 are_collinear or v100,c7,v2
::  are_collinear by A327;

:: A329: for v100 holds v100,c7,c7 are_collinear by A44;

:: A330: for v2,v100 holds  not v100,c7,c6 are_collinear or  not
::  c6,c7,v2 are_collinear or v100,c7,v2 are_collinear
:: proof let v2,v100;
::  not v100,c7,c6 are_collinear or  not v100,c7,c7 are_collinear or 
::  not c6,c7,v2 are_collinear or v100,c7,v2 are_collinear by A328;
:: hence thesis by A329;
:: end;

:: A331: for v1,v0 holds  not v0,c7,c6 are_collinear or  not c6,c7,v1
::  are_collinear or v0,c7,v1 are_collinear by A330;

:: A332: for v0 holds  not v0,c7,c6 are_collinear or  not c6,c7,c1
::  are_collinear or v0,c7,c1 are_collinear by A331;

:: A333: for v0 holds  not v0,c7,c6 are_collinear or v0,c7,c1
::  are_collinear by A332,A225;

:: A334:  not c2,c7,c6 are_collinear or c2,c7,c1 are_collinear by A333;

:: A335:  not c2,c7,c6 are_collinear by A334,A233;

:: A336: for v4,v3,v2 holds c7=c5 or  not v2,v3,c5 are_collinear or  not
::  v2,v3,c7 are_collinear or  not c5,c7,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A337: for v4,v3,v2 holds  not v2,v3,c5 are_collinear or  not v2,v3,c7
::  are_collinear or  not c5,c7,v4 are_collinear or v2,v3,v4
::  are_collinear by A336,A18;

:: A338: for v2,v1,v0 holds  not v0,v1,c5 are_collinear or  not v0,v1,c7
::  are_collinear or  not c5,c7,v2 are_collinear or v0,v1,v2
::  are_collinear by A337;

:: A339: for v2,v100 holds  not v100,c7,c5 are_collinear or  not
::  v100,c7,c7 are_collinear or  not c5,c7,v2 are_collinear or v100,c7,v2
::  are_collinear by A338;

:: A340: for v100 holds v100,c7,c7 are_collinear by A44;

:: A341: for v2,v100 holds  not v100,c7,c5 are_collinear or  not
::  c5,c7,v2 are_collinear or v100,c7,v2 are_collinear
:: proof let v2,v100;
::  not v100,c7,c5 are_collinear or  not v100,c7,c7 are_collinear or 
::  not c5,c7,v2 are_collinear or v100,c7,v2 are_collinear by A339;
:: hence thesis by A340;
:: end;

:: A342: for v1,v0 holds  not v0,c7,c5 are_collinear or  not c5,c7,v1
::  are_collinear or v0,c7,v1 are_collinear by A341;

:: A343: for v0 holds  not v0,c7,c5 are_collinear or  not c5,c7,c1
::  are_collinear or v0,c7,c1 are_collinear by A342;

:: A344: for v0 holds  not v0,c7,c5 are_collinear or v0,c7,c1
::  are_collinear by A343,A210;

:: A345:  not c2,c7,c5 are_collinear or c2,c7,c1 are_collinear by A344;

:: A346:  not c2,c7,c5 are_collinear by A345,A233;

:: A347: c2,c7,c6 are_collinear or c2,c3,c6 are_collinear by A346,A322;

:: A348: c2,c3,c6 are_collinear by A335,A347;

:: A349: for v4,v3,v2 holds c1=c6 or  not v2,v3,c6 are_collinear or  not
::  v2,v3,c1 are_collinear or  not c6,c1,v4 are_collinear or v2,v3,v4
::  are_collinear by A9;

:: A350:  not c1=c6 by A16;

:: A351: for v4,v3,v2 holds  not v2,v3,c6 are_collinear or  not v2,v3,c1
::  are_collinear or  not c6,c1,v4 are_collinear or v2,v3,v4
::  are_collinear by A349,A350;

:: A352: for v2,v1,v0 holds  not v0,v1,c6 are_collinear or  not v0,v1,c1
::  are_collinear or  not c6,c1,v2 are_collinear or v0,v1,v2
::  are_collinear by A351;

:: A353: for v2 holds  not c2,c3,c6 are_collinear or  not c2,c3,c1
::  are_collinear or  not c6,c1,v2 are_collinear or c2,c3,v2
::  are_collinear by A352;

:: A354: for v2 holds  not c2,c3,c6 are_collinear or  not c6,c1,v2
::  are_collinear or c2,c3,v2 are_collinear by A353,A324;

:: A355: for v0 holds  not c2,c3,c6 are_collinear or  not c6,c1,v0
::  are_collinear or c2,c3,v0 are_collinear by A354;

:: A356:  not c2,c3,c6 are_collinear or  not c6,c1,c7 are_collinear or
::  c2,c3,c7 are_collinear by A355;

:: A357:  not c2,c3,c6 are_collinear or c2,c3,c7 are_collinear by
::  A356,A223;

:: A358:  not c2,c3,c6 are_collinear by A357,A78;

:: thus A359: contradiction by A348,A358;

:: end;
